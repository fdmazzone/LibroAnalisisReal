%!PS-Adobe-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: schroeder.dvi
%%CreationDate: Thu Feb 11 13:47:29 2016
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMMI10 CMSY7 CMR7 CMR10 CMSY10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -o schroeder.ps schroeder.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.02.11:1347
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D491A1FDD60F7230D5D725D21F531072155D5CA
12045C71F375116E93825D964FE24E272B239E8E12DB85368F11963CBB4E2B4B
EA559F6A1FED7DDAE902017290E4549337A9F6CC3109F1F858213AF70573323B
78B9F56D9A2D6E6BD0FB038E6B0AEB661D95D1669D49D7E93A21C76C8E0B29CA
73D10BB805BC9D2D488FB292E1D014B47ED472B3DD4819A2CB3E370EEE819BCD
8C722A1D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 58 /colon put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
ED277A492B42D88D0E068D61F2BEAF96BFE7F399175DE7D08981736F7DA253EE
331F97DCBB941B1832E3FDBFA7650E0905E062516F27090476AD2FF0CA78B14E
13CD9482201FEA5AFD00A134F3C357412CEE5E264C20C39E157567538D94E69B
6B7F3EC896D42594593A016CB5FD306F440F63F2F8A60EA6030C5280EFF0AB91
AE4F207B84B68DDE13F0F9671B2E7E4B03C30FD2970B441E2914538354E3EEA5
8F730A0094DEDDDC4A1867AE25CFD73B90688BAFC791B2E6517A4E1BA2F39AF2
E407998778B4E07497DA3811243A86115E451D3ED1539E597DF1BB2FFFE276DB
12DF81F103DAC3E3782F964FEB500B32ED3ED63FBFDC0E43AEE3EE3CAE110D57
D53E36D8081D645083CB8C992985DB99D9BD29DC9FC9391448D296F1205CED8C
5111C7471C53D6A973434A3938E1970D8EA3CD40C7B8FB44205899626C10B168
927E4925532684A429F690536B79F694C1293E1438DEEB728CC5B35F801620FA
2EB8E25C29B364450F33AF7305F28FF3FF34DF7BD592A865F81614B15473D597
88E039C0BD01FBB360077A16C6D30991FB63EEDE2E732DFA6BDFB4C1D0D83185
542DA6218503A75C10C35A95B63056A0ED3DDED1C8764477F6328EF65CBC8D3B
ECEB718B49F2297D416D2A3401DAAE76C35A532BAAEBC8A228B58284599EEBB4
250B3B4DE895A70D335D41F59317F44A60ED73DAB72A2F1AC1DF2D2C99CEF50C
236C6047499118755EE07CD09E659FE41B9E9AE8E9D60E06A3E169A1A02B17E1
E5A321FB16C81BC1636D6B4D6D280B4B84778FFA7DC977146FD3B64C7C2FFA65
8BB21E8FAC70D8E3823E35871842BD3E95A8F76885DD0B87E382F1BA066EE793
8A36C655A9CA2E2B7D736DB0F32541B8D32B5C20AEBCF9007B80CA45189BD8A3
B135FE7050A6DD93D6CB6FECC4AE448A1A67E3FF1DCC92B8A4010A5FB94633C8
EA9295B4BC957F62A653018E98A03B7268517394AEC07E4F10FB25DA53070C2B
BB4411D9608F4FF0B2E171883C860572E77BAFCFBDBD48AFE79140EB33D4106D
91CFBDEA52C72153C48DC62B435E2D60435497EFE30E582F20D5864807AE8683
1051F55FD1C3B0A09767B0E3F9185FA9D6EFD6B7F8165A6437F7600D061DA9CC
9C41FC34FEFB523CD77C171DC673154B9C531003F473DCDA9764F56EC19382F2
B86AD651CA2B01DB899C2666127A60C776F97ECFF94C2307EB3C44EC877FCCEF
CDAEA25114CE2484465A56A684012053B3D078122861668F7F6E96C8E7829242
F1E05AA1A3BA678F44AD7BF3CF980657CCE5506A7AC923DC5E300B27F3261549
5E7F26989BF6328610AED78D0AC8A6526EA1459DE51494A639DD781F1C8B62B7
32C93AD6D5252312974C01FD5FE881F9994498B9CA251192A91D5EE10F947975
B3C8FC5D5856C4CD23C29A70F8E71CE392D8FB2087FC991638FFF960D0D38234
AA1C9900C092C65DDAF5DF5891AF008F869D7AF5E4EF1989FD377E90578C7306
0D2FEC1F218A069053CA2B0A1FBF490CC00B0A45B8D17CB74BDAA4BFF6DAB538
0CBF6172F37878D277D9A29A3B03EA96BC30446FA34F89ED1837E82A0995C680
7B6805524A6D24289FF6CE2EB50AF4A027014D43A353D719B14B247A87898A96
0DF68C0C0FE3889279BD833E4CEAF0C80DEFA6AE947F58A30DC4C7CDC1212D0C
80BE2F454A7D8613D0CF64AC5BCC7FF4C157C20901F88098B1C87175331A8FB6
2F312B70A54548B4769A0AED35C6A162A2F8042E0762A9360B2DEFDE2D57D0AC
1341F032BCBA162134FC3DADB6F9A6FB9137CBE9607998FFE1B4D2716BA61F70
4CAA3FD4727A88730D6AE8D68D1D5B530C884868B7868775EECACE16BB485F55
F723460DD6C93A05E23ABF87E930FA696DA3480C857B7E2F12318F34862A3CE0
7B5C2B5B0098EE29708F98ED5EC55F183D5B2EE491CACCCAACE7F841AC1F60D7
8689111BFA6B2D1015854A43B170C08103526C7DFF028D788DF5373AC68A0B8A
8C159F8856BB81184F4256994B5005D654E490867BBC73A9A9879DBB7FB52F25
A5A5DFA45DB0FDF9B94F0EE1870B692CD097005D1500BF926CBB9146855D0C7D
E652A0D32733B6EA08A261F936EDE7E4745E67F5EA79D5D7EAE4DE0A8330DE53
327E86F2A3C810B8826E503BDF87CA82AC039F77FE0D4B91CD072E5DA1DA773F
2059F46A636EEEE6A62B6E1214CE593C8E6A44DF1526522F347A7E54C91D69A0
0CE5CF3F5C7528E7A638F5041056A43F90D0E6A47C2521C1058E8C6689492CD0
99C7CB0A061D63D174B1A2A1C606E5981D948853087B5A8B43DF3613AAAD505C
CA785EE521B5D53CD5177C020699005F6C0D10D78585740BB798449CF2CDB83E
7A2B47C10C95FFFF6F55524C8964CE1CA8A15F517A7FE8C30572AD06D6EF7B0E
D471DB941811E709BC070B8DEE5D8ED323ED64D790560A64E3B93CEE04453E6B
F41692DEC5CBC2465BF1CE78A971F4AC90303A68A6510AD6BD87E9BD0F7E93A6
7159F5E7576A6FBD347BBAE7EDF985A31A59D1D3A011EA04EBF7D2F5D1AAE846
7481D16E8AF6539E38E8A367B56133931E7C52F372CB9CFAF7DA3CAF003473DB
A5C03B5BCF8107CC4EB3E5BBF668827AD1CE9ED39E7242C84FA9821CF4CA16EB
943AF05A6D7B488CEC77941EE8A8CF583F9326DFA9ED12F08B91B7E0983965E2
CAFA4372F96E18DA533BB2FCA2267FD97ACDC041F923737AF599DED35127DA26
CFC3AEF7F5FCC28AD59580920606844039C0FF5C49D1AD996A67AB0914D83D85
9C06A7E060285C1F860C6CFDEBC07D3F1415F381236D587D73CC978E88EEA0CA
70F49B517973916884B791DB3DC254114ADA73978E9616FE099066621A67E742
32C1DFD22C0C2F0056228FE28DB27C20E11FC1025C09369641184BF8693C5BB6
10D3F09AC6EE6F80648EE5B7BEA7A68B9134B077BF5F3E3AE02075A1CB79491F
0191C87B2FF9202147208DC8AD4A1F61199A95C56937602CF6394E177CA5CAEA
90D1B94CDE0633DE207CE7EC5B1D5A2A44F2D8969A361C756DC70196082485DF
E88CEC421A946217F92F6F17B781572CF64AA169F9B10E4A7FF8C81974CF0B58
290116603081843C53A1DA9E31E9DF9147CA6AFFAE23D27ACC63C7798D598F1E
EFFAFD166DBCC67B809E541E717EA9237B35F5E3209C59BE172284FFD0549CBC
8004604DEA9C997AE16F535C0BAB999AD10B1F15B2C199800AA8BB9426E5EE16
B5B00E1436BDC3E1BAE80DD3A33C9E696C439D0B84301CAAE1E41F3F5E7F8D62
A185496E513EB3C657F62BF8B47538C8B788F078086F7C82C984608448F3726B
60436CCF9F0C38C8DCD965E5C46D234BC0FE0801C2613D31B2E59823AB8BC05A
BA5CAAD07E28A368A31421BD7A8BE233AFD980D75887087EB16A7C455E010348
1DEA391E825BC5971B6C06411122D57108FF37CE6F1AF6A00254EE1E1DDA309E
0A47540A3E8778D27962D0AD170ADC5901879094B7C046BFB354548A8D5739CA
7785B2732E84E76CDA6D053C137FB3B5129EDD09B89CAE7ECAE1FDECC2BD2DD2
8423D70010D389F414AC5A400FB397F83950BC3AC1FA2C2D4F198701545ECA6E
F216E65666FB8A4F8253DDFCDBF5372C017FDC34529E7CF0E6498F2883704E38
542F04779CB953656E922FC625AE3CF4A41A5D740C0E18C00876DEF22126A60B
68308C6D31357D9C816E8FF8C143B6046412C90AF8E0E4C4C9CAD741A299BEB2
52E9F5CF752BA8DD3AFFB66D90024F0728E185D73583BDB4A19CEABC2DAD0675
75149D6DB55CA0BCD94FF0BC2A61236F8F0193D56936FA73EDD43A41A464AA68
08743CACBB85D1F0AB8AE8C419540BEFC5DA2D46F2F5271EA92DD858850C325C
409630D197B6DE4CB625E8FCB662DD8D3E6292F0923046EC91
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A447D5FBE86D961AE4D4251149F11C4BC269E10B48E8C42DC2484EDE87
6540CB8A5EA2494148D09CC9D5014EB73C29368A3945AAA1BA4C17BF640D2A0D
414293480FD600A77D37471828C4645C5A4AC4729F4EA76FC946810B4968EB0A
719D8F3E61D2B740AE9A33E9F02982A13ED4B6ED0C6C4A93A9E9EC045D0CDADF
DC01ABAD0BD95692907C04F06F06F1BF6259C8E71099FB64B4FE263D06C5854B
070C8B864D8ACA6EBF440DE14DA34A2A548C9F1557C70A4D718F4F881707851A
6DCC39BD8791D806F5DE551CDF8612C7EE6707D554CD826CF352CA634FCFAFC7
232F32B3F0EE3D2577915BEB212005E06625FFC9F49383C9C64F51B6541F6AC6
12D2359547103898D05E52CE54B46835
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749E08
D67D1208C693A6640D1BD6B9285AC0D3110CBF8F7747AD12585141C3248D0BB5
BDE892F91A4B3291F21F30294693518E4629A3ADD7C8640E424FF615602C603E
1E14DCB3B17D34C090BEAD2A523E260A599522329B698729A635CFB15BE7E79E
6A34DAC7C3ED57340821A4E7A0C7F88F64BAA69BB80DFA8B659F4756878E3044
E1DB7EE4FE60074AF97818B3D36CF51110191B4E10655F52CC5D11F56517CFF9
04BA2676F4147DC8192C98C555B001D54301853030B2CF0C068ABE831158B1A3
F30593ABD51F5996CE493E0622323FE93B292844521051C1D3799C07DC879EE7
9D047DE1C7127E2DC6F94E30C34FF87FA03DB3A3D597697C133CFC5A9448E067
51777DCFEC80352A92D9DEC0A2F40580A0242C063CD1086D38FF5C6FA1BDB0A5
3EDB5499AA2322CC73A38FC826DC202679AF4A7B571509B715CB8BD1D0C5D1E5
9F5B2D6DF5E9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 66 /B put
dup 102 /f put
dup 103 /g put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D9111F4948A3E665E3
0DE92169B2A2137C001654C5F4FDA968F5E3AB43146106BA16C4208830672D20
AD334D8E65ECB688ED7E8FD300019AA34603F0D1B1CD9F2EC5710EEEACE0D7C6
A56626332F8E4F3896D6C03C69756A80F981F1535AB4F6A874CA203BE3BF360E
C1DEC1C28715DFE5B292D845AD9CBD7FCF2BE6D243E9932F0121B26B7A397A07
4FECCBFEE8BBD3971C4B072EEF612CE299012960FEA558A6DD15E2FC51F08033
649EE00A4C63C0759F5EA4E63813A03A61AD4EC0DA65B69E748F91266AE079A6
F3B202B9BFD52863BBF9BA983D41CCC432C330A9DF7725566A07CFA4803235B8
1C0FB63E32F14753936AE8E4C0FA440F11A431DE3ABCAD25879C72AF1D9D845E
1F5FEC2E68D58726B4E8CD978E25009828957BCC4689D3BF53F30D780996C9CF
706431BAE98555507F9422DF0406125F5DE0AF4CC4200786D6EDD3C5612C2DC5
85406EBA6E2A7D2DD0DF97BAE0FECF7F4AB86243985D362F1D9AB7C894013208
7CFDBE5BEE6BA3167598A7561D34257B92D9BBCF50C051986C9877D6D6AEF414
F8F576697F0E1F1C2D23F997F14EA56F9E39F16EA04150B49DE08061CB26184C
F802C03442FDF50DF0475C1F4902278ED93176B4667E7F3D848CA2C4271FAAF6
A0EECB273D5E47FD756F4F409D2B0688A9463944B7F08353EC008DD51B00CACC
6C27E1E2206BA3D4560F4AA4B2A5A6D96F9F2221239EFF8CC51089F1B02B3EFC
920949F0A3D7828D18D8CC30E60B90989F8726BC2E558ABD045D0A4C775FDFE6
81B87491FC628DC22CCF9AC8F3D879514AD849D5F6461AF275EFD498AAFFD45A
579A28B2E86EC315DAA0559BB5269134C0A314AA9AE416D509270CFA121613FE
FC2D7B3BF3AB0B2BF720DB0E9C3E8A1B2929A5F8D6AA40BAB1615491FA9AF970
BF855AF571EF283B3E88FF144A40EE50EC7564701EF42C102831917E2877A2C7
0EF31BC3D59008E61DF673AB22BB3434F62604FCD15D0E8C5B0F46820268CE05
796D7ACACC0F73247ED51ACA421E8F567F968339F88948793B9185EA00AA5084
5A38C243AEA34379E3F3D1A4C0289FD43771DDA4983CAC56E4A0ABAD51306401
3762FBF0D250B9654D25ED4654971218C3FB03A683AF16551DCEAF61B8EE6C1C
747F34CF8B4C8260640512BBF326A5A21C9BECF7481453F0A045CA2BB9731ADD
F4F9CB30F9EA7293DD6BDFCDA9EE8899CF694CE05815E12C045FDA4F6F43BA24
213AF0B505112304A454E366140D5C1CA344BB873E658555AF1352CAAA25454E
83AA841228CD724EAD13243AFF8424B4D83B50AE33026B821FCF3245A78C8DC5
4E637E18847F4CC2D80567DE72CFEE998628620E74B5D71DBD6969FED8C95D58
24A38B8AFDC0C38C47AC543C7CD8CA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600 (schroeder.dvi)
@start /Fa 255[65{}1 83.022 /CMSY10 rf /Fb 194[65 2[23
8[42 7[32 32 40[{}5 83.022 /CMR10 rf /Fc 206[33 49[{}1
58.1154 /CMR7 rf /Fd 255[52{}1 58.1154 /CMSY7 rf /Fe
152[40 41 35[63 62 65[{}4 83.022 /CMMI10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
144 242 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 144 242 a 144 242 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 144 242 a 144 242 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 144
242 a 144 242 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 144 242 a 741 2604 a
tx@Dict begin { 0.0 113.81097 } PutCoor PutBegin  end
 741 2604 a 988 x
@beginspecial 14 @llx 14 @lly 693 @urx 582 @ury 2834
@rwi @setspecial
%%BeginDocument: supfyg.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: GIMP PostScript file plugin V 1,17 by Peter Kirchgessner
%%Title: supfyg.eps
%%CreationDate: Thu Feb 11 13:37:36 2016
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 14 14 693 582
%%EndComments
%%BeginProlog
% Use own dictionary to avoid conflicts
10 dict begin
%%EndProlog
%%Page: 1 1
% Translate for offset
14.173228346456694 14.173228346456694 translate
% Translate to begin of first scanline
0 566.92913385826773 translate
678.30304481901737 -566.92913385826773 scale
% Image geometry
944 789 8
% Transformation matrix
[ 944 0 0 789 0 0 ]
% Strings to hold RGB-samples per scanline
/rstr 944 string def
/gstr 944 string def
/bstr 944 string def
{currentfile /ASCII85Decode filter /RunLengthDecode filter rstr readstring pop}
{currentfile /ASCII85Decode filter /RunLengthDecode filter gstr readstring pop}
{currentfile /ASCII85Decode filter /RunLengthDecode filter bstr readstring pop}
true 3
%%BeginData:       112545 ASCII Bytes
colorimage
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcG`Lj!0-TJcG<@J,~>
JcC<$JcC<$JcG`Liu`jPJcG<@J,~>
JcC<$JcC<$JcG`LiuipQJcG<@J,~>
JcC<$JcC<$L]>XEJcC<$rr7K~>
JcC<$JcC<$L]>XAJcC<$rr7K~>
JcC<$JcC<$L]>XBJcC<$rr7K~>
JcC<$JcC<$L]>XEJcC<$rr7K~>
JcC<$JcC<$L]>XAJcC<$rr7K~>
JcC<$JcC<$L]>XBJcC<$rr7K~>
JcC<$JcC<$NW8,cqT7_AJcCK)J,~>
JcC<$JcC<$NW8,_qP<*mJcCK)J,~>
JcC<$JcC<$NW8,`qNp1aJcCK)J,~>
JcC<$JcC<$OoOqrfu`Y,JcC]/J,~>
JcC<$JcC<$OoOqnfqe$XJcC]/J,~>
JcC<$JcC<$OoOqofpD+LJcC]/J,~>
JcC<$JcC<$Q2g:tcH5W%JcCl4J,~>
JcC<$JcC<$Q2g:pcD:"QJcCl4J,~>
JcC<$JcC<$Q2g:qcBn)EJcCl4J,~>
JcC<$JcC<$Q2g:tcH5W%JcCl4J,~>
JcC<$JcC<$Q2g:pcD:"QJcCl4J,~>
JcC<$JcC<$Q2g:qcBn)EJcCl4J,~>
JcC<$JcC<$RK)t*!6P$]`l[itJcD#8J,~>
JcC<$JcC<$RK)t&!2TE4`h`5KJcD#8J,~>
JcC<$JcC<$RK)t'!13L(`g?<?JcD#8J,~>
JcC<$JcC<$S,`7.!WODCao!Btan?s1s-`n;~>
JcC<$JcC<$S,`7*!WO8?V#2=KV"Pm]s-`n;~>
JcC<$JcC<$S,`7+!WO;@Qi%u?QhDPQs-`n;~>
JcC<$JcC<$T)\U2s8Vs@s2k3a\B4LjJcD8?J,~>
JcC<$JcC<$T)\U.s8Vs<s.oT8\>8mAJcD8?J,~>
JcC<$JcC<$T)\U/s8Vs=s-N[,\<lt5JcD8?J,~>
JcC<$JcC<$T)\U2s8Vs@s2k3a\B4LjJcD8?J,~>
JcC<$JcC<$T)\U.s8Vs<s.oT8\>8mAJcD8?J,~>
JcC<$JcC<$T)\U/s8Vs=s-N[,\<lt5JcD8?J,~>
JcC<$JcC<$TE"d5rlOs\s2k6bZcW%gJcD>AJ,~>
JcC<$JcC<$TE"d1rhT?3s.oW9Z_[F>JcD>AJ,~>
JcC<$JcC<$TE"d2rg3F's-N^-Z^:M2JcD>AJ,~>
JcC<$JcC<$U&Y!7qoSd]WQFr\JcDGDJ,~>
JcC<$JcC<$U&Y!3qkX04WMK>3JcDGDJ,~>
JcC<$JcC<$U&Y!4qj77(WL*E'JcDGDJ,~>
JcC<$JcC<$UAt!5T#paPJcDSHJ,~>
JcC<$JcC<$UAt!1Stu-'JcDSHJ,~>
JcC<$JcC<$UAt!2SsT3pJcDSHJ,~>
JcC<$JcC<$UAt!5SB:ROJcDVIJ,~>
JcC<$JcC<$UAt!1S>>s&JcDVIJ,~>
JcC<$JcC<$UAt!2S<s$oJcDVIJ,~>
JcC<$JcC<$UAt!5SB:ROJcDVIJ,~>
JcC<$JcC<$UAt!1S>>s&JcDVIJ,~>
JcC<$JcC<$UAt!2S<s$oJcDVIJ,~>
JcC<$JcC<$U]:*6R*#.KJcD_LJ,~>
JcC<$JcC<$U]:*2R&'O"JcD_LJ,~>
JcC<$JcC<$U]:*3R$[UkJcD_LJ,~>
JcC<$JcC<$V>p?9P0*PFJcDeNJ,~>
JcC<$JcC<$V>p?5P,.prJcDeNJ,~>
JcC<$JcC<$V>p?6P*c"fJcDeNJ,~>
JcC<$JcC<$VuQW=N61l?JcDnQJ,~>
JcC<$JcC<$VuQW9N267kJcDnQJ,~>
JcC<$JcC<$VuQW:N0j>_JcDnQJ,~>
JcC<$JcC<$VuQW=N61l?JcDnQJ,~>
JcC<$JcC<$VuQW9N267kJcDnQJ,~>
JcC<$JcC<$VuQW:N0j>_JcDnQJ,~>
JcC<$JcC<$WrMi=M95Q<JcE"TJ,~>
JcC<$JcC<$WrMi9M59qhJcE"TJ,~>
JcC<$JcC<$WrMi:M3n#\JcE"TJ,~>
JcC<$JcC<$W;l`>L<99:JcE%UJ,~>
JcC<$JcC<$W;l`:L8=YfJcE%UJ,~>
JcC<$JcC<$W;l`;L6q`ZJcE%UJ,~>
JcC<$JcC<$YlFYHqu?U>K?<s7JcE.XJ,~>
JcC<$JcC<$YlFYDqu?U:K;A>cJcE.XJ,~>
JcC<$JcC<$YlFYEqu?U;K9uEWJcE.XJ,~>
JcC<$JcC<$ZiBkHr;Z^?J][a5JcE1YJ,~>
JcC<$JcC<$ZiBkDr;Z^;JY`,aJcE1YJ,~>
JcC<$JcC<$ZiBkEr;Z^<JX?3UJcE1YJ,~>
JcC<$JcC<$ZiBkHr;Z^?J][a5JcE1YJ,~>
JcC<$JcC<$ZiBkDr;Z^;JY`,aJcE1YJ,~>
JcC<$JcC<$ZiBkEr;Z^<JX?3UJcE1YJ,~>
JcC<$JcC<$ZiBqJqZ$L=J][o5q]g[l\Gq'~>
JcC<$JcC<$ZiBqFqZ$L9JY`:@q]CCh\Gq'~>
JcC<$JcC<$ZiBqGqZ$L:JX?A&q]LIi\Gq'~>
JcC<$JcC<$\GlORrVujAq>^F=J][f2qBLRk])R9~>
JcC<$JcC<$\GlONrVuj=q>^F9JY`1=qB(:g])R9~>
JcC<$JcC<$\GlOOrVuj>q>^F:JX?8#qB1@h])R9~>
JcC<$JcC<$]`7gQo`+n8J][]/q]g[l]`3K~>
JcC<$JcC<$]`7gMo`+n4JY`(:q]CCh]`3K~>
JcC<$JcC<$]`7gNo`+n5JX?.uq]LIi]`3K~>
JcC<$JcC<$]`7gQo`+n8J][]/q]g[l]`3K~>
JcC<$JcC<$]`7gMo`+n4JY`(:q]CCh]`3K~>
JcC<$JcC<$]`7gNo`+n5JX?.uq]LIi]`3K~>
JcC<$JcC<$^&RmQpAb(9J][W-qBLRk^Ai]~>
JcC<$JcC<$^&RmMpAb(5JY`"8qB(:g^Ai]~>
JcC<$JcC<$^&RmNpAb(6JX?(sqB1@h^Ai]~>
JcC<$JcC<$^&S!ToDeb6J][N*q]g[l_#Jo~>
JcC<$JcC<$^&S!PoDeb2JY_n5q]CCh_#Jo~>
JcC<$JcC<$^&S!QoDeb3JX>tpq]LIi_#Jo~>
JcC<$JcC<$`;fc\li6o.J][K)qBLRk_Z,,~>
JcC<$JcC<$`;fcXli6o*JY_k4qB(:g_Z,,~>
JcC<$JcC<$`;fcYli6o+JX>qoqB1@h_Z,,~>
JcC<$JcC<$`;fc\li6o.J][K)qBLRk_Z,,~>
JcC<$JcC<$`;fcXli6o*JY_k4qB(:g_Z,,~>
JcC<$JcC<$`;fcYli6o+JX>qoqB1@h_Z,,~>
JcGNFoPB*YJcC<$h#I6rm/R#/J][?%r$-dm_uG5~>
JcGNFoP/sWJcC<$h#I6nm/R#+JY__0r#^Li_uG5~>
JcGNFoP/sWJcC<$h#I6om/R#,JX>ekr#gRj_uG5~>
Jc>`Mph][Lq.tW^JcC<$irAp$li6o.J][<$q]g[l`W(G~>
Jc>`MphKOFq.bK\JcC<$irAouli6o*JY_\/q]CCh`W(G~>
Jc>`MphKOGq.bK\JcC<$irAp!li6o+JX>bjq]LIi`W(G~>
L]@0d!$gmQr?M2UJcC<$JcG0<rZhCAs!-e.r?Hm8lcJuJJcEdjJ,~>
L]@0b!$CU(r?(oOJcC<$JcG0<rZD+=ru^M*r?$Tdl_OA!JcEdjJ,~>
L]@0b!$LZqr?1uPJcC<$JcG0<rZM1>rugS+r?-ZXl^.GjJcEdjJ,~>
MuWZj!$gXJrZhB`!$hDXJcC<$JcGBBr$1>'q]g[6kfN`IJcEgkJ,~>
MuWZh!$C@!rZD*7!$D,RJcC<$JcGBBr#b&#q]CBbkbS+uJcEgkJ,~>
MuWZh!$LEjrZM0+!$M2SJcC<$JcGBBr#k,$q]LHVka22iJcEgkJ,~>
MuWZj!$gXJrZhB`!$hDXJcC<$JcGBBr$1>'q]g[6kfN`IJcEgkJ,~>
MuWZh!$C@!rZD*7!$D,RJcC<$JcGBBr#b&#q]CBbkbS+uJcEgkJ,~>
MuWZh!$LEjrZM0+!$M2SJcC<$JcGBBr#k,$q]LHVka22iJcEgkJ,~>
NrT#n!$gLFrZh3[rG7&bJcC<$q>^:9jo>9(J][#qqBLRkbQ!(~>
NrT#l!$C3rrZCp2rG$o`JcC<$q>^:5jo>9$JY_D'qB(:gbQ!(~>
NrT#l!$L9frZM!&rG$o`JcC<$q>^:6jo>9%JX>JbqB1@hbQ!(~>
OoPAr!$fh3rbR/cJcC<$qu?U>j8]'&J]ZroqBLRkbl<1~>
OoPAp!$BO_rb@#aJcC<$qu?U:j8]'"JY_>%qB(:gbl<1~>
OoPAp!$KUSrb@#aJcC<$qu?U;j8]'#JX>D`qB1@hbl<1~>
Q2gbuaiXKtJcC<$K`CuqhZ*KuJ]Zilr$-dmc2W:~>
Q2gbsae\lMJcC<$K`CumhZ*KqJY_5"r#^Lic2W:~>
Q2gbsad;s@JcC<$K`CunhZ*KrJX>;]r#gRjc2W:~>
Q2gbuaiXKtJcC<$K`CuqhZ*KuJ]Zilr$-dmc2W:~>
Q2gbsae\lMJcC<$K`CumhZ*KqJY_5"r#^Lic2W:~>
Q2gbsad;s@JcC<$K`CunhZ*KrJX>;]r#gRjc2W:~>
R/d,$s!,P*s!.GXJcC<$MuWVuhZ*O!J]Zcjq]g[lci8L~>
R/d,"ru]7Vru_/RJcC<$MuWVqhZ*NrJY_.uq]CChci8L~>
R/d,"ruf=Jruh5SJcC<$MuWVrhZ*NsJX>5[q]LIici8L~>
RfE>&^<-C"rG7&bJcCc1r$1(ur?Hm8g<'7;JcF*sJ,~>
RfE>$^81cNrG$o`JcCc1r#aeqr?$Tdg8+WgJcF*sJ,~>
RfE>$^6ejBrG$o`JcCc1r#jkrr?-ZXg6_^[JcF*sJ,~>
ScAY)\&nSbJcC<$QN-t0rVujAh>dBtJ]ZTer$-dmdJn^~>
ScAY'\"rt;JcC<$QN-t,rVuj=h>dBpJY^tpr#^LidJn^~>
ScAY'\!R&.JcC<$QN-t-rVuj>h>dBqJX>&Vr#gRjdJn^~>
ScAY)\&nSbJcC<$QN-t0rVujAh>dBtJ]ZTer$-dmdJn^~>
ScAY'\"rt;JcC<$QN-t,rVuj=h>dBpJY^tpr#^LidJn^~>
ScAY'\!R&.JcC<$QN-t-rVuj>h>dBqJX>&Vr#gRjdJn^~>
TE"k+ZH<,_JcC<$RfE:1f)P[nJ]ZNcr$-dmdf4g~>
TE"k)ZD@M8JcC<$RfE:-f)P[jJY^nnr#^Lidf4g~>
TE"k)ZBtT+JcC<$RfE:.f)P[kJX=uTr#gRjdf4g~>
UAt1.Y0$WYJcC<$T)\[4fDkdoJ]ZE`r$-dmeGk%~>
UAt1,Y,)#2JcC<$T)\[0fDkdkJY^ekr#^LieGk%~>
UAt1,Y*]*%JcC<$T)\[1fDkdlJX=lQr#gRjeGk%~>
U]:@1s!+to!$h9\s!.P[JcC<$TE"j7ec5RmJ]ZB_q]g[lf)L7~>
U]:@/ru\\F!$D!3ru_8UJcC<$TE"j3ec5RiJY^bjq]CChf)L7~>
U]:@/rueb:!$M''ruh>VJcC<$TE"j4ec5RjJX=iPq]LIif)L7~>
VZ6U2WQG,arG7&bJcD_Lr?KYgrZd!9d)l,/JcFC&J,~>
VZ6U0WMKM8rG$o`JcD_Lr?'AcrZ?]ed%pL[JcFC&J,~>
VZ6U0WL*T,rG$o`JcD_Lr?0GdrZHcYd$OSOJcFC&J,~>
VZ6U2WQG,arG7&bJcD_Lr?KYgrZd!9d)l,/JcFC&J,~>
VZ6U0WMKM8rG$o`JcD_Lr?'AcrZ?]ed%pL[JcFC&J,~>
VZ6U0WL*T,rG$o`JcD_Lr?0GdrZHcYd$OSOJcFC&J,~>
VuQd5s!+Jas!.Kas(m8dJcDhOq]jGerZd!9c,oo/JcFC&J,~>
VuQd3ru\28ru_38s([,bJcDhOq]F/arZ?]ec(t:[JcFC&J,~>
VuQd3rue8,ruh9,s([,bJcDhOq]O5brZHcYc'SAOJcFC&J,~>
WrN$6VTJf^r5nnRJcC<$Z2aYFcN!nhJ]Z*Wr?Hmng&HR~>
WrN$4VPO25r1s:+JcC<$Z2aYBcN!ndJY^Jbr?$Ujg&HR~>
WrN$4VO.9)r0R@sJcC<$Z2aYCcN!neJX=QHr?-[kg&HR~>
X8i08!$drSs(m8dJcE4ZrZhCAs!,egr?Hm8b/sT,JcFI(J,~>
X8i06!$@Z*s([,bJcE4ZrZD+=ru]Mcr?$Tdb,"tXJcFI(J,~>
X8i06!$I_ss([,bJcE4ZrZM1>rufSdr?-ZXb*W&LJcFI(J,~>
X8i08!$drSs(m8dJcE4ZrZhCAs!,egr?Hm8b/sT,JcFI(J,~>
X8i06!$@Z*s([,bJcE4ZrZD+=ru]Mcr?$Tdb,"tXJcFI(J,~>
X8i06!$I_ss([,bJcE4ZrZM1>rufSdr?-ZXb*W&LJcFI(J,~>
Y5eK;QH91QCi"\&JcERd!p6DYrVud?a8c)_J]Z'Vq]g[lh#Dm~>
Y5eK9QD=R(C2/>"JcERd!p6DYrVud;a8c)[JY^Gaq]CChh#Dm~>
Y5eK9QBqXqC2/>"JcERd!p6G[rVud<a8c)\JX=NGq]LIih#Dm~>
YQ+T<!$dfOs!.JYJcC<$^]4-Ta8c,`J]YsSr$-dmh>`!~>
YQ+T:!$@N&ru_2SJcC<$^]4-Pa8c,\JY^>^r#^Lih>`!~>
YQ+T:!$ISoruh8TJcC<$^]4-Qa8c,]JX=EDr#gRjh>`!~>
ZN'l>PKE_Is(m8dJcEOcr?K8\rZd!9`l\-'JcFU,J,~>
ZN'l<PGJ*us([,bJcEOcr?&uXrZ?]e`h`MSJcFU,J,~>
ZN'l<PF)1is([,bJcEOcr?0&YrZHcY`g?TGJcFU,J,~>
ZN'l>PKE_Is(m8dJcEOcr?K8\rZd!9`l\-'JcFU,J,~>
ZN'l<PGJ*us([,bJcEOcr?&uXrZ?]e`h`MSJcFU,J,~>
ZN'l<PF)1is([,bJcEOcr?0&YrZHcY`g?TGJcFU,J,~>
ZiC#@!$dWJ!$hHarbR/cJcEgks!,5Wr?Hm8`QA''JcFU,J,~>
ZiC#>!$@?!!$D08rb@#aJcEgkru\rSr?$Td`MEGSJcFU,J,~>
ZiC#>!$IDj!$M6,rb@#aJcEgkruf#Tr?-ZX`L$NGJcFU,J,~>
[/^/BLroX4JcC<$c2[Sa^]46WJ]YgOrZd!ohuA3~>
[/^/@Lnt#bJcC<$c2[S]^]46SJY^2ZrZ?^khuA3~>
[/^/@LmS*UJcC<$c2[S^^]46TJX=9@rZHdlhuA3~>
[K$8CLWTQ@s(m8dJcF$qq]ifSrZd!9_TD^#JcF^/J,~>
[K$8ALSXqls([,bJcF$qq]ENOrZ?]e_PI)OJcF^/J,~>
[K$8ALR8#`s([,bJcF$qq]NTPrZHcY_O(0CJcF^/J,~>
\GuPEK$!t-JcC<$f)PaprVujA]DqjTJ]YaMr?HmniW"E~>
\GuPCJu&?[JcC<$f)PalrVuj=]DqjPJY^,Xr?$UjiW"E~>
\GuPCJsZFNJcC<$f)PamrVuj>]DqjQJX=3>r?-[kiW"E~>
\GuPEK$!t-JcC<$f)PaprVujA]DqjTJ]YaMr?HmniW"E~>
\GuPCJu&?[JcC<$f)PalrVuj=]DqjPJY^,Xr?$UjiW"E~>
\GuPCJsZFNJcC<$f)PamrVuj>]DqjQJX=3>r?-[kiW"E~>
\c;\GJ][r6s!.P[JcC<$gAh'q[K$1MJ]Y^Lr?Hmnir=N~>
\c;\EJY`=Aru_8UJcC<$gAh'm[K$1IJY^)Wr?$Ujir=N~>
\c;\EJX?D'ruh>VJcC<$gAh'n[K$1JJX=0=r?-[kir=N~>
]DqkHJ][f2r+praJcFX-q]iNKr?Hm8^rcO"JcFa0J,~>
]DqkFJY`1=r+^f_JcFX-q]E6Gr?$Td^ngoNJcFa0J,~>
]DqkFJX?8#r+^f_JcFX-q]N<Hr?-ZX^mG!BJcFa0J,~>
]`7tIJ][`0rZhAXJcC<$irAs%ZiBtKJ]Y[Kr?Hmnj8XW~>
]`7tGJY`+;rZD)RJcC<$irAs!ZiBtGJY^&Vr?$Ujj8XW~>
]`7tGJX?2!rZM/SJcC<$irAs"ZiBtHJX=-<r?-[kj8XW~>
]`7tIJ][`0rZhAXJcC<$irAs%ZiBtKJ]Y[Kr?Hmnj8XW~>
]`7tGJY`+;rZD)RJcC<$irAs!ZiBtGJY^&Vr?$Ujj8XW~>
]`7tGJX?2!rZM/SJcC<$irAs"ZiBtHJX=-<r?-[kj8XW~>
^&S+Ks!**:prWIZrbR/cJcG$8rZeKDs!**:]ug3tJcFd1J,~>
^&S+IruZffpn[j1rb@#aJcG$8rZA3@ruZff]qkTKJcFd1J,~>
^&S+IruclZpm:q%rb@#aJcG$8rZJ9AruclZ]pJ[?JcFd1J,~>
^An4LJ][N*s!.MZJcC<$mf3)-XT/;FJ]YOGs!**pj8XW~>
^An4JJY_n5ru_5TJcC<$mf3))XT/;BJY]oRruZglj8XW~>
^An4JJX>tpruh;UJcC<$mf3)*XT/;CJX=!8rucmmj8XW~>
_#OCMJ][H(![DMtr;Ze5JcC<$o`+b4XoJ>EJ]YOGr?Hmnjo9i~>
_#OCKJY_h3!Zu/lr;Ze3JcC<$o`+b0XoJ>AJY]oRr?$Ujjo9i~>
_#OCKJX>nn![)5mr;Ze3JcC<$o`+b1XoJ>BJX=!8r?-[kjo9i~>
_#OCMJ][H(![DMtr;Ze5JcC<$o`+b4XoJ>EJ]YOGr?Hmnjo9i~>
_#OCKJY_h3!Zu/lr;Ze3JcC<$o`+b0XoJ>AJY]oRr?$Ujjo9i~>
_#OCKJX>nn![)5mr;Ze3JcC<$o`+b1XoJ>BJX=!8r?-[kjo9i~>
_>jLNJ][B&rbVT6qeUi`JcGZJrZhCA!$eKCr?Hm8]?1!rJcFj3J,~>
_>jLLJY_b1rbDH4qeC]^JcGZJrZD+=!$A3?r?$Td];5BIJcFj3J,~>
_>jLLJX>hlrbDH4qeC]^JcGZJrZM1>!$J9@r?-ZX]9iI=JcFj3J,~>
_Z0XPJ][6"s(q]7qeUi`JcGcMr$/$;r?Hm8]#jmqJcFm4J,~>
_Z0XNJY_V-s(_Q5qeC]^JcGcMr#_a7r?$Td\to9HJcFm4J,~>
_Z0XNJX>\hs(_Q5qeC]^JcGcMr#hg8r?-ZX\sN@<JcFm4J,~>
`;fgQ!$d':lH0$Arr;t6rVuk5JcCN*qBMg9rZd!9\]OdpJcFm4J,~>
`;fgO!$?cflD4Dorr;t4rVuk3JcCN*qB)O5rZ?]e\YT0GJcFm4J,~>
`;fgO!$HiZlBhKbrr;t4rVuk3JcCN*qB2U6rZHcY\X37;JcFm4J,~>
`W,pRJ][)srbVB0r+praM?!N!U&Y*:J]YFDr?HmnkPp&~>
`W,pPJY_J)rbD6.r+^f_M?!MrU&Y*6JY]fOr?$UjkPp&~>
`W,pPJX>PdrbD6.r+^f_M?!MsU&Y*7JX<m5r?-[kkPp&~>
`W,pRJ][)srbVB0r+praM?!N!U&Y*:J]YFDr?HmnkPp&~>
`W,pPJY_J)rbD6.r+^f_M?!MrU&Y*6JY]fOr?$UjkPp&~>
`W,pPJX>PdrbD6.r+^f_M?!MsU&Y*7JX<m5r?-[kkPp&~>
`rH'TJ]Zros(qN2qeUi`P5kJ*RK*72J]YFDr?HmnkPp&~>
`rH'RJY_>%s(_B0qeC]^P5kJ&RK*7.JY]fOr?$UjkPp&~>
`rH'RJX>D`s(_B0qeC]^P5kJ'RK*7/JX<m5r?-[kkPp&~>
aT)6UJ]Zlms(qH0rbR/cPlLV*RfE=2J]YFDr?HmnkPp&~>
aT)6SJY_8#s(_<.rb@#aPlLV&RfE=.JY]fOr?$UjkPp&~>
aT)6SJX>>^s(_<.rb@#aPlLV'RfE=/JX<m5r?-[kkPp&~>
aoD?VJ]ZfkrbV0*s%38;JcD5>q]hR0r?Hm8[`SImJcG!7J,~>
aoD?TJY_2!rbD$(s$m&4JcD5>q]D:,r?$Td[\WjDJcG!7J,~>
aoD?TJX>8\rbD$(s$m&5JcD5>q]M@-r?-ZX[[6q8JcG!7J,~>
aoD?VJ]ZfkrbV0*s%38;JcD5>q]hR0r?Hm8[`SImJcG!7J,~>
aoD?TJY_2!rbD$(s$m&4JcD5>q]D:,r?$Td[\WjDJcG!7J,~>
aoD?TJX>8\rbD$(s$m&5JcD5>q]M@-r?-ZX[[6q8JcG!7J,~>
b5_KXs!**:hT>b5o`#,3CMR!),9qd>U]1<=r;QaAQN-n.J]Y@Br?Hmnl2Q8~>
b5_KVruZffhPC-co`#,1Bk^Ns+!6(6U]1<9r;Qa=QN-n*JY]`Mr?$Ujl2Q8~>
b5_KVruclZhO"4Vo`#,1Bk^Nt+<Z78U]1<:r;Qa>QN-n+JX<g3r?-[kl2Q8~>
b5VHXJ]ZTes(q?-rbM[@1G^>.s/5np,E`$),D!tEao3N9s69Q6~>
b5VHVJY^tps(_3+rb;O;0/"K"s/5np+-HU%++^5qV#DHes69Q6~>
b5VHVJX>&Vs(_3+rb;O<0JF]%s/5np+Hc^&+G#leQi8+Ys69Q6~>
bQ%TYJ]ZQd!,V3*!c2:RJcDYJq]h7'rZd!9[)r7kJcG$8J,~>
bQ%TWJY^qo!,D'(!bu%JJcDYJq]Ct#rZ?]e[&!XBJcG$8J,~>
bQ%TWJX>#U!,D'(!bu(LJcDYJq]M%$rZHcY[$U_6JcG$8J,~>
bQ%TYJ]ZQd!,V3*!c2:RJcDYJq]h7'rZd!9[)r7kJcG$8J,~>
bQ%TWJY^qo!,D'(!bu%JJcDYJq]Ct#rZ?]e[&!XBJcG$8J,~>
bQ%TWJX>#U!,D'(!bu(LJcDYJq]M%$rZHcY[$U_6JcG$8J,~>
c2[cZ!$d':fZF,/mJm,0JcDnQr?IC'rZd!9[)r7kJcG$8J,~>
c2[cX!$?cffVJL]mJm,,JcDnQr?%+#rZ?]e[&!XBJcG$8J,~>
c2[cX!$HiZfU)SPmJm,-JcDnQr?.1$rZHcY[$U_6JcG$8J,~>
c2[f[J]ZHarbV$&qBLRk\c;UQL]@>uJ]Y7?rZd!olMlA~>
c2[fYJY^hlrbCm$qB(:g\c;UML]@>qJY]WJrZ?^klMlA~>
c2[fYJX=oRrbCm$qB1@h\c;UNL]@>rJX<^0rZHdllMlA~>
cN!l[J]ZB_s(q*&r$-dm]`7gQM#[DuJ]Y7?r?Hmnli2J~>
cN!lYJY^bjs(^s$r#^Li]`7gMM#[DqJY]WJr?$Ujli2J~>
cN!lYJX=iPs(^s$r#gRj]`7gNM#[DrJX<^0r?-[kli2J~>
cMmr^,9qc]d`MK)mJm/1rVljBJcERdq]gmrr?Hm8ZcW.jJcG'9J,~>
cMmr\+!6'0d\QkWmJm/-rVlj>JcERdq]CUnr?$TdZ_[OAJcG'9J,~>
cMmr\+<Z6%d[0rJmJm/.rVlj?JcERdq]L[or?-ZXZ^:V5JcG'9J,~>
cMmr^,9qc]d`MK)mJm/1rVljBJcERdq]gmrr?Hm8ZcW.jJcG'9J,~>
cMmr\+!6'0d\QkWmJm/-rVlj>JcERdq]CUnr?$TdZ_[OAJcG'9J,~>
cMmr\+<Z6%d[0rJmJm/.rVlj?JcERdq]L[or?-ZXZ^:V5JcG'9J,~>
ci=#]J]Z6[rbUfur$-dmaoDAcrr;sBK`CuqJ]Y7?r?Hmnli2J~>
ci=#[JY^VfrbCZsr#^LiaoDA_rr;s>K`CumJY]WJr?$Ujli2J~>
ci=#[JX=]LrbCZsr#gRjaoDA`rr;s?K`CunJX<^0r?-[kli2J~>
ci3u]J]Z-X!,Um!qBLRkc2[\dJcGcMs!**:YK?ehJcG'9J,~>
ci3u[JY^Mc!,C`tqB(:gc2[\`JcGcMruZffYGD1?JcG'9J,~>
ci3u[JX=TI!,C`tqB1@hc2[\aJcGcMruclZYF#83JcG'9J,~>
dJs2^J]Z-Xs(plur?Hmnci<ecJcGcMs!**:YK?bgJcG*:J,~>
dJs2\JY^Mcs(^`sr?$Ujci<e_JcGcMruZffYGD.>JcG*:J,~>
dJs2\JX=TIs(^`sr?-[kci<e`JcGcMruclZYF#52JcG*:J,~>
dJs2^J]Z-Xs(plur?Hmnci<ecJcGcMs!**:YK?bgJcG*:J,~>
dJs2\JY^Mcs(^`sr?$Ujci<e_JcGcMruZffYGD.>JcG*:J,~>
dJs2\JX=TIs(^`sr?-[kci<e`JcGcMruclZYF#52JcG*:J,~>
dJs5_J]Z'Vs(pWns!**peGoIlJcGZJs!**:YK?bgJcG*:J,~>
dJs5]JY^Gas(^KlruZgleGoIhJcGZJruZffYGD.>JcG*:J,~>
dJs5]JX=NGs(^KlrucmmeGoIiJcGZJruclZYF#52JcG*:J,~>
df9;_J]Z$UrbUTor$-dmhZ*R"JcGBBs!**:Y0$\gJcG*:J,~>
df9;]JY^D`rbCHmr#^LihZ*QsJcGBBruZffY,)(>JcG*:J,~>
df9;]JX=KFrbCHmr#gRjhZ*QtJcGBBruclZY*]/2JcG*:J,~>
df0;`J]YpRrbUWpq]g[lirAm#JcGBBs!**:Y0$VeJcG0<J,~>
df0;^JY^;]rbCKnq]CChirAltJcGBBruZffY,)"<JcG0<J,~>
df0;^JX=BCrbCKnq]LIiirAluJcGBBruclZY*])0JcG0<J,~>
df0;`J]YpRrbUWpq]g[lirAm#JcGBBs!**:Y0$VeJcG0<J,~>
df0;^JY^;]rbCKnq]CChirAltJcGBBruZffY,)"<JcG0<J,~>
df0;^JX=BCrbCKnq]LIiirAluJcGBBruclZY*])0JcG0<J,~>
e,TGaJ]YjP!,UWor?HmnirAp$JcGECr?Hm8Y0$VeJcG0<J,~>
e,TG_JY^5[!,CKmr?$UjirAouJcGECr?$TdY,)"<JcG0<J,~>
e,TG_JX=<A!,CKmr?-[kirAp!JcGECr?-ZXY*])0JcG0<J,~>
e,KDaJ]YgOs(pHir$-dmn,EA4rVujAJcG?Ar?Hm8Y0$VeJcG0<J,~>
e,KD_JY^2Zs(^<gr#^Lin,EA0rVuj=JcG?Ar?$TdY,)"<JcG0<J,~>
e,KD_JX=9@s(^<gr#gRjn,EA1rVuj>JcG?Ar?-ZXY*])0JcG0<J,~>
e,KDaJ]YdNrbUEjq'1Ijp&Fq7JcG-;r?Hm8Xi^PeJcG0<J,~>
e,KD_JY^/YrbC9hq&b1fp&Fq3JcG-;r?$TdXebq<JcG0<J,~>
e,KD_JX=6?rbC9hq&k7gp&Fq4JcG-;r?-ZXXdB#0JcG0<J,~>
ec5VbJ]YaMrbUEjr$-dmp&Fk5JcG-;r?Hm8Xi^MdJcG3=J,~>
ec5V`JY^,XrbC9hr#^Lip&Fk1JcG-;r?$TdXebn;JcG3=J,~>
ec5V`JX=3>rbC9hr#gRjp&Fk2JcG-;r?-ZXXdAu/JcG3=J,~>
ec5VbJ]YaMrbUEjr$-dmp&Fk5JcG-;r?Hm8Xi^MdJcG3=J,~>
ec5V`JY^,XrbC9hr#^Lip&Fk1JcG-;r?$TdXebn;JcG3=J,~>
ec5V`JX=3>rbC9hr#gRjp&Fk2JcG-;r?-ZXXdAu/JcG3=J,~>
ec5YcJ]YXJ!,U?g!$hIBrZd!oqu?U>JcG'9r?Hm8Xi^MdJcG3=J,~>
ec5YaJY^#U!,C3e!$D1>rZ?^kqu?U:JcG'9r?$TdXebn;JcG3=J,~>
ec5YaJX=*;!,C3e!$M7?rZHdlqu?U;JcG'9r?-ZXXdAu/JcG3=J,~>
ec5YcJ]YXJs(p6cq]gjqr?Hmnj8]*'J]Y"8r?Hmnn,In~>
ec5YaJY^#Us(^*aq]CRmr?$Ujj8]*#JY]BCr?$Ujn,In~>
ec5YaJX=*;s(^*aq]LXnr?-[kj8]*$JX<I)r?-[kn,In~>
f)P_cJ]YXJ!$hJZfDk[lMZ<MtJcFd1rZd!9X3(>cJcG3=J,~>
f)P_aJY^#U!$D2TfDk[hMZ<MpJcFd1rZ?]eX/,_:JcG3=J,~>
f)P_aJX=*;!$M8UfDk[iMZ<MqJcFd1rZHcYX-`f.JcG3=J,~>
f)P_cJ]YXJ!$hJZfDk[lMZ<MtJcFd1rZd!9X3(>cJcG3=J,~>
f)P_aJY^#U!$D2TfDk[hMZ<MpJcFd1rZ?]eX/,_:JcG3=J,~>
f)P_aJX=*;!$M8UfDk[iMZ<MqJcFd1rZHcYX-`f.JcG3=J,~>
f)Gef,9qc]]u^7!rbU-br?I4"q]g[lirB!&J]Xt7r?HmnnGe"~>
f)Ged+!6'0]qbWMrbC!`r?$psq]CChirB!"JY]?Br?$UjnGe"~>
f)Ged+<Z6%]pA^ArbC!`r?.!tq]LIiirB!#JX<F(r?-[knGe"~>
f)G_dJ]YLFs!%M[ci<qgQ2gk/rr;sBJcFX-rZd!9X3(;bJcG6>J,~>
f)G_bJY]lQruV5Uci<qcQ2gk+rr;s>JcFX-rZ?]eX/,\9JcG6>J,~>
f)G_bJX<s7ru_;Vci<qdQ2gk,rr;s?JcFX-rZHcYX-`c-JcG6>J,~>
fDkkeJ]YFDs(p'^qBMO1qBLRkgAh-sJ]Xt7r?HmnnGe"~>
fDkkcJY]fOs(]p\qB)7-qB(:ggAh-oJY]?Br?$UjnGe"~>
fDkkcJX<m5s(]p\qB2=.qB1@hgAh-pJX<F(r?-[knGe"~>
fDkkeJ]YFDs(p'^qBMO1qBLRkgAh-sJ]Xt7r?HmnnGe"~>
fDkkcJY]fOs(]p\qB)7-qB(:ggAh-oJY]?Br?$UjnGe"~>
fDkkcJX<m5s(]p\qB2=.qB1@hgAh-pJX<F(r?-[knGe"~>
fDbheJ]Y@B!GlJrs84+4s7mmjs4dSP,D!t9ao<T:s7$&=~>
fDbhcJY]`M!GZ5ms83t0s7mafs4dSP++^5eV#MNfs7$&=~>
fDbhcJX<g3!GZ8ns84"1s7mdgs4dSP+G#lYQiA1Zs7$&=~>
fDbheJ]Y=A!*.;DrZe!6r$-dmf`1mpJ]Xn5r?Hmno)F4~>
fDbhcJY]]L!)h)ArZ@^2r#^Lif`1mlJY]9@r?$Ujo)F4~>
fDbhcJX<d2!)q/BrZId3r#gRjf`1mmJX<@&r?-[ko)F4~>
fDbheJ]Y@B"5,a\,KTo`,HLkD,D#mAs8=0naf3D\,D#mcs*t~>
fDbhcJY]`M"5#RT+3=K\+05G@++aI=s8=$jUoC0g++aI_s*t~>
fDbhcJX<g3"5,XV+NXT]+KPPA+G'R>s8='kQ`6>M+G'R`s*t~>
f`1tfJ]Y@B"K"j>-6pY4q]i?Fq]g[ld/X%hJ]Xn5r?Hmno)F4~>
f`1tdJY]`M"JnX6,9P&-q]E'Bq]CChd/X%dJY]9@r?$Ujo)F4~>
f`1tdJX<g3"Jn[7,9Y,.q]N-Cq]LIid/X%eJX<@&r?-[ko)F4~>
f`1tfJ]Y@B"K"j>-6pY4q]i?Fq]g[ld/X%hJ]Xn5r?Hmno)F4~>
f`1tdJY]`M"JnX6,9P&-q]E'Bq]CChd/X%dJY]9@r?$Ujo)F4~>
f`1tdJX<g3"Jn[7,9Y,.q]N-Cq]LIid/X%eJX<@&r?-[ko)F4~>
f`(qfJ]Y:@"1rMk/BIkh,I%4G,D#m@s8F6oaf!8[,D#mcs*t~>
f`(qdJY]ZK"1i>d.EMPe+0beC++aI<s8F*kUo1$f++aI_s*t~>
f`(qdJX<a1"1iAf.`hYf+L(nD+G'R=s8F-lQ`$2L+G'R`s*t~>
f`(qfJ]Y1=!G56Lrr=;As8O=Ws8F8As8F6os3:TC,D!t7ao3N9s762?~>
f`(qdJY]QH!G"sFrr=/=s8O1Ss8F,=s8F*ks3:TC++^5cV#DHes762?~>
f`(qdJX<X.!G#!Grr=2>s8O4Ts8F/>s8F-ls3:TC+G#lWQi8+Ys762?~>
gAh.gJ]Y.<!c2Xf_uKWZ_>jEXJcEairZd!9Voel^JcG?AJ,~>
gAh.eJY]NG!buC^_uKWV_>jETJcEairZ?]eVkj85JcG?AJ,~>
gAh.eJX<U-!buF`_uKWW_>jEUJcEairZHcYVjI?)JcG?AJ,~>
gAh.gJ]Y.<!c2Xf_uKWZ_>jEXJcEairZd!9Voel^JcG?AJ,~>
gAh.eJY]NG!buC^_uKWV_>jETJcEairZ?]eVkj85JcG?AJ,~>
gAh.eJX<U-!buF`_uKWW_>jEUJcEairZHcYVjI?)JcG?AJ,~>
gAh1h!$d':YK?f\_uKTY_uKTYJcEairZd!9Voel^JcG?AJ,~>
gAh1f!$?cfYGD25_uKTU_uKTUJcEairZ?]eVkj85JcG?AJ,~>
gAh1f!$HiZYF#9(_uKTV_uKTVJcEairZHcYVjI?)JcG?AJ,~>
gAh1hJ]Y(:rbTFNrZf>\rZd!o_uK]\J]Xh3r?HmnoDa=~>
gAh1fJY]HErbB:LrZB&XrZ?^k_uK]XJY]3>r?$UjoDa=~>
gAh1fJX<O+rbB:LrZK,YrZHdl_uK]YJX<:$r?-[koDa=~>
gAh1hJ]Y"8s(o=Ir?Kbjr?Hmn^&S'VJ]Xe2rZd!ooDa=~>
gAh1fJY]BCs(]1Gr?'Jfr?$Uj^&S'RJY]0=rZ?^koDa=~>
gAh1fJX<I)s(]1Gr?0Pgr?-[k^&S'SJX<7#rZHdloDa=~>
gAh1hJ]Y"8s(o=Ir?Kbjr?Hmn^&S'VJ]Xe2rZd!ooDa=~>
gAh1fJY]BCs(]1Gr?'Jfr?$Uj^&S'RJY]0=rZ?^koDa=~>
gAh1fJX<I)s(]1Gr?0Pgr?-[k^&S'SJX<7#rZHdloDa=~>
gAh1hJ]Xt7!,T:IqBOYmqBLRk^&S'VJ]Xe2r?Hmno`'F~>
gAh1fJY]?B!,B.GqB+AiqB(:g^&S'RJY]0=r?$Ujo`'F~>
gAh1fJX<F(!,B.GqB4GjqB1@h^&S'SJX<7#r?-[ko`'F~>
g].7hJ]Xt7rbT:JqBOYmq]g[l]`7sUJ]Xe2r?Hmno`'F~>
g].7fJY]?BrbB.HqB+Aiq]CCh]`7sQJY]0=r?$Ujo`'F~>
g].7fJX<F(rbB.HqB4Gjq]LIi]`7sRJX<7#r?-[ko`'F~>
g]%=k,9qc]X2tDfCi$]_r?L2!rZhFBrZd!o\c;XRJ]Xe2r?Hmno`'F~>
g]%=i+!6'0X/#e=C21?[r?'nrrZD.>rZ?^k\c;XNJY]0=r?$Ujo`'F~>
g]%=i+<Z6%X-Wl1C21?[r?0tsrZM4?rZHdl\c;XOJX<7#r?-[ko`'F~>
g]%=k,9qc]Wlb6V[K$+Kl2UW*JcE+Wr?Hm8VTJc]JcGBBJ,~>
g]%=i+!6'0WhfW/[K$+Gl2UW&JcE+Wr?$TdVPO/4JcGBBJ,~>
g]%=i+<Z6%WgE^"[K$+Hl2UW'JcE+Wr?-ZXVO.6(JcGBBJ,~>
g]%=k,9qc]Wlb6V[K$+Kl2UW*JcE+Wr?Hm8VTJc]JcGBBJ,~>
g]%=i+!6'0WhfW/[K$+Gl2UW&JcE+Wr?$TdVPO/4JcGBBJ,~>
g]%=i+<Z6%WgE^"[K$+Hl2UW'JcE+Wr?-ZXVO.6(JcGBBJ,~>
g]%7iJ]Xe2!,T(CqBP>+qBLRk[/^(LJ]X_0s!**po`'F~>
g]%7gJY]0=!,AqAqB,&'qB(:g[/^(HJY]*;ruZglo`'F~>
g]%7gJX<7#!,AqAqB5,(qB1@h[/^(IJX<1!rucmmo`'F~>
g]%7iJ]Xe2s(o%Ar?LY.r?HmnZ2abIJ]X_0s!**po`'F~>
g]%7gJY]0=s(\n?r?(A*r?$UjZ2abEJY]*;ruZglo`'F~>
g]%7gJX<7#s(\n?r?1G+r?-[kZ2abFJX<1!rucmmo`'F~>
h#ICjJ]Xb1!,Sn>!$hIBs!.:<rZd!oWrN#BJ]X_0r?HmnpA]X~>
h#IChJY]-<!,Ab<!$D1>ru_"8rZ?^kWrN#>JY]*;r?$UjpA]X~>
h#IChJX<4"!,Ab<!$M7?ruh(9rZHdlWrN#?JX<1!r?-[kpA]X~>
h#ICjJ]Xb1!,Sn>!$hIBs!.:<rZd!oWrN#BJ]X_0r?HmnpA]X~>
h#IChJY]-<!,Ab<!$D1>ru_"8rZ?^kWrN#>JY]*;r?$UjpA]X~>
h#IChJX<4"!,Ab<!$M7?ruh(9rZHdlWrN#?JX<1!r?-[kpA]X~>
h#@Ck,D!t5ao?1Ys84,?s8+$ls/Q+t,D!t4ao*H8s7ZJC~>
h#@Ci++^5aV#P22s83u;s8*mhs/Q+t++^5`V#;Bds7ZJC~>
h#@Ci+G#lUQiCg%s84#<s8*pis/Q+t+G#lTQi/%Xs7ZJC~>
h#@Ck,D!t4aT-.Ys8+&@s8+$ls/H%s,D!t4ao*H8s7ZJC~>
h#@Ci++^5`U]>/2s8*o<s8*mhs/H%s++^5`V#;Bds7ZJC~>
h#@Ci+G#lTQN1d%s8*r=s8*pis/H%s+G#lTQi/%Xs7ZJC~>
h#@@jJ]X\/rbS\9r?M=ArZd!oVuQcAJ]XV-rZd!opA]X~>
h#@@hJY]':rbAP7r?)%=rZ?^kVuQc=JY]!8rZ?^kpA]X~>
h#@@hJX<-urbAP7r?2+>rZHdlVuQc>JX<'srZHdlpA]X~>
h#@@jJ]X\/rbS\9r?M=ArZd!oVuQcAJ]XV-rZd!opA]X~>
h#@@hJY]':rbAP7r?)%=rZ?^kVuQc=JY]!8rZ?^kpA]X~>
h#@@hJX<-urbAP7r?2+>rZHdlVuQc>JX<'srZHdlpA]X~>
h#@@jJ]XY.s(nk<r$21?r?HmnW;llBJ]XV-rZd!opA]X~>
h#@@hJY]$9s(\_:r#bn;r?$UjW;ll>JY]!8rZ?^kpA]X~>
h#@@hJX<*ts(\_:r#kt<r?-[kW;ll?JX<'srZHdlpA]X~>
h#@@jJ]XY.s(nn=q]l(>q]g[lWrN)DJ]XV-rZd!opA]X~>
h#@@hJY]$9s(\b;q]Ge:q]CChWrN)@JY]!8rZ?^kpA]X~>
h#@@hJX<*ts(\b;q]Pk;q]LIiWrN)AJX<'srZHdlpA]X~>
h#@@jJ]XY.rbSh=rZh7=r$-dmWrN)DJ]XV-r?Hmnp]#a~>
h#@@hJY]$9rbA\;rZCt9r#^LiWrN)@JY]!8r?$Ujp]#a~>
h#@@hJX<*trbA\;rZM%:r#gRjWrN)AJX<'sr?-[kp]#a~>
h#@@jJ]XS,!,T.ErZgn3s!.LBs!**pYlF_JJ]XV-r?Hmnp]#a~>
h#@@hJY\s7!,B"CrZCV/ru_4>ruZglYlF_FJY]!8r?$Ujp]#a~>
h#@@hJX<$r!,B"CrZL\0ruh:?rucmmYlF_GJX<'sr?-[kp]#a~>
h#@@jJ]XS,!,T.ErZgn3s!.LBs!**pYlF_JJ]XV-r?Hmnp]#a~>
h#@@hJY\s7!,B"CrZCV/ru_4>ruZglYlF_FJY]!8r?$Ujp]#a~>
h#@@hJX<$r!,B"CrZL\0ruh:?rucmmYlF_GJX<'sr?-[kp]#a~>
hZ*RkJ]XS,s(o@Jq'52)r?HmnZN'qLJ]XV-r?Hmnp]#a~>
hZ*RiJY\s7s(]4Hq&eo%r?$UjZN'qHJY]!8r?$Ujp]#a~>
hZ*RiJX<$rs(]4Hq&nu&r?-[kZN'qIJX<'sr?-[kp]#a~>
hZ*Ul!$d':T?.(L]`7gQl2UT)JcE.Xs!**:TZR0XJcGKEJ,~>
hZ*Uj!$?cfT;2I%]`7gMl2UT%JcE.XruZffTVVQ/JcGKEJ,~>
hZ*Uj!$HiZT9fOm]`7gNl2UT&JcE.XruclZTU5X#JcGKEJ,~>
hZ*Ul!$d':T?7(K_uK]\rr;sBjT#-&JcE.Xs!**:TZR0XJcGKEJ,~>
hZ*Uj!$?cfT;;I$_uK]Xrr;s>jT#-"JcE.XruZffTVVQ/JcGKEJ,~>
hZ*Uj!$HiZT9oOl_uK]Yrr;s?jT#-#JcE.XruclZTU5X#JcGKEJ,~>
hZ*Ul!$d':T?7(K_uK]\rr;sBjT#-&JcE.Xs!**:TZR0XJcGKEJ,~>
hZ*Uj!$?cfT;;I$_uK]Xrr;s>jT#-"JcE.XruZffTVVQ/JcGKEJ,~>
hZ*Uj!$HiZT9oOl_uK]Yrr;s?jT#-#JcE.XruclZTU5X#JcGKEJ,~>
hZ*UlJ]XM*![DMt`rGo\h#IC!rr;sBJcE=]s!**:TZR0XJcGKEJ,~>
hZ*UjJY\m5!Zu/l`rGoXh#IBrrr;s>JcE=]ruZffTVVQ/JcGKEJ,~>
hZ*UjJX;sp![)5m`rGoYh#IBsrr;s?JcE=]ruclZTU5X#JcGKEJ,~>
hZ*UlJ]XJ)s(oaUqBOVlq]g[l^&S*WJ]XS,rZd!op]#a~>
hZ*UjJY\j4s(]USqB+>hq]CCh^&S*SJY\s7rZ?^kp]#a~>
hZ*UjJX;pos(]USqB4Diq]LIi^&S*TJX<$rrZHdlp]#a~>
hZ*UlJ]XJ)rbT[Ur?KhlqBLRk^An3XJ]XS,rZd!op]#a~>
hZ*UjJY\j4rbBOSr?'PhqB(:g^An3TJY\s7rZ?^kp]#a~>
hZ*UjJX;porbBOSr?0ViqB1@h^An3UJX<$rrZHdlp]#a~>
hZ*UlJ]XJ)rbT[Ur?KhlqBLRk^An3XJ]XS,rZd!op]#a~>
hZ*UjJY\j4rbBOSr?'PhqB(:g^An3TJY\s7rZ?^kp]#a~>
hZ*UjJX;porbBOSr?0ViqB1@h^An3UJX<$rrZHdlp]#a~>
hZ*UlJ]XJ)s!%M[cN!nhaoD;aJcELbrZd!9TZR-WJcGNFJ,~>
hZ*UjJY\j4ruV5UcN!ndaoD;]JcELbrZ?]eTVVN.JcGNFJ,~>
hZ*UjJX;poru_;VcN!neaoD;^JcELbrZHcYTU5U"JcGNFJ,~>
hZ*UlJ]XD'!,U*`qBNlWr?Hmna8c,`J]XS,r?Hmnq#>j~>
hZ*UjJY\d2!,Bs^qB*TSr?$Uja8c,\JY\s7r?$Ujq#>j~>
hZ*UjJX;jm!,Bs^qB3ZTr?-[ka8c,]JX<$rr?-[kq#>j~>
hZ*UlJ]XD's(p0aq]irWq]g[laoD>bJ]XS,r?Hmnq#>j~>
hZ*UjJY\d2s(^$_q]EZSq]CChaoD>^JY\s7r?$Ujq#>j~>
hZ*UjJX;jms(^$_q]N`Tq]LIiaoD>_JX<$rr?-[kq#>j~>
hZ*UlJ]XA&!,U?grZhCA!$f/Vr$-dmaoD>bJ]XS,r?Hmnq#>j~>
hZ*UjJY\a1!,C3erZD+=!$AlRr#^LiaoD>^JY\s7r?$Ujq#>j~>
hZ*UjJX;gl!,C3erZM1>!$JrSr#gRjaoD>_JX<$rr?-[kq#>j~>
hZ*UlJ]XA&!,U?grZhCA!$f/Vr$-dmaoD>bJ]XS,r?Hmnq#>j~>
hZ*UjJY\a1!,C3erZD+=!$AlRr#^LiaoD>^JY\s7r?$Ujq#>j~>
hZ*UjJX;gl!,C3erZM1>!$JrSr#gRjaoD>_JX<$rr?-[kq#>j~>
hZ*UlJ]XA&!,UEir$/TK!$hFAs!**pci<thJ]XS,r?Hmnq#>j~>
hZ*UjJY\a1!,C9gr#`<G!$D.=ruZglci<tdJY\s7r?$Ujq#>j~>
hZ*UjJX;gl!,C9gr#iBH!$M4>rucmmci<teJX<$rr?-[kq#>j~>
hZ*UlJ]XA&s(pNkq]i<Er$-dmdJs1jJ]XM*s!**pq#>j~>
hZ*UjJY\a1s(^Biq]E$Ar#^LidJs1fJY\m5ruZglq#>j~>
hZ*UjJX;gls(^Biq]N*Br#gRjdJs1gJX;sprucmmq#>j~>
hZ*UlJ]X>%!,LEjrZeNEq]g[ldf9:kJ]XM*s!**pq#>j~>
hZ*UjJY\^0!,:9hrZA6Aq]CChdf9:gJY\m5ruZglq#>j~>
hZ*UjJX;dk!,:9hrZJ<Bq]LIidf9:hJX;sprucmmq#>j~>
hZ*UlJ]X>%!,LEjrZeNEq]g[ldf9:kJ]XM*s!**pq#>j~>
hZ*UjJY\^0!,:9hrZA6Aq]CChdf9:gJY\m5ruZglq#>j~>
hZ*UjJX;dk!,:9hrZJ<Bq]LIidf9:hJX;sprucmmq#>j~>
hZ*UlJ]X>%!,CWqr?J':rZd!odf9:kJ]XM*s!**pq#>j~>
hZ*UjJY\^0!,(Enr?%d6rZ?^kdf9:gJY\m5ruZglq#>j~>
hZ*UjJX;dk!,1Kor?.j7rZHdldf9:hJX;sprucmmq#>j~>
hZ*UlJ]X>%!a7*)lMp]*S,`I4JcFF'rZd!9T#q!WJcGNFJ,~>
hZ*UjJY\^0!`p`slMp]&S,`I0JcFF'rZ?]eStuB.JcGNFJ,~>
hZ*UjJX;dk!a$j!lMp]'S,`I1JcFF'rZHcYSsTI"JcGNFJ,~>
hZ*UlJ]X>%!c'#*lMp]*SH&F1JcFO*rZd!9T#q!WJcGNFJ,~>
hZ*UjJY\^0!b`YtlMp]&SH&F-JcFO*rZ?]eStuB.JcGNFJ,~>
hZ*UjJX;dk!bic"lMp]'SH&F.JcFO*rZHcYSsTI"JcGNFJ,~>
hZ*UlJ]X>%!c'#*lMp]*SH&F1JcFO*rZd!9T#q!WJcGNFJ,~>
hZ*UjJY\^0!b`YtlMp]&SH&F-JcFO*rZ?]eStuB.JcGNFJ,~>
hZ*UjJX;dk!bic"lMp]'SH&F.JcFO*rZHcYSsTI"JcGNFJ,~>
hZ*UlJ]X>%!1a$5nG`J5r;ZdAQiHn,JcFR+s!**:S]UmVJcGNFJ,~>
hZ*UjJY\^0!1Ws0nG`J1r;Zd=QiHn(JcFR+ruZffSYZ9-JcGNFJ,~>
hZ*UjJX;dk!1Ws1nG`J2r;Zd>QiHn)JcFR+ruclZSX9@!JcGNFJ,~>
hZ*UlJ]X>%!0R7*oDe\4O8o/'JcFR+s!**:S]UjUJcGQGJ,~>
hZ*UjJY\^0!0@+$oDe\0O8o/#JcFR+ruZffSYZ6,JcGQGJ,~>
hZ*UjJX;dk!0I1&oDe\1O8o/$JcFR+ruclZSX9<uJcGQGJ,~>
hZ*UlJ]X>%!1a$5o`+b4M?!N!JcFd1s!**:S]UjUJcGQGJ,~>
hZ*UjJY\^0!1Nm/o`+b0M?!MrJcFd1ruZffSYZ6,JcGQGJ,~>
hZ*UjJX;dk!1Nm0o`+b1M?!MsJcFd1ruclZSX9<uJcGQGJ,~>
hZ*UlJ]X;$s#L*(p&Ft8LB%)pJcFm4s!**:S]UjUJcGQGJ,~>
hZ*UjJY\[/s#'fup&Ft4LB%)lJcFm4ruZffSYZ6,JcGQGJ,~>
hZ*UjJX;ajs#0m"p&Ft5LB%)mJcFm4ruclZSX9<uJcGQGJ,~>
hZ*UlJ]X;$s#L*(p&Ft8LB%)pJcFm4s!**:S]UjUJcGQGJ,~>
hZ*UjJY\[/s#'fup&Ft4LB%)lJcFm4ruZffSYZ6,JcGQGJ,~>
hZ*UjJX;ajs#0m"p&Ft5LB%)mJcFm4ruclZSX9<uJcGQGJ,~>
hZ*UlJ]X;$r?M:@r?Hmnr;Z[>JcFm4s!**:S]UjUJcGQGJ,~>
hZ*UjJY\[/r?)"<r?$Ujr;Z[:JcFm4ruZffSYZ6,JcGQGJ,~>
hZ*UjJX;ajr?2(=r?-[kr;Z[;JcFm4ruclZSX9<uJcGQGJ,~>
hZ*UlJ]X;$s%NG;s8Vs@JcGTHrZhCA!$d'pli6u0J]XJ)rZd!oq>Ys~>
hZ*UjJY\[/s%354s8Vs<JcGTHrZD+=!$?dlli6u,JY\j4rZ?^kq>Ys~>
hZ*UjJX;ajs%<;6s8Vs=JcGTHrZM1>!$Hjmli6u-JX;porZHdlq>Ys~>
hZ*UlJ]X;$s.007s8W!AJcG?Ar$-dmmf3;3J]XJ)rZd!oq>Ys~>
hZ*UjJY\[/s-s$1s8W!=JcG?Ar#^Limf3;/JY\j4rZ?^kq>Ys~>
hZ*UjJX;ajs-s$2s8W!>JcG?Ar#gRjmf3;0JX;porZHdlq>Ys~>
hZ*UlJ]X;$s.007s8W!AJcG?Ar$-dmmf3;3J]XJ)rZd!oq>Ys~>
hZ*UjJY\[/s-s$1s8W!=JcG?Ar#^Limf3;/JY\j4rZ?^kq>Ys~>
hZ*UjJX;ajs-s$2s8W!>JcG?Ar#gRjmf3;0JX;porZHdlq>Ys~>
hZ*RkJ]X>%q'1IjnGi>0JcG6>s!**:S]UjUJcGQGJ,~>
hZ*RiJY\^0q&b1fnGi>,JcG6>ruZffSYZ6,JcGQGJ,~>
hZ*RiJX;dkq&k7gnGi>-JcG6>ruclZSX9<uJcGQGJ,~>
h#@@jJ]XG(!,MBTJcG*:r$-dmnGiM5J]XG(s!**pq>Ys~>
h#@@hJY\g3!,20MJcG*:r#^LinGiM1JY\g3ruZglq>Ys~>
h#@@hJX;mn!,;6OJcG*:r#gRjnGiM2JX;mnrucmmq>Ys~>
h#@@jJ]XM*s1SFW!a9u!r?HmnjT#0'JcGKEs!**:SB:dUJcGQGJ,~>
h#@@hJY\m5s1J@R!`sYmr?$UjjT#0#JcGKEruZffS>?0,JcGQGJ,~>
h#@@hJX;sps1J@S!a'bpr?-[kjT#0$JcGKEruclZS<s6uJcGQGJ,~>
h#@@jJ]XM*s1SFW!a9u!r?HmnjT#0'JcGKEs!**:SB:dUJcGQGJ,~>
h#@@hJY\m5s1J@R!`sYmr?$UjjT#0#JcGKEruZffS>?0,JcGQGJ,~>
h#@@hJX;sps1J@S!a'bpr?-[kjT#0$JcGKEruclZS<s6uJcGQGJ,~>
h#@@jJ]XG(!]bVhrlP-aJcFg2q]g[lq>^I>J]XG(s!**pq>Ys~>
h#@@hJY\g3!]>8brhTN8JcFg2q]CChq>^I:JY\g3ruZglq>Ys~>
h#@@hJX;mn!]G>crg3U,JcFg2q]LIiq>^I;JX;mnrucmmq>Ys~>
h#ICjJ]Xe2!2f]>pW3CqrZd!ojo>3&JcGQGs!**:SB:dUJcGQGJ,~>
h#IChJY]0=!2]W9pS7dHrZ?^kjo>3"JcGQGruZffS>?0,JcGQGJ,~>
h#IChJX<7#!2f];pQkk<rZHdljo>3#JcGQGruclZS<s6uJcGQGJ,~>
g]%7iJ]Xk4s#L''s#Kkr!QmG%,D#mRs8O<ps7u]p,D!t,ao<T:s7u\F~>
g]%7gJY]6?s#0ius#'SI!Qd4u++aINs8O0ls7u]p++^5XV#MNfs7u\F~>
g]%7gJX<=%s#9p"s#0Y=!Qd8!+G'ROs8O3ms7u]p+G#lLQiA1Zs7u\F~>
g]%7iJ]Xq6!GgBe,64V6aT-Vc,D#mLs8=0ns8O<padgKQ,D#mjs*t~>
g]%7gJY]<A!GK@K*rr/1U]>W<++aIHs8=$js8O0lUn"7\++aIfs*t~>
g]%7gJX<C'!GT+C+9882QN27/+G'RIs8='ks8O3mQ^jEB+G'Rgs*t~>
g]%7iJ]Xq6!GgBe,64V6aT-Vc,D#mLs8=0ns8O<padgKQ,D#mjs*t~>
g]%7gJY]<A!GK@K*rr/1U]>W<++aIHs8=$js8O0lUn"7\++aIfs*t~>
g]%7gJX<C'!GT+C+9882QN27/+G'RIs8='ks8O3mQ^jEB+G'Rgs*t~>
g].7hJ]Y+;".d`_ir1/&Saso&3WC=Ts5!_N,D?*s,D!t,ao<T:s7u\F~>
g].7fJY]KF".QHreG^NiS+<BT2?+bLs5!_N+,'[o++^5XV#MNfs7u\F~>
g].7fJX<R,".Q'\ci,$eS+;pG2ZFnNs5!_N+GBdp+G#lLQiA1Zs7u\F~>
gAh1hJ]Y4>s.Ta63?od%aj/3%ao*H8s4[MN,D?*s,D!t,ao<T:s7u\F~>
gAh1fJY]TIs.BU12BO$XUs70SV#;Bds4[MN+,'[o++^5XV#MNfs7u\F~>
gAh1fJX<[/s.K[32]s6RQd*eFQi/%Xs4[MN+GBdp+G#lLQiA1Zs7u\F~>
gAh1h!$d':[`Jf5E)enY,?gtAmE,?G!'Gi4f`1srrr;sBM?!T#J]XG(s!**pq>Ys~>
gAh1f!$?cf[\O1cD,N8M+'5;8mA0_t!'#Q0f`1snrr;s>M?!StJY\g3ruZglq>Ys~>
gAh1f!$HiZ[[.8WDGrJQ+BYJ:m?dfh!',W1f`1sorr;s?M?!SuJX;mnrucmmq>Ys~>
gAh1h!$d':[`Jf5E)enY,?gtAmE,?G!'Gi4f`1srrr;sBM?!T#J]XG(s!**pq>Ys~>
gAh1f!$?cf[\O1cD,N8M+'5;8mA0_t!'#Q0f`1snrr;s>M?!StJY\g3ruZglq>Ys~>
gAh1f!$HiZ[[.8WDGrJQ+BYJ:m?dfh!',W1f`1sorr;s?M?!SuJX;mnrucmmq>Ys~>
gAh.gJ]YRHs0hsLs4IS8,9o3/UZ]`!G_,nDs8+%"s8O<padgKO,D#mls*t~>
gAh.eJY]rSs0hs's2"rh+!3?tU$&3OG(K\Bs8*mss8O0lUn"7Z++aIhs*t~>
gAh.eJX=$9s0hros1&<Z+<WR#U$%aBG(K\Bs8*pts8O3mQ^jE@+G'Ris*t~>
f`(qfJ]YaM!3H.@s$-N.rSdgIjN7ClJcF:#qBM""s!**:SB:^SJcGWIJ,~>
f`(qdJY^,X!3?'os#^6&rR:h9jJ;dFJcF:#qB(^sruZffS>?**JcGWIJ,~>
f`(qdJX=3>!3?'bs#g<(rQbJ4jHok9JcF:#qB1dtruclZS<s0sJcGWIJ,~>
f`(tg,D!tRaT0id,Q?]^aT<]XSUpghs8=1%s8O<padgKO,D#mls*t~>
f`(te++^6)U]@q#+9'dLU]MX.S:U^gs8=%!s8O0lUn"7Z++aIhs*t~>
f`(te+G#lrQN42a+TB^HQNA;"S:U^gs8=("s8O3mQ^jE@+G'Ris*t~>
f`(tg,D!tRaT0id,Q?]^aT<]XSUpghs8=1%s8O<padgKO,D#mls*t~>
f`(te++^6)U]@q#+9'dLU]MX.S:U^gs8=%!s8O0lUn"7Z++aIhs*t~>
f`(te+G#lrQN42a+TB^HQNA;"S:U^gs8=("s8O3mQ^jE@+G'Ris*t~>
f`1tfJ]Y[Ks!.PA"@(lj,L58is.+`@b5_JdPQ1Y-J]XG(r?Hmnqu;0~>
f`1tdJY^&Vru_89"?Y*T+0ORus."Z?b5_J`PQ1Y)JY\g3r?$Ujqu;0~>
f`1tdJX=-<ruh>;"?b!Q+J[n^s."Z?b5_JaPQ1Y*JX;mnr?-[kqu;0~>
fDbheJ]YjP!'1#"!N(;EaTL&7ak5RorgeW?bl@PbQN-t0J]XG(r?Hmnqu;0~>
fDbhcJY^5[!&a_N!Mt,AU]\-&Uqu#crg\Q>bl@P^QN-t,JY\g3r?$Ujqu;0~>
fDbhcJX=<A!&jeB!Mt/BQNOCWQau(Arg\Q>bl@P_QN-t-JX;mnr?-[kqu;0~>
fDkkeJ]Z*Ws/uD_r?D;9e]Ih9!1e]@bQ%GaQiI(1J]XG(r?Hmnqu;0~>
fDkkcJY^Jbs/c8Yr>u#2eYN3e!1\W?bQ%G]QiI(-JY\g3r?$Ujqu;0~>
fDkkcJX=QHs/c8Zr?))4eX-:Y!1\W?bQ%G^QiI(.JX;mnr?-[kqu;0~>
f)G_dJ]Z-X!7^ii!Gg`maT0rIaT.l_s2k<?,F8B0,D!t,ao*H8s82hH~>
f)G_bJY^Mc!4_kI!GLNjU]A6cU]?p9s2k<?+-us,++^5XV#;Bds82hH~>
f)G_bJX=TI!3Z/@!GUTkQN4SNQN3P,s2k<?+I<'-+G#lLQi/%Xs82hH~>
f)G_dJ]Z-X!7^ii!Gg`maT0rIaT.l_s2k<?,F8B0,D!t,ao*H8s82hH~>
f)G_bJY^Mc!4_kI!GLNjU]A6cU]?p9s2k<?+-us,++^5XV#;Bds82hH~>
f)G_bJX=TI!3Z/@!GUTkQN4SNQN3P,s2k<?+I<'-+G#lLQi/%Xs82hH~>
f)P_cJ]Z<]s'brer?M=ndE)BZJcEUer?Ip6s!**:SB:^SJcGWIJ,~>
f)P_aJY^\hs'G`Tr?)%gdA-c4JcEUer?%X2ruZffS>?**JcGWIJ,~>
f)P_aJX=cNs'PfPr?2+id?aj'JcEUer?.^3ruclZS<s0sJcGWIJ,~>
ec5Yc!$d':eB%`^7fFV:hV$T3cG.-AaT.l_s2+g5,G>):,D!t+ao3N9s82hH~>
ec5Ya!$?cfe>*,76N/&2bJM-+Y.hWtU]?p9s2+g5+/&Z6++^5WV#DHes82hH~>
ec5Ya!$HiZe<^3*6iJ24`4<F]UV=IiQN3P,s2+g5+JAc7+G#lKQi8+Ys82hH~>
ec5Yc!$d':f?+'(##ZZj/1f:ibK9dTJcEUer$.m7s!**:S&tXSJcGWIJ,~>
ec5Ya!$?cff;/GW##?<_.4McDbG>0.JcEUer#_U3ruZffS#$$*JcGWIJ,~>
ec5Ya!$HiZf9cNJ##HEb.OqT=bEr7!JcEUer#h[4ruclZS!X*sJcGWIJ,~>
ec5Yc!$d':f?+'(##ZZj/1f:ibK9dTJcEUer$.m7s!**:S&tXSJcGWIJ,~>
ec5Ya!$?cff;/GW##?<_.4McDbG>0.JcEUer#_U3ruZffS#$$*JcGWIJ,~>
ec5Ya!$HiZf9cNJ##HEb.OqT=bEr7!JcEUer#h[4ruclZS!X*sJcGWIJ,~>
ec5VbJ]ZNcs"XNu!&hj=!1e]@^]4<YrVumBVZ6Z@J]XD'rZd!oqu;0~>
ec5V`JY^nns"46m!&DQi!1\W?^]4<UrVum>VZ6Z<JY\d2rZ?^kqu;0~>
ec5V`JX=uTs"=<o!&MW]!1\W?^]4<VrVum?VZ6Z=JX;jmrZHdlqu;0~>
e,KGb,D!tmaU-A:aYDd",:ps8`lS4OJcE=]q]i*?s!**:S&tXSJcGWIJ,~>
e,KG`++^6DU^>DDUb1(<+"="``hWU)JcE=]q]Dg;ruZffS#$$*JcGWIJ,~>
e,KG`+G#m8QO2'+QS-T,+=`_U`g6[qJcE=]q]Mm<ruclZS!X*sJcGWIJ,~>
e,TGaJ]Zils1&;?,N@_4El#itSUpgPs7mn?s8O<pad^EO,D#mls*t~>
e,TG_JY_5"s0r5;+4SfME5A=MS:U^Os7mb;s8O0lUmn1Z++aIhs*t~>
e,TG_JX>;]s0r5;+OAB:E5@k@S:U^Os7me<s8O3mQ^a?@+G'Ris*t~>
e,TGaJ]Zils1&;?,N@_4El#itSUpgPs7mn?s8O<pad^EO,D#mls*t~>
e,TG_JY_5"s0r5;+4SfME5A=MS:U^Os7mb;s8O0lUmn1Z++aIhs*t~>
e,TG_JX>;]s0r5;+OAB:E5@k@S:U^Os7me<s8O3mQ^a?@+G'Ris*t~>
df0;`J]Zon#D,2l/0dWLQ+tH@SUpgNs8F7Bs8O<pad^EO,D#mls*t~>
df0;^JY_;$#Cnrd.3Cm?PJ<pnS:U^Ms8F+>s8O0lUmn1Z++aIhs*t~>
df0;^JX>A_#Cnuf.Nh*BPJ<IaS:U^Ms8F.?s8O3mQ^a?@+G'Ris*t~>
df9;_J][#q#"1!e>$B%j]u^:"SUpgGs8=1Ks8=0nad^EO,D#mls*t~>
df9;]JY_D'#!aUZ=')3>]qbZNS:U^Fs8=%Gs8=$jUmn1Z++aIhs*t~>
df9;]JX>Jb#!j^]=BLp4]pAaBS:U^Fs8=(Hs8='kQ^a?@+G'Ris*t~>
dJs5_J][6"s5*j11&g/4,Ikhr,FsDcZ2aYF[f?:NJ]XD'rZd!oqu;0~>
dJs5]JY_V-s5*j./cO6"+1S*I+.Ro^Z2aYB[f?:JJY\d2rZ?^kqu;0~>
dJs5]JX>\hs5*j/0)j/s+Lma=+In#_Z2aYC[f?:KJX;jmrZHdlqu;0~>
dJs2^J][?%!S<2,,QHc2aT.l_s0)J#,I[XN,D!t+ao3N9s82hH~>
dJs2\JY__0!PsQi+90iuU]?p9s0)J#+1D4J++^5WV#DHes82hH~>
dJs2\JX>ek!P+!a+TKcqQN3P,s0)J#+L_=K+G#lKQi8+Ys82hH~>
dJs2^J][?%!S<2,,QHc2aT.l_s0)J#,I[XN,D!t+ao3N9s82hH~>
dJs2\JY__0!PsQi+90iuU]?p9s0)J#+1D4J++^5WV#DHes82hH~>
dJs2\JX>ek!P+!a+TKcqQN3P,s0)J#+L_=K+G#lKQi8+Ys82hH~>
ci4#^,D!u,aoAaK:])HDaT.l_s/l>#,I[XN,D!t+ao3N9s82hH~>
ci4#\++^6XV#Re%9`-!=U]?p9s/l>#+1D4J++^5WV#DHes82hH~>
ci4#\+G#mLQiFDm:&H-?QN3P,s/l>#+L_=K+G#lKQi8+Ys82hH~>
ci=#]J][Q+!5\WU!BDD(ij-]*SUpg@s8+%Ts8=0nad^EO,D#mls*t~>
ci=#[JY_q6!5SQ/!Attue?YnLS:U^?s8*nPs8=$jUmn1Z++aIhs*t~>
ci=#[JX?"q!5SQ"!B))"ca&o:S:U^?s8*qQs8='kQ^a?@+G'Ris*t~>
cMml\J][]/!N'K.,Q,X`/[*7t,FtBVs/Q+p,Ja?X,D!t+ao3N9s82hH~>
cMmlZJY`%9!+Z!Mr1j<BYG;4AS=G01WrMl:_#O?TJY\d2rZ?^kqu;0~>
cMmlZJX?.u!Mj9*+T.Q+.^,0?+InsQs/Q+p+Me$U+G#lKQi8+Ys82hH~>
cMml\J][]/!N'K.,Q,X`/[*7t,FtBVs/Q+p,Ja?X,D!t+ao3N9s82hH~>
cMmlZJY`%9!+Z!Mr1j<BYG;4AS=G01WrMl:_#O?TJY\d2rZ?^kqu;0~>
cMmlZJX?.u!Mj9*+T.Q+.^,0?+InsQs/Q+p+Me$U+G#lKQi8+Ys82hH~>
cN!l[J][i3s#L$&!A%'Hao@o_s/5np,Ja?X,D!t+ao3N9s82hH~>
cN!lYJY`4>s#'`s!@^aBV#Qs9s/5np+2IpT++^5WV#DHes82hH~>
cN!lYJX?;$s#0fu!@ggCQiES,s/5np+Me$U+G#lKQi8+Ys82hH~>
c2[cZK#n?Jg"FKhSXiqmeC:D<s.+`@V#LE>rVumB`W,l]J]XD'rZd!oqu;0~>
c2[cXJtr`!_SW+ES"!Jd\@AH4s."Z?V#LE:rVum>`W,lYJY\d2rZ?^kqu;0~>
c2[cXJsQfj\[e&nS"!MeY-+[hs."Z?V#LE;rVum?`W,lZJX;jmrZHdlqu;0~>
bPqQYLWKN`ro3l$r5erpV9/_-JcDDCr$0;_r?Hm8S&tXSJcGWIJ,~>
bPqQWLSOo8rm^lgr1j>KV54*\JcDDCr#a#[r?$TdS#$$*JcGWIJ,~>
bPqQWLR/!+rm1Ncr0IE>V3h1OJcDDCr#j)\r?-ZXS!X*sJcGWIJ,~>
bQ%TYLWTB;!,J7Ls!%N7JcDDCq]j5_r?Hm8S&tURJcGZJJ,~>
bQ%TWLSXbg!,/%$ruV62JcDDCq]Er[r?$TdS#$!)JcGZJJ,~>
bQ%TWLR7i[!,/$lru_<3JcDDCq]O#\r?-ZXS!X'rJcGZJJ,~>
bQ%TYLWTB;!,J7Ls!%N7JcDDCq]j5_r?Hm8S&tURJcGZJJ,~>
bQ%TWLSXbg!,/%$ruV62JcDDCq]Er[r?$TdS#$!)JcGZJJ,~>
bQ%TWLR7i[!,/$lru_<3JcDDCq]O#\r?-ZXS!X'rJcGZJJ,~>
b5VHXN6)'VrlG/;r$.]Q!1e]@T)\a6aoD;aJ]XD'r?Hmnr;V9~>
b5VHVN2-H/rhKOjr#_E(!1\W?T)\a2aoD;]JY\d2r?$Ujr;V9~>
b5VHVN0aO"rg*V]r#hJq!1\W?T)\a3aoD;^JX;jmr?-[kr;V9~>
b5_KXP0!^RrlP0bs,$cts#C*)SXRY#SUpg,s8F7is8=0nad^EN,D#mms*t~>
b5_KVP,&*,rhTQ9s+gWMs"sg!S!p,QS:U^+s8F+es8=$jUmn1Y++aIis*t~>
b5_KVP*Z0trg3X-s+gW@s#'m#S!oZDS:U^+s8F.fs8='kQ^a??+G'Rjs*t~>
ao;?WQcTEkajehnao!C`f`:-!aT.l_s-Nc_,LZVj,D!t+ao*H8s8;nI~>
ao;?UQ_XfFUq!qOV#2>7_>rY^U]?p9s-Nc_+4C2f++^5WV#;Bds8;nI~>
ao;?UQ^7m9Q`dL%Qi&!+\H(]UQN3P,s-Nc_+O^;g+G#lKQi/%Xs8;nI~>
ao;?WQcTEkajehnao!C`f`:-!aT.l_s-Nc_,LZVj,D!t+ao*H8s8;nI~>
ao;?UQ_XfFUq!qOV#2>7_>rY^U]?p9s-Nc_+4C2f++^5WV#;Bds8;nI~>
ao;?UQ^7m9Q`dL%Qi&!+\H(]UQN3P,s-Nc_+O^;g+G#lKQi/%Xs8;nI~>
aoD?VRE5Kd,Q?^",Eg1KSUpg-s8!tis8=0nad^EN,D#mms*t~>
aoD?TRA9l,+9'de+-NH"S:U^,s8!hes8=$jUmn1Y++aIis*t~>
aoD?TR?mrm+TB^a+Hi)kS:U^,s8!kfs8='kQ^a??+G'Rjs*t~>
aT)9V!$e)W!(QnGqBH!Sro00a!@+.ds-3Q`,Q7ZB,M<%p,D!t+ao*H8s8;nI~>
aT)9T!$@f.!(-V5qB#^Erm[1.!?[h_s-3Q`+8u6>+5$Vl++^5WV#;Bds8;nI~>
aT)9T!$Il"!(6\1qB,dCrm-gq!?dn`s-3Q`+T;??+P?_m+G#lKQi/%Xs8;nI~>
aT)6UTZR5n!5A@UqVqDt!0rhk!1e]@NrT&&gAh*rJ]XD'r?Hmnr;V9~>
aT)6STVVV;!4;YGqUGEb!0`\D!1\W?NrT&"gAh*nJY\d2r?$Ujr;V9~>
aT)6STU5])!3uGEqTo'^!0`\7!1\W?NrT&#gAh*oJX;jmr?-[kr;V9~>
aT)6UTZR5n!5A@UqVqDt!0rhk!1e]@NrT&&gAh*rJ]XD'r?Hmnr;V9~>
aT)6STVVV;!4;YGqUGEb!0`\D!1\W?NrT&"gAh*nJY\d2r?$Ujr;V9~>
aT)6STU5])!3uGEqTo'^!0`\7!1\W?NrT&#gAh*oJX;jmr?-[kr;V9~>
`r?$TU<*DVr?Lgk!7mFW!1e]@NrSr#g].9uJ]XD'r?Hmnr;V9~>
`r?$RU8.e)r?(OY!7-q+!1\W?NrSqtg].9qJY\d2r?$Ujr;V9~>
`r?$RU6bknr?1UU!6pdq!1\W?NrSqug].9rJX;jmr?-[kr;V9~>
`rH'TW6#47a[S`E,O"-SaT.l_s,@!U,MW7u,D!t+ao*H8s8;nI~>
`rH'RW2'TfUd@Bi+6_4AU]?p9s,@!U+5?hq++^5WV#;Bds8;nI~>
`rH'RW0[[YQU=+_+R%.=QN3P,s,@!U+PZqr+G#lKQi/%Xs8;nI~>
`W#pSW6#(S,N.ROao7i^s,@!W,Q7ZB,N8\&,D!t+ao*H8s8;nI~>
`W#pQW2'I$+5kY=V#Hm8s,@!W+8u6>+6!8"++^5WV#;Bds8;nI~>
`W#pQW0[Oi+Q1S9Qi<M+s,@!W+T;??+Q<A#+G#lKQi/%Xs8;nI~>
`W,pRWlY6EhVt*J![E5GJcCN*qBP)$s!**:S&tURJcGZJJ,~>
`W,pPWh]VrhUJ*l!Zul?JcCN*qB+euruZffS#$!)JcGZJJ,~>
`W,pPWg<]fhTqaZ![)r@JcCN*qB4l!ruclZS!X'rJcGZJJ,~>
`W,pRWlY6EhVt*J![E5GJcCN*qBP)$s!**:S&tURJcGZJJ,~>
`W,pPWh]VrhUJ*l!Zul?JcCN*qB+euruZffS#$!)JcGZJJ,~>
`W,pPWg<]fhTqaZ![)r@JcCN*qB4l!ruclZS!X'rJcGZJJ,~>
`;fgQX3')TTZI6[Ci"\&L&_#pjo>?*J]XD'r?Hmnr;V9~>
`;fgOX/+J!TVMW2C2/>"L&_#ljo>?&JY\d2r?$Ujr;V9~>
`;fgOX-_PdTU,^&C2/>"L&_#mjo>?'JX;jmr?-[kr;V9~>
_Z'UPY0#5Rs!+;\s(m8dKE(oqjT#6)J]XD'r?Hmnr;V9~>
_Z'UNY,'Utru\#3s([,bKE(omjT#6%JY\d2r?$Ujr;V9~>
_Z'UNY*[\brue)'s([,bKE(onjT#6&JX;jmr?-[kr;V9~>
_Z0XPYfY>Q!$e;]s(m8dJcGZJr?L\/s!**:R`YORJcGZJJ,~>
_Z0XNYb]^s!$A#4s([,bJcGZJr?(D+ruZffR\]p)JcGZJJ,~>
_Z0XNYa<ea!$J)(s([,bJcGZJr?1J,ruclZR[=!rJcGZJJ,~>
_Z0XPYfY>Q!$e;]s(m8dJcGZJr?L\/s!**:R`YORJcGZJJ,~>
_Z0XNYb]^s!$A#4s([,bJcGZJr?(D+ruZffR\]p)JcGZJJ,~>
_Z0XNYa<ea!$J)(s([,bJcGZJr?1J,ruclZR[=!rJcGZJJ,~>
_>aLOZH:GP!$e>^s(m8dJcGZJq]kP/s!**:R`YORJcGZJJ,~>
_>aLMZD>gr!$A&5s([,bJcGZJq]G8+ruZffR\]p)JcGZJJ,~>
_>aLMZBrn`!$J,)s([,bJcGZJq]P>,ruclZR[=!rJcGZJJ,~>
_>jLN[`Q_PVTJgRJcC<$r;Z[>mf3;3J]XA&rZd!or;V9~>
_>jLL[\V*rVPO3+JcC<$r;Z[:mf3;/JY\a1rZ?^kr;V9~>
_>jLL[[51`VO.9sJcC<$r;Z[;mf3;0JX;glrZHdlr;V9~>
_#OFN!$f"qaPs/?s!%M[JcC<$q>^I>rVumBo`+q9J]XA&rZd!or;V9~>
_#OFL!$A_HaOI/aruV5UJcC<$q>^I:rVum>o`+q5JY\a1rZ?^kr;V9~>
_#OFL!$Je<aNpfOru_;VJcC<$q>^I;rVum?o`+q6JX;glrZHdlr;V9~>
_#OFN!$f"qaPs/?s!%M[JcC<$q>^I>rVumBo`+q9J]XA&rZd!or;V9~>
_#OFL!$A_HaOI/aruV5UJcC<$q>^I:rVum>o`+q5JY\a1rZ?^kr;V9~>
_#OFL!$Je<aNpfOru_;VJcC<$q>^I;rVum?o`+q6JX;glrZHdlr;V9~>
_#OCM]#hqNWQG/b!,R5dJcGBBr$1q8s!**:R`YORJcGZJJ,~>
_#OCK\tm<pWMKP9!,@)bJcGBBr#bY4ruZffR\]p)JcGZJJ,~>
_#OCK\sLC^WL*W-!,@)bJcGBBr#k_5ruclZR[=!rJcGZJJ,~>
^Ae1L]ZC-u_r@W:!,R5dJcGBBq'5_8s!**:R`YORJcGZJJ,~>
^Ae1J]VGNL_pkW\!,@)bJcGBBq&fG4ruZffR\]p)JcGZJJ,~>
^Ae1J]U&U@_p>9J!,@)bJcGBBq&oM5ruclZR[=!rJcGZJJ,~>
^An4L]ue.Ns!+Pc!,R5dJcG9?rZh1;s!**:R`YORJcGZJJ,~>
^An4J]qiNpru\8:!,@)bJcG9?rZCn7ruZffR\]p)JcGZJJ,~>
^An4J]pHU^rue>.!,@)bJcG9?rZLt8ruclZR[=!rJcGZJJ,~>
^&J(K]ue(L!$ePd!,R5dJcG$8rZhFBs!**:R`YORJcGZJJ,~>
^&J(I]qiHn!$A8;!,@)bJcG$8rZD.>ruZffR\]p)JcGZJJ,~>
^&J(I]pHO\!$J>/!,@)bJcG$8rZM4?ruclZR[=!rJcGZJJ,~>
^&J(K]ue(L!$ePd!,R5dJcG$8rZhFBs!**:R`YORJcGZJJ,~>
^&J(I]qiHn!$A8;!,@)bJcG$8rZD.>ruZffR\]p)JcGZJJ,~>
^&J(I]pHO\!$J>/!,@)bJcG$8rZM4?ruclZR[=!rJcGZJJ,~>
^&S+K_9'@L!$eSe!GlM%s+149s7mmjadU?N,D#mms*t~>
^&S+I_5+`n!$A;<!GZ7us+149s7mafUme+Y++aIis*t~>
^&S+I_3_g\!$JA0!GZ;!s+149s7mdgQ^X9?+G'Rjs*t~>
]`.tJ_9'=Ks!+\g!@)3-s+149s7mmjadU?N,D#mms*t~>
]`.tH_5+]mru\D>!?Yj's+149s7mafUme+Y++aIis*t~>
]`.tH_3_d[rueJ2!?bp(s+149s7mdgQ^X9?+G'Rjs*t~>
]`7tI`6#OKY/p\hAqBu5s60L[,D!t+ao3N9s8;nI~>
]`7tG`2'omY+u(?A:ac3s60L[++^5WV#DHes8;nI~>
]`7tG`0\![Y*T/3A:ac3s60L[+G#lKQi8+Ys8;nI~>
]`7tI`6#OKY/p\hAqBu5s60L[,D!t+ao3N9s8;nI~>
]`7tG`2'omY+u(?A:ac3s60L[++^5WV#DHes8;nI~>
]`7tG`0\![Y*T/3A:ac3s60L[+G#lKQi8+Ys8;nI~>
]DqnI`lY[KXiUQTJcC<$jo>0%J]XP+rZd!or;V9~>
]DqnG`h^&mXeYr-JcC<$jo>0!JY\p6rZ?^kr;V9~>
]DqnG`g=-[Xd9#uJcC<$jo>0"JX<!qrZHdlr;V9~>
]DqkHa2taKY/pZTJcC<$jo>'"J]XY.rZd!or;V9~>
]DqkFa/$,mY+u&,JcC<$jo>&sJY]$9rZ?^kr;V9~>
]DqkFa-X3[Y*T,tJcC<$jo>&tJX<*trZHdlr;V9~>
\c2\H,K\'6iigH*>p^nLs+145s8F8Canm<6aeQuW,D#mms*t~>
\c2\F+3C=be?>YL=sG8Cs+145s8F,?V#)6bUnaab++aIis*t~>
\c2\F+N]tVc``Z:>9bADs+145s8F/@QhqnVQ_ToH+G'Rjs*t~>
\c2\H,K\'6iigH*>p^nLs+145s8F8Canm<6aeQuW,D#mms*t~>
\c2\F+3C=be?>YL=sG8Cs+145s8F,?V#)6bUnaab++aIis*t~>
\c2\F+N]tVc``Z:>9bADs+145s8F/@QhqnVQ_ToH+G'Rjs*t~>
\c;\Gb/psKYK6hj-74<DJcFp5rZhB`rZhB`s!**:W6,#`JcGZJJ,~>
\c;\Eb+u>mYG;4A,9qd>JcFp5rZD*7rZD*7ruZffW20D7JcGZJJ,~>
\c;\Eb*TE[YEo;5,9qd>JcFp5rZM0+rZM0+ruclZW0dK+JcGZJJ,~>
\GlPFbK7!JYfQqk,pe-BJcFm4s!.6Zr$-d7X3(>cJcGZJJ,~>
\GlPDbG;AlYbV=B+X)F:JcFm4ru^s1r#^KcX/,_:JcGZJJ,~>
\GlPDbEoHZYa5D6+sMU<JcFm4ruh$%r#gQWX-`f.JcGZJJ,~>
\GuPEc,m-JZH<(jJcC<$k5YH+p<!1VJ]Y"8rZd!or;V9~>
\GuPCc(qMlZD@IAJcC<$k5YH'p8%R-JY]BCrZ?^kr;V9~>
\GuPCc'PTZZBtP5JcC<$k5YH(p6YY!JX<I)rZHdlr;V9~>
\,ZJEccN9JZcN=$;BmE;s+144s8O>:ao!B7afNV`,D#mms*t~>
\,ZJCc_RYlZ_R]>:*1R/s+144s8O26V#2<cUo^Bk++aIis*t~>
\,ZJCc^1`ZZ^1d):EUd2s+144s8O57Qi%tWQ`QPQ+G'Rjs*t~>
\,ZJEccN9JZcN=$;BmE;s+144s8O>:ao!B7afNV`,D#mms*t~>
\,ZJCc_RYlZ_R]>:*1R/s+144s8O26V#2<cUo^Bk++aIis*t~>
\,ZJCc^1`ZZ^1d):EUd2s+144s8O57Qi%tWQ`QPQ+G'Rjs*t~>
\,ZGDd)i?JZcN9;-74<DJcFm4s!-mPrZd!9ZcW1kJcGZJJ,~>
\,ZGBd%m_lZ_RYi,9qd>JcFm4ru^U'rZ?]eZ_[RBJcGZJJ,~>
\,ZGBd$LfZZ^1`],9qd>JcFm4rugZprZHcYZ^:Y6JcGZJJ,~>
[Jp5CdE/EJZcN:02)TsbJcFm4s!-pQq]g[6[E8CmJcGZJJ,~>
[Jp5AdA3elZ_RZ`0en7ZJcFm4ru^X(q]CBb[A<dDJcGZJJ,~>
[Jp5Ad?glZZ^1aS1,=F\JcFm4rug]qq]LHV[?pk8JcGZJJ,~>
[Jp8D,Lac5ij6c,=FpL's5s@[,OW\M,D!tGao3N9s8;nI~>
[Jp8B+4I$ae?btN<It1$s5s@[+7>s$++^5sV#DHes8;nI~>
[Jp8B+Oc[Uca/u<<It1$s5s@[+RYTm+G#lgQi8+Ys8;nI~>
[Jp8D,Lac5ij6c,=FpL's5s@[,OW\M,D!tGao3N9s8;nI~>
[Jp8B+4I$ae?btN<It1$s5s@[+7>s$++^5sV#DHes8;nI~>
[Jp8B+Oc[Uca/u<<It1$s5s@[+RYTm+G#lgQi8+Ys8;nI~>
[K$8Ce&eKH[E8Ga!(_\@JcFp5r?LXMs!**:[E8CmJcGZJJ,~>
[K$8Ae"ikj[A<h9!(DJ=JcFp5r?(@$ruZff[A<dDJcGZJJ,~>
[K$8Ae!HrX[?po-!(MP>JcFp5r?1EmruclZ[?pk8JcGZJJ,~>
[/U/C,M'u4iW(43ao<Rc@Y+Q1s6'F\,N[&G,Q>dbWe&:.ao3N9s8;nI~>
[/U/A+4d6`e,UT!V#MM:?\/6.s6'F\+6B<s+9&&9We$t^V#DHes8;nI~>
[/U/A+P)mTcN#)rQiA0.@"J?/s6'F\+Q\sg+T@]-X+?VRQi8+Ys8;nI~>
[/^/Bf?'cH[`SOo!,I/cJcFp5r?LFGq]c,"8qG+#ao3N9s8;nI~>
[/^/@f;,.j[\WpF!,7#aJcFp5r?(-sq]>hs8qEeSV#DHes8;nI~>
[/^/@f9`5X[[7":!,7#aJcFp5r?13gq]Go"9nAYIQi8+Ys8;nI~>
[/^/Bf?'cH[`SOo!,I/cJcFp5r?LFGq]c,"8qG+#ao3N9s8;nI~>
[/^/@f;,.j[\WpF!,7#aJcFp5r?(-sq]>hs8qEeSV#DHes8;nI~>
[/^/@f9`5X[[7":!,7#aJcFp5r?13gq]Go"9nAYIQi8+Ys8;nI~>
Zi:#Af?'cH[)i;aJcC<$k5YE*j2q<GrAK5K_9)[$JcGZJJ,~>
Zi:#?f;,.j[%m\:JcC<$k5YE&j.u\srAK5&_5.&PJcGZJJ,~>
Zi:#?f9`5X[$Lc-JcC<$k5YE'j-TcgrAfFq_3b-DJcGZJJ,~>
ZiC#@fu]rIs5UT1!,R5dJcFm4rZgCDs+LK=LAo9p:k?a-ao3N9s8;nI~>
ZiC#>fqb=ks4k)Z!,@)bJcFm4rZC*ps+LK=LAmtK9nB+ZV#DHes8;nI~>
ZiC#>fpADYs4OlJ!,@)bJcFm4rZL0ds+^WAM#N_@9nAYMQi8+Ys8;nI~>
ZN'r@g<$#I[E/DbJcC<$k5YE*gr]RVs!.P1J]Z!TrZd!or;V9~>
ZN'r>g8(Ck[A3e;JcC<$k5YE&gnas-ru_8*JY^A_rZ?^kr;V9~>
ZN'r>g6\JY[?gl.JcC<$k5YE'gmA%!ruh>,JX=HErZHdlr;V9~>
ZN'r@g<#rG\&eVdJcC<$k5YE*gr]S[!'1$'"%(,ehgrnnao3N9s8;nI~>
ZN'r>g8(=i\"j"=JcC<$k5YE&gnat4!&jfu"$`U=hgqTIV#DHes8;nI~>
ZN'r>g6\DW\!I)0JcC<$k5YE'gmA&'!&sm""$i41hgq-<Qi8+Ys8;nI~>
ZN'r@g<#rG\&eVdJcC<$k5YE*gr]S[!'1$'"%(,ehgrnnao3N9s8;nI~>
ZN'r>g8(=i\"j"=JcC<$k5YE&gnat4!&jfu"$`U=hgqTIV#DHes8;nI~>
ZN'r>g6\DW\!I)0JcC<$k5YE'gmA&'!&sm""$i41hgq-<Qi8+Ys8;nI~>
ZN'o?h8u2H\&nYdJcC<$kPtN+fuX4\rZ_NeD/G;aaj%s,,D#mms*t~>
ZN'o=h5$Rj\"s%=JcC<$kPtN'fq\U5rZ;6<D/G;aUs5_7++aIis*t~>
ZN'o=h3XYX\!R,0JcC<$kPtN(fp;\(rZD<0Df:_gQd(lr+G'Rjs*t~>
Yl=]>h8u/G\B+arCk;V;s6'F\,Lsp82?>$hJ]Z6[rZd!or;V9~>
Yl=]<h5$Oi\>0-IC4ZD9s6'F\+4[1d2?=maJY^VfrZ?^kr;V9~>
Yl=]<h3XVW\<d4=C4ZD9s6'F\+OuhX3<:6fJX=]LrZHdlr;V9~>
Yl=`?,N$V3ijd)2,A_r2JcFp5r?Kn8!)NSPr$-d7d`MJ5JcGZJJ,~>
Yl=`=+5`l_e@;:T+)6B,JcFp5r?'Ud!)NSPr#^Kcd\QjaJcGZJJ,~>
Yl=`=+Q&NSca];B+DQK-JcFp5r?0[X!)ieVr#gQWd[0qUJcGZJJ,~>
Yl=`?,N$V3ijd)2,A_r2JcFp5r?Kn8!)NSPr$-d7d`MJ5JcGZJJ,~>
Yl=`=+5`l_e@;:T+)6B,JcFp5r?'Ud!)NSPr#^Kcd\QjaJcGZJJ,~>
Yl=`=+Q&NSca];B+DQK-JcFp5r?0[X!)ieVr#gQWd[0qUJcGZJJ,~>
Yl=`?,N$V2ijd)1Ck;V;s6'F\,M's=kDP8?q]g[6e&hS6JcGZJJ,~>
Yl=`=+5`l^e@;:SC4ZD9s6'F\+4d4ijGSqlq]CBbe"lsbJcGZJJ,~>
Yl=`=+Q&NRca];AC4ZD9s6'F\+P)k]jG]%aq]LHVe!L%VJcGZJJ,~>
YlF`>i5qAG!$f%r!,R5dJcFp5r?Kk7s4mUqr?M-[!5O0-gr]O?JcGZJJ,~>
YlF`<i1uai!$AbI!,@)bJcFp5r?'Rcs2t>:r?(j2!5O/]gnaokJcGZJJ,~>
YlF`<i0ThW!$Jh=!,@)bJcFp5r?0XWs2Fu(r?1p&!5X5QgmA!_JcGZJJ,~>
YQ"T=iQ2'EQf>Qt!,R5dJcFm4rZfP,r$)2HJ]Z`ir?Hmnr;V9~>
YQ"T;iM6GqQdiRA!,@)bJcFm4rZB7Xr#YoDJY_+tr?$Ujr;V9~>
YQ"T;iKjNeQd<4/!,@)bJcFm4rZK=Lr#buGJX>2Zr?-[kr;V9~>
YQ"T=iQ2'EQf>Qt!,R5dJcFm4rZfP,r$)2HJ]Z`ir?Hmnr;V9~>
YQ"T;iM6GqQdiRA!,@)bJcFm4rZB7Xr#YoDJY_+tr?$Ujr;V9~>
YQ"T;iKjNeQd<4/!,@)bJcFm4rZK=Lr#buGJX>2Zr?-[kr;V9~>
YQ"T=iQ7DF\]FhfJcC<$k5YE*aiXK+s#,GMh9#U?JcGZJJ,~>
YQ"T;iM;dh\YK4?JcC<$k5YE&ae\kWs#,G(h5'ukJcGZJJ,~>
YQ"T;iKokV\X*;2JcC<$k5YE'ad;rKs#GXsh3\'_JcGZJJ,~>
YQ"Z?,9u6jQK#Hs!,R5dJcFm4rZfM+rZh>!"AaW$ZIj`MjiRHGJcGZJJ,~>
YQ"Z=+!9O=QINI@!,@)bJcFm4rZB4WrZD%r"AaW$ZIj`(jeVhsJcGZJJ,~>
YQ"Z=+<]^2QI!+.!,@)bJcFm4rZK:KrZM,!"B'o+Ze0hqjd5ogJcGZJJ,~>
YQ"Z?,9u6jPiB<s!G4$:s+145s8F7_ao=7!,Q5aa,60IsaT:&PJ][3!r?Hmnr;V9~>
YQ"Z=+!9O=Pgm=@!G!a4s+145s8F+[V#N=Q+8r#8*rmnkU]K,sJY_S,r?$Ujr;V9~>
YQ"Z=+<]^2Pg?t.!G!d5s+145s8F.\QiB&G+T7Z,+94%mQN>ddJX>Ygr?-[kr;V9~>
YQ"Z?,9u<lP2a*q!@'.Hs+145s8=1_aT,K@anm:da\R8WTsK<lmE,;OJcGZJJ,~>
YQ"Z=+!9U?P17+>!?W_@s+145s8=%[U]=QpV#)5;Uec?2TsK<GmA0\&JcGZJJ,~>
YQ"Z=+<]d4P0^b,!?`hBs+145s8=(\QN17eQhqm/QVi.*UU>Z>m?dboJcGZJJ,~>
YQ"Z?,9u<lP2a*q!@'.Hs+145s8=1_aT,K@anm:da\R8WTsK<lmE,;OJcGZJJ,~>
YQ"Z=+!9U?P17+>!?W_@s+145s8=%[U]=QpV#)5;Uec?2TsK<GmA0\&JcGZJJ,~>
YQ"Z=+<]d4P0^b,!?`hBs+145s8=(\QN17eQhqm/QVi.*UU>Z>m?dboJcGZJJ,~>
YQ+T<jiNYE]ZC1!."VDLs6'F\,KIn+i;:Xm,Q'HNamI4K,D#mms*t~>
YQ+T:jeS$g]VGQM,_>uHs6'F\+31/We,,s;+8e$JV!XuV++aIis*t~>
YQ+T:jd2+U]U&XA-%Z)Is6'F\+NKfKchj(*+T+6NQgL.<+G'Rjs*t~>
Y5eN<jiNYE]u^?$,:.p@JcFp5r?K"t!,VWZ!6P-sJ][?%r?Hmnr;V9~>
Y5eN:jeS$g]qb_4+!H48JcFp5r?&_K!,;ES!2TNNJY__0r?$Ujr;V9~>
Y5eN:jd2+U]pAeq+<lC:JcFp5r?/e?!,;ET!13UDJX>ekr?-[kr;V9~>
Y5eN<k/i_E!$f5"!l?rBJcC<$kPtK*\B4Y,J][?%r?Hmnr;V9~>
Y5eN:k+n*g!$AqN!l6`9JcC<$kPtK&\>9$\JY__0r?$Ujr;V9~>
Y5eN:k*M1U!$K"B!l6c;JcC<$kPtK'\<m+RJX>ekr?-[kr;V9~>
Y5eN<k/i_E!$f5"!l?rBJcC<$kPtK*\B4Y,J][?%r?Hmnr;V9~>
Y5eN:k+n*g!$AqN!l6`9JcC<$kPtK&\>9$\JY__0r?$Ujr;V9~>
Y5eN:k*M1U!$K"B!l6c;JcC<$kPtK'\<m+RJX>ekr?-[kr;V9~>
Y5eN<k/i\D]u^:',D#lGs5j:\,Iben2ZG!%=b4]bao*H8s8;nI~>
Y5eN:k+n'f]qbZS++aHCs5j:\+1J'E2ZFj!<Ipt9V#;Bds8;nI~>
Y5eN:k*M.T]pAaG+G'QDs5j:\+Ld^93WC3%<IpM,Qi/%Xs8;nI~>
Y5eN<kK/bD]ug:!JcC<$jo>?*\&nZr"J/XP2Ud6!n]C_SJcGZJJ,~>
Y5eN:kG4-f]qkZMJcC<$jo>?&\"s&M"J/XP2UI#NnYH+*JcGZJJ,~>
Y5eN:kEh4T]pJaAJcC<$jo>?'\!R-A"J8dV3R<8CnX'1sJcGZJJ,~>
Y5eN<kK/bD]ug:!JcC<$jo>?*[E/I-T)CSGaTPEu2LFV<ans3Y,D#mms*t~>
Y5eN:kG4-f]qkZMJcC<$jo>?&[A3iPT)CSGU]aLP2LFM9V#-td++aIis*t~>
Y5eN:kEh4T]pJaAJcC<$jo>?'[?gp?TD^eKQNU/D2LOS:Qi!-J+G'Rjs*t~>
Y5eN<kK/bD]ug:!JcC<$jo>?*[E/I-T)CSGaTPEu2LFV<ans3Y,D#mms*t~>
Y5eN:kG4-f]qkZMJcC<$jo>?&[A3iPT)CSGU]aLP2LFM9V#-td++aIis*t~>
Y5eN:kEh4T]pJaAJcC<$jo>?'[?gp?TD^eKQNU/D2LOS:Qi!-J+G'Rjs*t~>
YQ+T<l,ehB^WHL#JcC<$jo>9(Y/pk,6NI3'd"0=9ao*H8s8;nI~>
YQ+T:l(j3d^SLlOJcC<$jo>9$Y+u6N6NI3'd"/"iV#;Bds8;nI~>
YQ+T:l'I:R^R+sCJcC<$jo>9%Y*T=<63.*&d".P\Qi/%Xs8;nI~>
YQ"Z?,9uHpMW2Cm!BDBUs+143s8=1FaT^[M'bqEsJ][f2r?Hmnr;V9~>
YQ"Z=+!9aCMU]D:!B)$Ns+143s8=%BU]o7m'GM3mJY`1=r?$Ujr;V9~>
YQ"Z=+<]p8MU0&(!B2-Ps+143s8=(CQNb]['GM3nJX?8#r?-[kr;V9~>
YQ"Z?,9uHpMW2Cm!.XtmJcC<$kPtK*XiU_"_o($kJ][f2r?Hmnr;V9~>
YQ"Z=+!9aCMU]D:!.FhgJcC<$kPtK&XeZ*P_84RaJY`1=r?$Ujr;V9~>
YQ"Z=+<]p8MU0&(!.OniJcC<$kPtK'Xd91B^qe@]JX?8#r?-[kr;V9~>
YQ"Z?,9uHpM;l=m!0mI-JcC<$kPtK*WlY8#rQ,2W*bAp,K?=':JcGZJJ,~>
YQ"Z=+!9aCM:B>:!0[='JcC<$kPtK&Wh]XErM0S0*G&g+K;AGfJcGZJJ,~>
YQ"Z=+<]p8M9iu(!0dC)JcC<$kPtK'Wg<_3rKdZ"*G&g+K9uNZJcGZJJ,~>
YQ"Z?,9uHpM;l=m!0mI-JcC<$kPtK*WlY8#rQ,2W*bAp,K?=':JcGZJJ,~>
YQ"Z=+!9aCM:B>:!0[='JcC<$kPtK&Wh]XErM0S0*G&g+K;AGfJcGZJJ,~>
YQ"Z=+<]p8M9iu(!0dC)JcC<$kPtK'Wg<_3rKdZ"*G&g+K9uNZJcGZJJ,~>
YQ"T=kfJY?^rZSZrZd!oJcFm4rZe8]#D3Bj#rH5;b_F7<,D#mms*t~>
YQ"T;kbO$a^n^t3rZ?^kJcFm4rZ@u4#D*<i#r?/:b_Dql++aIis*t~>
YQ"T;ka.+O^m>&'rZHdlJcFm4rZJ&(#D!6h#r?/:b_DJ_+G'Rjs*t~>
YQ"T=kfJY?^rZT!rZd!oJcFm4rZe8]#H0<p)@-_0N;^iuk)7@[,D#mms*t~>
YQ"T;kbO$a^n^tPrZ?^kJcFm4rZ@u4#Gs-m)@-_0N;]OPk)6&6++aIis*t~>
YQ"T;ka.+O^m>&CrZHdlJcFm4rZJ&(#Gj'l)@-_0N;](Ck)5T)+G'Rjs*t~>
YQ"T=kfJV>_8u]/rZd!oJcFm4rZe5\#250#/hjW<rQ,(lVi8ar,D#mms*t~>
YQ"T;kbO!`_5%(_rZ?^kJcFm4rZ@r3#25)t/MFH:rM0IGVi7GM++aIis*t~>
YQ"T;ka.(N_3Y/RrZHdlJcFm4rZJ#'#25&r/MFH:rKdP<W/R)A+G'Rjs*t~>
YQ"T=kfJV>_8u]/rZd!oJcFm4rZe5\#250#/hjW<rQ,(lVi8ar,D#mms*t~>
YQ"T;kbO!`_5%(_rZ?^kJcFm4rZ@r3#25)t/MFH:rM0IGVi7GM++aIis*t~>
YQ"T;ka.(N_3Y/RrZHdlJcFm4rZJ#'#25&r/MFH:rKdP<W/R)A+G'Rjs*t~>
YQ"T=l,e\>_8uf559hD(s+144s8F7:aoC)nao40u6]B.c,D#mms*t~>
YQ"T;l(j'`_5%1d4<GYrs+144s8F+6V#T0IV#E7P6]@i>++aIis*t~>
YQ"T;l'I.N_3Y8W4Wkkus+144s8F.7QiGe<Qi8uF7?!T3+G'Rjs*t~>
YQ"T=l,eV<_T;jY,9qd>JcFm4r?IiSr\jd$NQM,DJcGZJJ,~>
YQ"T;l(j!^_P@61+!6(6JcFm4r?%Q*r\jcuNMQLpJcGZJJ,~>
YQ"T;l'I(L_Nt=%+<Z78JcFm4r?.Vsr]1!$NL0SdJcGZJJ,~>
YQ"T=l,eV<_T;jm,9qd>JcFm4r?IiSqBM'CrZd!oqu;0~>
YQ"T;l(j!^_P@6E+!6(6JcFm4r?%Q*qB(corZ?^kqu;0~>
YQ"T;l'I(L_Nt=9+<Z78JcFm4r?.VsqB1icrZHdlqu;0~>
YQ"T=l,eV<_T;jm,9qd>JcFm4r?IiSqBM'CrZd!oqu;0~>
YQ"T;l(j!^_P@6E+!6(6JcFm4r?%Q*qB(corZ?^kqu;0~>
YQ"T;l'I(L_Nt=9+<Z78JcFm4r?.VsqB1icrZHdlqu;0~>
YlF`>lcFb<!8,32!ad/sJcC<$k5YB)RE>IRNQM/EJcGWIJ,~>
YlF`<l_K-^!8#,a!aHfhJcC<$k5YB%RABj)NMQOqJcGWIJ,~>
YlF`<l^*4L!8,2U!aQokJcC<$k5YB&R@!prNL0VeJcGWIJ,~>
Yl=`?,O<I'iW(4@aT?f6,D#lGs5s@[,Ep7H,F?OO,D#mls*t~>
Yl=`=+7#_Se,UT.U]Pf`++aHCs5s@[+-WMt+.&f&++aIhs*t~>
Yl=`=+R>AGcN#**QNDFT+G'QDs5s@[+Hr/h+IAGo+G'Ris*t~>
Yl=`?,O<I&ikrk>X!T0Es+143s8F7,and6Lao3N9s82hH~>
Yl=`=+7#_ReAJ'`WZra>s+143s8F+(V"u1#V#DHes82hH~>
Yl=`=+R>AFcbl(NWZra>s+143s8F.)QhhhlQi8+Ys82hH~>
Yl=]>lH+V:_oVtt-74<DJcFj3rZdNHr?I]OrZd!oqu;0~>
Yl=]<lD0!\_k[@N,9qd>JcFj3rZ@5tr?%E&rZ?^kqu;0~>
Yl=]<lBd(J_j:GA,9qd>JcFj3rZI;hr?.JorZHdlqu;0~>
Yl=]>lH+V:_oVtt-74<DJcFj3rZdNHr?I]OrZd!oqu;0~>
Yl=]<lD0!\_k[@N,9qd>JcFj3rZ@5tr?%E&rZ?^kqu;0~>
Yl=]<lBd(J_j:GA,9qd>JcFj3rZI;hr?.JorZHdlqu;0~>
Yl=]>lcF_;!TMeNaTL?L.jKWFJcFm4rZdEE!$hHas!+,WrZd!oqu;0~>
Yl=]<l_K*]!S#c?U]]F#-Qdp>JcFm4rZ@,q!$D08ru[i.rZ?^kqu;0~>
Yl=]<l^*1K!RKH;QNQ%l-m4*@JcFm4rZI2e!$M6,rudo"rZHdlqu;0~>
Yl=]>lcF_;!TLK(ao3N9s+144s8=1#and6Uao3N9s82hH~>
Yl=]<l_K*]!S"?kV#DHes+144s8=$tV"u1,V#DHes82hH~>
Yl=]<l^*1K!RJ!fQi8+Ys+144s8='uQhhhuQi8+Ys82hH~>
ZN'o?lcF_;s5Lr<rZd!oJcFm4r?IlTpu;"hq]hiWrZd!oqu;0~>
ZN'o=l_K*]s4"r^rZ?^kJcFm4r?%T+psf#5q]DQ.rZ?^kqu;0~>
ZN'o=l^*1Ks3JTLrZHdlJcFm4r?.Ytps8Z#q]MW"rZHdlqu;0~>
ZN'o?lcF_;s5Lr<rZd!oJcFm4r?IlTpu;"hq]hiWrZd!oqu;0~>
ZN'o=l_K*]s4"r^rZ?^kJcFm4r?%T+psf#5q]DQ.rZ?^kqu;0~>
ZN'o=l^*1Ks3JTLrZHdlJcFm4r?.Ytps8Z#q]MW"rZHdlqu;0~>
ZN'r@!$ggOJ`?^h_o_p'!%!3rJcFm4r?J2]m,A06l06Tar5nm^U<3BZJcGWIJ,~>
ZN'r>!$CO&J^j_L_kd;S!$QpnJcFm4r?%o4m*l1"k2spTr1s95U87c1JcGWIJ,~>
ZN'r>!$LToJ^=AB_jCBG!$[!oJcFm4r?.u(m*>dpjlObaQi/&$Qi8+Ys82hH~>
ZN'r@!$gjPJ`?[g_o_p'!%`^$JcFm4r?JAbio1+&[C&OWqT8[\WQG,aJcGWIJ,~>
ZN'r>!$CR'J^j\K_kd;S!%EL!JcFm4r?&)9im\+jZ*?\GqP='3WMKM8JcGWIJ,~>
ZN'r>!$LWpJ^=>A_jCBG!%NR"JcFm4r?//-im.bdZ*?_IqNq.'WL*T,JcGWIJ,~>
ZN'r@lcF_;ro1i;s!%M#JcC<$jT#6)Y0#JY"m+_q/L)M>aT4OYr?JAbrZd!oqu;0~>
ZN'r>l_K*]rm\i]ruV4qJcC<$jT#6%Y,'k&"le#\.3BZ2U]EJ,r?&)9rZ?^kqu;0~>
ZN'r>l^*1Krm/KKru_:rJcC<$jT#6&Y*[qi"l[cW.Nfl5QN9)ur?//-rZHdlqu;0~>
ZN'r@lcF_;ro1i;s!%M#JcC<$jT#6)Y0#JY"m+_q/L)M>aT4OYr?JAbrZd!oqu;0~>
ZN'r>l_K*]rm\i]ruV4qJcC<$jT#6%Y,'k&"le#\.3BZ2U]EJ,r?&)9rZ?^kqu;0~>
ZN'r>l^*1Krm/KKru_:rJcC<$jT#6&Y*[qi"l[cW.Nfl5QN9)ur?//-rZHdlqu;0~>
ZN'r@lcF_;rSk]9!',W1JcFg2s!+hkdc1:l#,:+NMMc"/X3(>cJcGWIJ,~>
ZN'r>l_K*]rRA][!&fE.JcFg2ru\PBda\;[#+sD9LPKA"X/,_:JcGWIJ,~>
ZN'r>l^*1KrQi?I!&oK/JcFg2rueV6da.rV#+s54LPKA"X-`f.JcGWIJ,~>
ZN'r@lcF_;rSk]9!(qhBJcFg2s!+nmbMrQe!StBdao<Tjao3N9s82hH~>
ZN'r>l_K*]rRA][!(VV?JcFg2ru\VDbLHRT!SY'^V#MOAV#DHes82hH~>
ZN'r>l^*1KrQi?I!(VV?JcFg2rue\8bKp4N!SOs\QiA25Qi8+Ys82hH~>
ZiC#@m)ah<r8PT8!*=aOJcFg2r?Jkp`8^d<"B['#,9sP:rZd!oqu;0~>
ZiC#>m%f3^r7&TZ!*"OLJcFg2r?&SG`74d^"B6Wl+!7hbrZ?^kqu;0~>
ZiC#>m$E:Lr6N6H!*"OLJcFg2r?/Y;`6\FL"B?`o+<\"WrZHdlqu;0~>
Zi:)C,9uQsJ`?Ue_T;daJcC<$jT#0']?.hI"P%4#/L.UDrZd!oqu;0~>
Zi:)A+!9jFJ^jVI_P@09JcC<$jT#0#];33k"OUdl.3GmlrZ?^kqu;0~>
Zi:)A+<^$;J^=8?_Nt7,JcC<$jT#0$]9g:Y"OUdl.Nl'arZHdlqu;0~>
Zi:)C,9uQsJ`?Ue_T;daJcC<$jT#0']?.hI"P%4#/L.UDrZd!oqu;0~>
Zi:)A+!9jFJ^jVI_P@09JcC<$jT#0#];33k"OUdl.3GmlrZ?^kqu;0~>
Zi:)A+<^$;J^=8?_Nt7,JcC<$jT#0$]9g:Y"OUdl.Nl'arZHdlqu;0~>
Zi:#AlH+V:qVoH8!+g`]JcFg2r?K"t]]/t5!H]p"ao3N9s82hH~>
Zi:#?lD0!\qUEHZ!+UT[JcFg2r?&_K][ZtW!H9KoV#DHes82hH~>
Zi:#?lBd(JqTm*H!+UT[JcFg2r?/e?][-VE!H9NpQi8+Ys82hH~>
Zi:#AlH+V:qVoH8!,-r`JcFg2r?K)!\DdMMZH<(jJcGWIJ,~>
Zi:#?lD0!\qUEHZ!+g`]JcFg2r?&eM\C:N<ZD@IAJcGWIJ,~>
Zi:#?lBd(JqTm*H!+pf^JcFg2r?/kA\Bb06ZBtP5JcGWIJ,~>
Zi:#AlH+V:qVoH8!,7#aJcFd1rZf5#[c.;OZcW1kJcGWIJ,~>
Zi:#?lD0!\qUEHZ!+pf^JcFd1rZAqO[aY<>Z_[RBJcGWIJ,~>
Zi:#?lBd(JqTm*H!,$l_JcFd1rZK"C[a+s8Z^:Y6JcGWIJ,~>
Zi:#AlH+V:qVoH8!,7#aJcFd1rZf5#[c.;OZcW1kJcGWIJ,~>
Zi:#?lD0!\qUEHZ!+pf^JcFd1rZAqO[aY<>Z_[RBJcGWIJ,~>
Zi:#?lBd(JqTm*H!,$l_JcFd1rZK"C[a+s8Z^:Y6JcGWIJ,~>
[/^/Bm)ah<pu966!,I/cJcFd1rZf>&ZJkrPio7DgrZd!oqu;0~>
[/^/@m%f3^psd6X!,-r`JcFd1rZB%RZIAs?eC:q&rZ?^kqu;0~>
[/^/@m$E:Lps6mF!,7#aJcFd1rZK+FZHiU9cd0%drZHdlqu;0~>
[/U/C,OEO'iqVNOaT-+-s+141s8F7]afse)k5aMNao3N9s82hH~>
[/U/A+7,eSeG.P3U]>+[s+141s8F+YUp/AKh#Ps6V#DHes82hH~>
[/U/A+RGGGchPi)QN1`Ns+141s8F.ZQa"g9f`9@-Qi8+Ys82hH~>
[/U,BlcF_;pu966!,I/cJcFd1rZfG)X5X-B\B4^pJcGWIJ,~>
[/U,@l_K*]psd6X!,7#aJcFd1rZB.UX4..*\>9*GJcGWIJ,~>
[/U,@l^*1Kps6mF!,7#aJcFd1rZK4IX3Ue!\<m1;JcGWIJ,~>
[/U,BlcF_;pu966!,I/cJcFd1rZfG)X5X-B\B4^pJcGWIJ,~>
[/U,@l_K*]psd6X!,7#aJcFd1rZB.UX4..*\>9*GJcGWIJ,~>
[/U,@l^*1Kps6mF!,7#aJcFd1rZK4IX3Ue!\<m1;JcGWIJ,~>
[/U,BlcF_;pYs06!,I/cJcFd1r?KG+VW,2/rZd!oqu;0~>
[/U,@l_K*]pXI0X!,7#aJcFd1r?'.WVUW2QrZ?^kqu;0~>
[/U,@l^*1KpWpgF!,7#aJcFd1r?04KVU)i?rZHdlqu;0~>
[/U,BlcF_;pYs06!,I/cJcFd1r?KM-U>ii-rZd!oqu;0~>
[/U,@l_K*]pXI0X!,7#aJcFd1r?'4YU=?iOrZ?^kqu;0~>
[/U,@l^*1KpWpgF!,7#aJcFd1r?0:MU<gK=rZHdlqu;0~>
[K$8Cm)ah<p>X'5!,I/cJcFd1r?KP.TAmW-r?Hmnqu;0~>
[K$8Am%f3^p=.'W!,7#aJcFd1r?'7ZT@CWOr?$Ujqu;0~>
[K$8Am$E:Lp<U^E!,7#aJcFd1r?0=NT?k9=r?-[kqu;0~>
[Jp5ClcF_;p>X'5!,I/cJcFd1r?KS/S`7H,r?Hmnqu;0~>
[Jp5Al_K*]p=.'W!,-r`JcFd1r?':[S^bHNr?$Ujqu;0~>
[Jp5Al^*1Kp<U^E!,7#aJcFd1r?0@OS^5*<r?-[kqu;0~>
[Jp5ClcF_;p>X'5!,I/cJcFd1r?KS/S`7H,r?Hmnqu;0~>
[Jp5Al_K*]p=.'W!,-r`JcFd1r?':[S^bHNr?$Ujqu;0~>
[Jp5Al^*1Kp<U^E!,7#aJcFd1r?0@OS^5*<r?-[kqu;0~>
[Jp5ClcF_;p#=!5!,@)bJcFa0rZf_1S)V9+r?Hmnqu;0~>
[Jp5Al_K*]p!h!W!,$l_JcFa0rZBF]S(,9Mr?$Ujqu;0~>
[Jp5Al^*1Kp!:XE!,-r`JcFa0rZKLQS'Sp;r?-[kqu;0~>
[Jp5ClcF_;p#=!5!,7#aJcFa0rZfe3R,Z!)r?Hmnqu;0~>
[Jp5Al_K*]p!h!W!+pf^JcFa0rZBL_R+0!Kr?$Ujqu;0~>
[Jp5Al^*1Kp!:XE!,$l_JcFa0rZKRSR*WX9r?-[kqu;0~>
\,ZGDm)]5PJ`?@^aN=H,!,$l_JcFa0rZfh4Q/]a(r?Hmnqu;0~>
\,ZGBm%aV'J^jABaJAhX!+^Z\JcFa0rZBO`Q.3aJr?$Ujqu;0~>
\,ZGBm$@\pJ^=#8aHuoL!+g`]JcFa0rZKUTQ-[C8r?-[kqu;0~>
\,ZGDm)]5PJ`?@^aN=H,!,$l_JcFa0rZfh4Q/]a(r?Hmnqu;0~>
\,ZGBm%aV'J^jABaJAhX!+^Z\JcFa0rZBO`Q.3aJr?$Ujqu;0~>
\,ZGBm$@\pJ^=#8aHuoL!+g`]JcFa0rZKUTQ-[C8r?-[kqu;0~>
\,ZJE!$gjPJ`?=]aN=H,!+UT[JcFa0rZfk5PiBX'r?Hmnqu;0~>
\,ZJC!$CR'J^j>AaJAhX!+:BXJcFa0rZBRaPgmXIr?$Ujqu;0~>
\,ZJC!$LWpJ^<u7aHuoL!+CHYJcFa0rZKXUPg@:7r?-[kqu;0~>
\,ZJElcF_;o]!s6s!%MOJcC<$irAs%e&dg5`QA''JcGWIJ,~>
\,ZJCl_K*]o[LsXruV5HJcC<$irAs!e"i2W`MEGSJcGWIJ,~>
\,ZJCl^*1KoZtUFru_;JJcC<$irAs"e!H9E`L$NGJcGWIJ,~>
\,ZJElcF_;o]!s6s!%MJJcC<$irAs%e]Ep4`l\0(JcGWIJ,~>
\,ZJCl_K*]o[LsXruV5CJcC<$irAs!eYJ;V`h`PTJcGWIJ,~>
\,ZJCl^*1KoZtUFru_;EJcC<$irAs"eX)BD`g?WHJcGWIJ,~>
\,ZJElcF_;o]!s6s!%MJJcC<$irAs%e]Ep4`l\0(JcGWIJ,~>
\,ZJCl_K*]o[LsXruV5CJcC<$irAs!eYJ;V`h`PTJcGWIJ,~>
\,ZJCl^*1KoZtUFru_;EJcC<$irAs"eX)BD`g?WHJcGWIJ,~>
\GuPElcF_;o]!s6s!%MAJcC<$irAs%f#`p2aN=B*JcGWIJ,~>
\GuPCl_K*]o[LsXruV59JcC<$irAs!ete;TaJAbVJcGWIJ,~>
\GuPCl^*1KoZtUFru_;;JcC<$irAs"esDBBaHuiJJcGWIJ,~>
\GlVH,9uNrJ`?7[b/sZ.!)eCJJcFa0r?Kq9MrMk#r?Hmnqu;0~>
\GlVF+!9gEJ^j8?b,#%Z!)A+FJcFa0r?'XeMq#kEr?$Ujqu;0~>
\GlVF+<^!:J^<o5b*W,N!)J1GJcFa0r?0^YMpKM3r?-[kqu;0~>
\GlPFl,eM9o&@g6s(h[7JcC<$i;`g%fu]'0b/sT,JcGWIJ,~>
\GlPDl(im[o$kgXs(VO2JcC<$i;`g!fqaGRb,"tXJcGWIJ,~>
\GlPDl'HtIo$>IFs(VO3JcC<$i;`g"fp@N@b*W&LJcGWIJ,~>
\GlPFl,eM9o&@g6s(m8dJcFX-s!-4=LuQS!r?Hmnqu;0~>
\GlPDl(im[o$kgXs([,bJcFX-ru]piLt'SCr?$Ujqu;0~>
\GlPDl'HtIo$>IFs([,bJcFX-rug!]LsO51r?-[kqu;0~>
\GlPFl,eM9o&@g6s(m8dJcFX-s!-4=LuQS!r?Hmnqu;0~>
\GlPDl(im[o$kgXs([,bJcFX-ru]piLt'SCr?$Ujqu;0~>
\GlPDl'HtIo$>IFs([,bJcFX-rug!]LsO51r?-[kqu;0~>
\GlPFlcF_;nD_U4s(m8dJcFX-s!-7>L#U=ur?Hmnqu;0~>
\GlPDl_K*]nC5UVs([,bJcFX-ru]sjL"+>Br?$Ujqu;0~>
\GlPDl^*1KnB]7Ds([,bJcFX-rug$^L!Ru0r?-[kqu;0~>
\c;\GlcF_;nD_U4s(m8dJcFX-s!-:?KAt.tr?Hmnqu;0~>
\c;\El_K*]nC5UVs([,bJcFX-ru^!kK@J/Ar?$Ujqu;0~>
\c;\El^*1KnB]7Ds([,bJcFX-rug'_K?qf/r?-[kqu;0~>
\c2YGlH+V:nD_U4s(m8dJcFX-rZg7@K&Y%ss!**pq>Ys~>
\c2YElD0!\nC5UVs([,bJcFX-rZBslK%/&@ruZglq>Ys~>
\c2YElBd(JnB]7Ds([,bJcFX-rZL$`K$V].rucmmq>Ys~>
\c2YGlH+V:nD_U4s(m8dJcFX-rZg7@K&Y%ss!**pq>Ys~>
\c2YElD0!\nC5UVs([,bJcFX-rZBslK%/&@ruZglq>Ys~>
\c2YElBd(JnB]7Ds([,bJcFX-rZL$`K$V].rucmmq>Ys~>
\c2YGlH+V:n)DO4s(d2cJcFX-rZg7@J`=tss!**pq>Ys~>
\c2YElD0!\n'oOVs(R&aJcFX-rZBslJ^hu@ruZglq>Ys~>
\c2YElBd(Jn'B1Ds(R&aJcFX-rZL$`J^;W.rucmmq>Ys~>
\c2YGlH+V:n)DO4s([,bJcFX-rZg=BJ`?[gccQ23JcGQGJ,~>
\c2YElD0!\n'oOVs(?o_JcFX-rZC$nJ^j\Kc_UR_JcGQGJ,~>
\c2YElBd(Jn'B1Ds(Hu`JcFX-rZL*bJ^=>Ac^4YSJcGQGJ,~>
]DqkHlH+V:n)DO4s(Hu`JcFX-rZg@CJ`?XfccQ23JcGQGJ,~>
]DqkFlD0!\n'oOVs(-c]JcFX-rZC'oJ^jYJc_UR_JcGQGJ,~>
]DqkFlBd(Jn'B1Ds(6i^JcFX-rZL-cJ^=;@c^4YSJcGQGJ,~>
]DqkHlH+V:n)DO4s(Hu`JcFX-rZg@CJ`?XfccQ23JcGQGJ,~>
]DqkFlD0!\n'oOVs(-c]JcFX-rZC'oJ^jYJc_UR_JcGQGJ,~>
]DqkFlBd(Jn'B1Ds(6i^JcFX-rZL-cJ^=;@c^4YSJcGQGJ,~>
]DqnI!$gdNJ`?.XbfKo2@q1)iJcFU,s!-IDJ`?RddE2D5JcGQGJ,~>
]DqnG!$CL%J^j/<bbP:^?snQcJcFU,ru^0pJ^jSHdA6daJcGQGJ,~>
]DqnG!$LQnJ^<f2ba/AR@:=`eJcFU,rug6dJ^=5>d?jkUJcGQGJ,~>
]DqnI!$ggOJ`?+WbfKo2AnHVoJcFU,s!-LEJ`?Lbd`MM6JcGQGJ,~>
]DqnG!$CO&J^j,;bbP:^@q1)iJcFU,ru^3qJ^jMFd\QmbJcGQGJ,~>
]DqnG!$LToJ^<c1ba/ARA7U8kJcFU,rug9eJ^=/<d[0tVJcGQGJ,~>
]DqnIlH+V:mc)I4![E)?JcC<$hZ*U#iQ6Z1q;TiEs!**pq>Ys~>
]DqnGlD0!\maTIV!Zu`7JcC<$hZ*TtiM;%Sq:*igruZglq>Ys~>
]DqnGlBd(Jma'+D![)f8JcC<$hZ*TuiKo,Aq9RKUrucmmq>Ys~>
]`7tIlH+V:mc)I4![E)?JcC<$hZ*U#j2ll3p>XQCs!**pq>Ys~>
]`7tGlD0!\maTIV!Zu`7JcC<$hZ*Ttj.q7Up=.QeruZglq>Ys~>
]`7tGlBd(Jma'+D![)f8JcC<$hZ*Tuj-P>Cp<V3Srucmmq>Ys~>
]`7tIlH+V:mc)I4![E)?JcC<$hZ*U#j2ll3p>XQCs!**pq>Ys~>
]`7tGlD0!\maTIV!Zu`7JcC<$hZ*Ttj.q7Up=.QeruZglq>Ys~>
]`7tGlBd(Jma'+D![)f8JcC<$hZ*Tuj-P>Cp<V3Srucmmq>Ys~>
]`/%L,9uKqJ`?+WbfKpVG'8H:JcFU,s!-UHJ`?@^e&hV7JcGQGJ,~>
]`/%J+!9dDJ^j,;bbP<0FEE*6JcFU,ru^<tJ^jABe"m!cJcGQGJ,~>
]`/%J+<]s9J^<c1ba/C#FEE*6JcFU,rugBhJ^=#8e!L(WJcGQGJ,~>
]`/%L,9uKqYi>]@rnkZRbfKjSJcC<$h#I<tk/i26oA\<Bs!**pq>Ys~>
]`/%J+!9dDYgi^%rmJa7bbP6,JcC<$h#I<pk+mRXo@2<druZglq>Ys~>
]`/%J+<]s9Yg<9n!6rI.ba/<uJcC<$h#I<qk*LYFo?YsRrucmmq>Ys~>
]`.tJkfL!erT!q;!TDtXim#RFR">9gs4mYQ,Nm1"ipl$Zao<T:s7u\F~>
]`.tHkbPN6qUGSsrm_"taOJJ1!1&39JcFO*r?(3uJ^j5>eti<fJcGQGJ,~>
]`.tHka/U$qp>Ajrm8^3c'JErJcC<$h#I<qkEgbGn^#dQrucmmq>Ys~>
]`.tJkfKa^!9)#Yc,fsQJcC<$h#I<tkK/;7n`&-As!**pq>Ys~>
]`.tHkbNdZmF9CV!1&39JcFO*r?(3uJ^j5>eti<fJcGQGJ,~>
]`.tHka-kHmEa%D!1&39JcFO*r?19iJ^<l4esHCZJcGQGJ,~>
]`.tJkfKUZ!8u)\c,fsIJcC<$h#I<tkK/;7n`&-As!**pq>Ys~>
]`.tHkbP$(!S,ZCeBOchNe.4]s4mYQ+6TGNeFD&>V#MNfs7u\F~>
]`.tHka/0mrm8j7c'JEkJcC<$h#I<qkEgbGn^#dQrucmmq>Ys~>
^&S+KkfKRY!or.mcf33k!/Z:,JcFO*r?LRKJ`?+Wf?+%;JcGQGJ,~>
^&S+IkbOs&!nYoLcd^48!/H.*JcFO*r?(:"J^j,;f;/EgJcGQGJ,~>
^&S+Ika/$i!n,E?cd0k&!/Q4+JcFO*r?1?kJ^<c1f9cL[JcGQGJ,~>
^&J+L,O!7air@uBim#RFI=_ELs4dSQ,O*=$ipPgXao<T:s7u\F~>
^&J+J+6]Mme,\4LeBOchH@c*Is4dSQ+6fSPeF(i<V#MNfs7u\F~>
^&J+J+R#0*cN)>QcN)SDccqdVH\)3Js4dSQ+R,5DcgK-2QiA1Zs7u\F~>
^&J+L,O!7#ipGaMaT-a?s+14)s8F8-aarI>in)<P,D#mjs*t~>
^&J+J+6]Mme,\1KeBOchH@c*Is4dSQ+6fSPeF(i<V#MNfs7u\F~>
^&J+J+R#/acN)PCccqdVH\)3Js4dSQ+R,5DcgK-2QiA1Zs7u\F~>
^&J(KkfKCT!U&"]im,XH,Ar)4JcFL)rZg^MJ`?"Tfua7=JcGQGJ,~>
^&J(IkbOd!!T22NeBXij+)HN.JcFL)rZCF$J^j#8fqeWiJcGQGJ,~>
^&J(Ika.jd!StoHcd%jX+DcW/JcFL)rZLKmJ^<Z.fpD^]JcGQGJ,~>
^&J(KkfK=R!SGuQim,XH,A_r2JcFL)rZg^MJ`?"Tfua7=JcGQGJ,~>
^&J(IkbO]t!R]9DeBXij+)6B,JcFL)rZCF$J^j#8fqeWiJcGQGJ,~>
^&J(Ika.dbs3B-?cBePSC4ZD9s4dSQ+R5;Ecg/p1QiA1Zs7u\F~>
^&J(KkfK7P!7o][cH-)3Ck;V;s4dSQ,O<I&ip#IVao<T:s7u\F~>
^&J(IkbOWr!799GcD1I_C4ZD9s4dSQ+7#_ReEPK:V#MNfs7u\F~>
^&J(Ika.^`!7'-@cBePSC4ZD9s4dSQ+R>AFcfrd0QiA1Zs7u\F~>
^An4LkfK4O!7KHXcH-*-Ck;V;s4dSQ,O<I&ip#IVao<T:s7u\F~>
^An4JkbOTq!6j$DcD1J[C4ZD9s4dSQ+7#_ReEPK:V#MNfs7u\F~>
^An4Jka.[_!6Ng<cBeQOC4ZD9s4dSQ+R>AFcfrd0QiA1Zs7u\F~>
^An4LkfK4O!7KHXcH-*-Ck;V;s4dSQ,O<I&ip#IVao<T:s7u\F~>
^An4JkbOTq!6j$DcD1J[C4ZD9s4dSQ+7#_ReEPK:V#MNfs7u\F~>
^An4Jka.[_!6Ng<cBeQOC4ZD9s4dSQ+R>AFcfrd0QiA1Zs7u\F~>
^Ae4M,O!7:iW/8pim,XGCk;V;s4[MP,OEO'iof=Uao<T:s7u\F~>
^Ae4K+6]Mfe,\U]eBXiiC4ZD9s4[MP+7,eSeE>?9V#MNfs7u\F~>
^Ae4K+R#/ZcN*(Xcd%jWC4ZD9s4[MP+RGGGcf`X/QiA1Zs7u\F~>
^Ae1LkK/;7m,H=4!,R5dJcFI(r?L^OJ`>kPgr]O?JcGQGJ,~>
^Ae1JkG4Hos4c2UcD1GTJcC<$gAh*nmA,<_kLA:_rZ?^kq>Ys~>
^Ae1JkEhO]s4Q&NcBeNGJcC<$gAh*om?`CMkKhqMrZHdlq>Ys~>
^Ae1LkK0"K!8Q8ecH-'&JcC<$gAh*rn&^.?jPo";rZd!oq>Ys~>
^Ae1JkG4Bm!7KQMcD1GTJcC<$gAh*nn"bNajOE"]rZ?^kq>Ys~>
^Ae1JkEhI[!7'9DcBeNGJcC<$gAh*on!AUOjNlYKrZHdlq>Ys~>
^Ae1LkK0"K!8lJhcH-'&JcC<$gAh*rn&^.?jPo";rZd!oq>Ys~>
^Ae1JkG4Bm!7TWNcD1GTJcC<$gAh*nn"bNajOE"]rZ?^kq>Ys~>
^Ae1JkEgbGm*EtD!,@)bJcFI(r?1QqJ^<E'h3\*`JcGQGJ,~>
^Ae1LkK0"K!9;blcH-'&JcC<$gAh*rn&^.?jPo";rZd!oq>Ys~>
^Ae1JkG4Bm!7oiQcD1GTJcC<$gAh*nn"bNajOE"]rZ?^kq>Ys~>
^Ae1JkEhI[!7BKGcBeNGJcC<$gAh*on!AUOjNlYKrZHdlq>Ys~>
_#OCMkK/;7lJg14!,R5dJcFI(r?LgRJ`>_Lh9#X@JcGQGJ,~>
_#OCKkG3[YlI=1V!,@)bJcFI(r?(O)J^i`0h5(#lJcGQGJ,~>
_#OCKkEgbGlHdhD!,@)bJcFI(r?1TrJ^<B&h3\*`JcGQGJ,~>
_#OFN!$g[KJ`>tSdE)D6Ck;V;s4[MO,Oig+io/nSao3N9s7u\F~>
_#OFL!$CC"J^iu7dA-dbC4ZD9s4[MO+7Q(WeD\p7V#DHes7u\F~>
_#OFL!$LHkJ^<W-d?akVC4ZD9s4[MO+Rk_Kcf*4-Qi8+Ys7u\F~>
_#OFN!$g[KJ`>tSdE)D6Ck;V;s4[MO,Oig+io/nSao3N9s7u\F~>
_#OFL!$CC"J^iu7dA-dbC4ZD9s4[MO+7Q(WeD\p7V#DHes7u\F~>
_#OFL!$LHkJ^<W-d?akVC4ZD9s4[MO+Rk_Kcf*4-Qi8+Ys7u\F~>
_#OFN!$g[KJ`>tSdE)D6Ck;V;s4[MO,Oig+io/nSao3N9s7u\F~>
_#OFL!$CC"J^iu7dA-dbC4ZD9s4[MO+7Q(WeD\p7V#DHes7u\F~>
_#OFL!$LHkJ^<W-d?akVC4ZD9s4[MO+Rk_Kcf*4-Qi8+Ys7u\F~>
_#OFN!$g[KJ`>tSdE2E)JcC<$gAh*rn]?@Ahr<S9rZd!oq>Ys~>
_#OFL!$CC"J^iu7dA6eWJcC<$gAh*nnYC`chpgS[rZ?^kq>Ys~>
_#OFL!$LHkJ^<W-d?jlJJcC<$gAh*onX"gQhp:5IrZHdlq>Ys~>
_#OFN!$g[KJ`>tSdE)B)JcC<$f`1pqn]?@Ahr<S9rZd!oq>Ys~>
_#OFL!$CC"J^iu7dA-bWJcC<$f`1pmnYC`chpgS[rZ?^kq>Ys~>
_#OFL!$LHkJ^<W-d?aiJJcC<$f`1pnnX"gQhp:5IrZHdlq>Ys~>
_#OFNk/i26lJg45!,R5dJcFC&rZgsTJ`>SHi5tsCJcGQGJ,~>
_#OFLk+mRXlI=4W!,@)bJcFC&rZC[+J^iT,i2$>oJcGQGJ,~>
_#OFLk*LYFlHdkE!,@)bJcFC&rZL`tJ^<6"i0XEcJcGQGJ,~>
_#OFNk/i26lJg45!,R5dJcFC&rZgsTJ`>SHi5tsCJcGQGJ,~>
_#OFLk+mRXlI=4W!,@)bJcFC&rZC[+J^iT,i2$>oJcGQGJ,~>
_#OFLk*LYFlHdkE!,@)bJcFC&rZL`tJ^<6"i0XEcJcGQGJ,~>
_#OFNk/i26lJg45!,R5dJcFC&rZh$VJ`>JEiQ;'DJcGQGJ,~>
_#OFLk+mRXlI=4W!,@)bJcFC&rZCa-J^iK)iM?GpJcGQGJ,~>
_#OFLk*LYFlHdkE!,@)bJcFC&rZLg!J^<,tiKsNdJcGQGJ,~>
_#OFNkfJD8ki1(5s!%M[JcC<$f`1pqo>uRCgu@;7rZd!oq>Ys~>
_#OFLkbNdZkg\(WruV5UJcC<$f`1pmo;$regsk;YrZ?^kq>Ys~>
_#OFLka-kHkg._Eru_;VJcC<$f`1pno9Y$Sgs=rGrZHdlq>Ys~>
_#OFNkfJD8ki1(5s!%M[JcC<$f`1pqoZ;[Dg#D&6rZd!oq>Ys~>
_#OFLkbNdZkg\(WruV5UJcC<$f`1pmoV@&fg!o&XrZ?^kq>Ys~>
_#OFLka-kHkg._Eru_;VJcC<$f`1pnoTt-Tg!A]FrZHdlq>Ys~>
_#OFNkfJD8ki1(5s!%M[JcC<$f`1pqoZ;[Dg#D&6rZd!oq>Ys~>
_#OFLkbNdZkg\(WruV5UJcC<$f`1pmoV@&fg!o&XrZ?^kq>Ys~>
_#OFLka-kHkg._Eru_;VJcC<$f`1pnoTt-Tg!A]FrZHdlq>Ys~>
_>jLNkfJD8ki1(5rbR/cJcFC&rZh'WJ`>ABj2q<GJcGNFJ,~>
_>jLLkbNdZkg\(Wrb@#aJcFC&rZCd.J^iB&j.u\sJcGNFJ,~>
_>jLLka-kHkg._Erb@#aJcFC&rZLj"J^<#qj-TcgJcGNFJ,~>
_>aRQ,9uEoJ`>nQe&hW+JcC<$fDkgpoZ;[Dg#D&6s!**pq#>j~>
_>aRO+!9^BJ^io5e"m"YJcC<$fDkgloV@&fg!o&XruZglq#>j~>
_>aRO+<]m7J^<Q+e!L)LJcC<$fDkgmoTt-Tg!A]Frucmmq#>j~>
_>aRQ,9uEoJ`>nQe&hW+JcC<$fDkgpouVdEfAbl5s!**pq#>j~>
_>aRO+!9^BJ^io5e"m"YJcC<$fDkgloq[/gf@8lWruZglq#>j~>
_>aRO+<]m7J^<Q+e!L)LJcC<$fDkgmop:6Uf?`NErucmmq#>j~>
_>aRQ,9uEoJ`>nQe&hW+JcC<$fDkgpouVdEfAbl5s!**pq#>j~>
_>aRO+!9^BJ^io5e"m"YJcC<$fDkgloq[/gf@8lWruZglq#>j~>
_>aRO+<]m7J^<Q+e!L)LJcC<$fDkgmop:6Uf?`NErucmmq#>j~>
_>aRQ,9uEoJ`>nQe&hW+JcC<$fDkjq!%mlcJ`>;@jN7EHJcGNFJ,~>
_>aRO+!9^BJ^io5e"m"YJcC<$fDkjm!%IT:J^i<$jJ;etJcGNFJ,~>
_>aRO+<]m7J^<Q+e!L)LJcC<$fDkjn!%RZ.J^;rojHolhJcGNFJ,~>
_>aRQ,9uEoJ`>nQe&hW+JcC<$fDkjq!%mlcJ`>;@jN7EHJcGNFJ,~>
_>aRO+!9^BJ^io5e"m"YJcC<$fDkjm!%IT:J^i<$jJ;etJcGNFJ,~>
_>aRO+<]m7J^<Q+e!L)LJcC<$fDkjn!%RZ.J^;rojHolhJcGNFJ,~>
_>aLOk/i26ki1+6![DMtJcC<$f`1pq!%mreJ`>2=jiRNIJcGNFJ,~>
_>aLMk+mRXkg\+X!Zu/lJcC<$f`1pm!%IZ<J^i3!jeVnuJcGNFJ,~>
_>aLMk*LYFkg.bF![)5mJcC<$f`1pn!%R`0J^;iljd5uiJcGNFJ,~>
_>aLOk/i26ki1+6![DMtJcC<$f`1mppW8!GeDfT3s!**pq#>j~>
_>aLMk+mRXkg\+X!Zu/lJcC<$f`1mlpS<AieC<TUruZglq#>j~>
_>aLMk*LYFkg.bF![)5mJcC<$f`1mmpQpHWeBd6Crucmmq#>j~>
_>aLOk/i26ki1+6![DMtJcC<$f`1mppW8!GeDfT3s!**pq#>j~>
_>aLMk+mRXkg\+X!Zu/lJcC<$f`1mlpS<AieC<TUruZglq#>j~>
_>aLMk*LYFkg.bF![)5mJcC<$f`1mmpQpHWeBd6Crucmmq#>j~>
_>aLOk/i26ki1+6rbR/cJcFC&r?M'YJ`>2=jiRNIJcGNFJ,~>
_>aLMk+mRXkg\+Xrb@#aJcFC&r?(d0J^i3!jeVnuJcGNFJ,~>
_>aLMk*LYFkg.bFrb@#aJcFC&r?1j$J^;iljd5uiJcGNFJ,~>
_>aLOk/i26ki1+6!,R5dJcF=$r?M'YJ`>2=jiRNIJcGNFJ,~>
_>aLMk+mRXkg\+X!,@)bJcF=$r?(d0J^i3!jeVnuJcGNFJ,~>
_>aLMk*LYFkg.bF!,@)bJcF=$r?1j$J^;iljd5uiJcGNFJ,~>
_>aLOk/i26ki1+6!,R5dJcF=$r?M*ZJ`>):kK3`KJcGNFJ,~>
_>aLMk+mRXkg\+X!,@)bJcF=$r?(g1J^i)skG8,"JcGNFJ,~>
_>aLMk*LYFkg.bF!,@)bJcF=$r?1m%J^;`ikEl2kJcGNFJ,~>
_>aLOk/i26ki1+6!,R5dJcF=$r?M*ZJ`>):kK3`KJcGNFJ,~>
_>aLMk+mRXkg\+X!,@)bJcF=$r?(g1J^i)skG8,"JcGNFJ,~>
_>aLMk*LYFkg.bF!,@)bJcF=$r?1m%J^;`ikEl2kJcGNFJ,~>
_Z0XPk/i26ki1+6!,R5dJcF=$r?M*ZJ`>):kK3`KJcGNFJ,~>
_Z0XNk+mRXkg\+X!,@)bJcF=$r?(g1J^i)skG8,"JcGNFJ,~>
_Z0XNk*LYFkg.bF!,@)bJcF=$r?1m%J^;`ikEl2kJcGNFJ,~>
_Z'XQ,Nd+!iooCPaT3W&JcC<$f)P[nprS*HdGj?2s!**pq#>j~>
_Z'XO+6KAMeEGE4U]DQPJcC<$f)P[jpnWJjdF@?TruZglq#>j~>
_Z'XO+Qf#Acfi^*QN84DJcC<$f)P[kpm6QXdEh!Brucmmq#>j~>
_Z'XQ,Nd+!iooCPaT3W&JcC<$f)P[nq8n3Icf401s!**pq#>j~>
_Z'XO+6KAMeEGE4U]DQPJcC<$f)P[jq4rSkcd_0SruZglq#>j~>
_Z'XO+Qf#Acfi^*QN84DJcC<$f)P[kq3QZYcd1gArucmmq#>j~>
_Z'XQ,Nd+!iooCPaT3W&JcC<$f)P[nq8n3Icf401s!**pq#>j~>
_Z'XO+6KAMeEGE4U]DQPJcC<$f)P[jq4rSkcd_0SruZglq#>j~>
_Z'XO+Qf#Acfi^*QN84DJcC<$f)P[kq3QZYcd1gArucmmq#>j~>
_Z'XQ,Nd+!iooCPao?1.s+14$s8=2<aarHtionMa,D#mis*t~>
_Z'XO+6KAMeEGE4V#P1\s+14$s8=&8Uk.%AeEE_.++aIes*t~>
_Z'XO+Qf#Acfi^*QiCfOs+14$s8=)9Q\!K/cfg_q+G'Rfs*t~>
_Z'UPjiN)5ki1.7!,R5dJcF:#rZh3[J`>#8kfNiLJcGNFJ,~>
_Z'UNjeRIWkg\.Y!,@)bJcF:#rZCp2J^i#qkbS5#JcGNFJ,~>
_Z'UNjd1PEkg.eG!,@)bJcF:#rZM!&J^;Zgka2;lJcGNFJ,~>
_Z'UPjiN)5ki1.7!,R5dJcF:#rZh3[J`>#8kfNiLJcGNFJ,~>
_Z'UNjeRIWkg\.Y!,@)bJcF:#rZCp2J^i#qkbS5#JcGNFJ,~>
_Z'UNjd1PEkg.eG!,@)bJcF:#rZM!&J^;Zgka2;lJcGNFJ,~>
_Z'UPjiQ'4!99@(e]@f-JcC<$ec5Unq8n3Ic/S!0s!**pq#>j~>
_Z'UNjeUGV!7mFbeYE1[JcC<$ec5Ujq4rSkc.)!RruZglq#>j~>
_Z'UNjd4QE!RT5Zcde?^C4ZD9s4./K+Sh@Tccsf#QiA1Zs7lVE~>
_Z'UPjiQ'4!99@(e]@f-JcC<$ec5Unq8n3Ic/S!0s!**pq#>j~>
_Z'UNjeUJW!S,eeeCC>pC4ZD9s4./K+8M^`eBQM-V#MNfs7lVE~>
_Z'UNjd4QE!RT;\cde?^C4ZD9s4./K+Sh@Tccsf#QiA1Zs7lVE~>
_Z'UPjiQ*5!T;h"in)<P,62P2s+14#s8F8=aarHrip"Sb,D#mis*t~>
_Z'UNjeUJW!RoJ^eCUMr*rp&,s+14#s8F,9Uk.%?eENe/++aIes*t~>
_Z'UNjd4QE!RArTce"N`+96/-s+14#s8F/:Q\!K-cfper+G'Rfs*t~>
_Z'UPjiQ$3!8Eh!f?+#.JcC<$ec5Unq8n3Ic/S!0s!**pq#>j~>
_Z'UNjeUDU!7I1_f;/C\JcC<$ec5Ujq4rSkc.)!RruZglq#>j~>
_Z'UNjd4KC!7$nVf9cJOJcC<$ec5Ukq3QZYc-PX@rucmmq#>j~>
_Z'UPjiQ!2!8*Xtf?+&/JcC<$eGoLmq8n3Ic/S!0s!**pq#>j~>
_Z'UNjeUAT!7@._f;/F]JcC<$eGoLiq4rSkc.)!RruZglq#>j~>
_Z'UNjd4HB!7$qWf9cMPJcC<$eGoLjq3QZYc-PX@rucmmq#>j~>
_Z'UPjiQ!2!8!Rsf?+&/JcC<$eGoLmq8n3Ic/S!0s!**pq#>j~>
_Z'UNjeUAT!77(^f;/F]JcC<$eGoLiq4rSkc.)!RruZglq#>j~>
_Z'UNjd4HB!7$qWf9cMPJcC<$eGoLjq3QZYc-PX@rucmmq#>j~>
_Z'UPjiPs1!nGf`Rc;r@s(m8dJcF7"rZh<^s6"smc/S!0s!**pq#>j~>
_Z'UNjeU>S!m]'HbgZXCd+$[Cs([,bJcF7"rZD$5s4r7Uc.)!RruZglq#>j~>
_Z'UNjd4EAs2k>qbg-:9d*L=1s([,bJcF7"rZM*)s4MtLc-PX@rucmmq#>j~>
`;fgQjiPm/!8G`W!9;Gcf?+&/JcC<$ec5RmqoOEKb2V^.s!**pq#>j~>
`;fgOjeU8Q!7K*@!7fHGf;/F]JcC<$ec5RiqkSemb1,^PruZglq#>j~>
`;fgOjd4??!78s9!79*=f9cMPJcC<$ec5Rjqj2l[b0T@>rucmmq#>j~>
`;fjR!$gUId,G)^j3?Qaj5JDFfZ=1>Ci"\&JcF:#r?M3]J`=i3lH0&NJcGNFJ,~>
`;fjP!$C<ud*r*Df?MeGf@/-sfVAQjC2/>"JcF:#r?(p4J^hillD4G%JcGNFJ,~>
`;fjP!$LBid*Da;d`p)<da6=mQNA:EC4ZD9s4./J+T%LVccXT!QiA1Zs7lVE~>
`;fjR!$gUIcf+rbc/J`bd,N^"rbR/cJcF:#r?M3]J`=i3lH0&NJcGNFJ,~>
`;fjP!$C<ucdVsHc-uaId+$^Drb@#aJcF:#r?(p4J^hillD4G%JcGNFJ,~>
`;fjP!$LBicd)U?c-HC@d*L@2rb@#aJcF:#r?2!(J^;KblBhMnJcGNFJ,~>
`;fjR!$gUIRc4>0d,N^"rbR/cJcF:#r?M3]J`=i3lH0&NJcGNFJ,~>
`;fjP!$C<ucdVsFc-uaLd+$^Drb@#aJcF:#r?(p4J^hillD4G%JcGNFJ,~>
`;fjP!$LBicd)U<c-HCDd*L@2rb@#aJcF:#r?2!(J^;KblBhMnJcGNFJ,~>
`;fjR!$gUIJ`>nQfZ=,0JcC<$e,T@kqoOEKb2V^.s!**pq#>j~>
`;fjP!$C<uRa_>kd+$^D!,@)bJcF4!r?(p4J^hillD4G%JcGNFJ,~>
`;fjP!$LBiRa1udd*L@2!,@)bJcF4!r?2!(J^;KblBhMnJcGNFJ,~>
`;fjR!$gUIRc4>)d,N^"!,R5dJcF4!r?M6^J`=`0m)f8PJcGNFJ,~>
`;fjP!$C<uRa_>id+$^D!,@)bJcF4!r?(s5J^h`im%jY'JcGNFJ,~>
`;fjP!$LBiRa1ubd*L@2!,@)bJcF4!r?2$)J^;B_m$I_pJcGNFJ,~>
`;fjRilR_M!8#TWfZ=,0JcC<$e,T@kr5jNLa5ZI-s!**pq#>j~>
`;fjPihW*o!79*BfVAL^JcC<$e,T@gr1nnna40IOruZglq#>j~>
`;fjPig61]!7&s;fTuSQJcC<$e,T@hr0Mu\a3X+=rucmmq#>j~>
`;fjRilR_M!7oNVfZ=,0JcC<$e,T@kr5jNLa5ZI-s!**pq#>j~>
`;fjPihW*o!79*BfVAL^JcC<$e,T@gr1nnna40IOruZglq#>j~>
`;fjPig61]!7&s;fTuSQJcC<$e,T@hr0Mu\a3X+=rucmmq#>j~>
`;fjRilRbN!:.tjfuX7>Ck;V;s3q#J,PoN5ilC'Fao<T:s7lVE~>
`;fjPihW-p!9_\Xfq\WjC4ZD9s3q#J+8VdaeAp)*V#MNfs7lVE~>
`;fjPig64^!9_\Sfp;^^C4ZD9s3q#J+SqFUcc=AuQiA1Zs7lVE~>
`;fjRilQc2lJgL=!@)E3s+14!s8O>?aarHlip=bf0cYcEq#>j~>
`;fjPihW-p!8c&Ofq\WjC4ZD9s3q#J+8VdaeAp)*U]E%bJcGNFJ,~>
`;fjPig64^!8YuIfp;^^C4ZD9s3q#J+SqFUcc=AuQN8]WJcGNFJ,~>
`;fjRilRbN!7oKUfua81JcC<$e,TFmqT4<Ja5ZI-!?_Gps7lVE~>
`;fjPihW-p!79'AfqeX_JcC<$e,TFiqP8\la40IO!?VAos7lVE~>
`;fjPig64^!7&p:fpD_RJcC<$e,TFjqNlcZa3X+=!?VAos7lVE~>
`;fjRilRbN!7oKUfua81JcC<$e,TFmqT4<Ja5ZI-!?_Gps7lVE~>
`;fjPihW-p!79'AfqeX_JcC<$e,TFiqP8\la40IO!?VAos7lVE~>
`;fjPig64^!7&p:fpD_RJcC<$e,TFjqNlcZa3X+=!?VAos7lVE~>
`;fjRilReO!9_YefuX51JcC<$df9=lqT4<Ja5ZI-!=KNks7lVE~>
`;fjPihW0q!9;ASfq\U_JcC<$df9=hqP8\la40IO!=KKjs7lVE~>
`;fjPig67_!92;Mfp;\RJcC<$df9=iqNlcZa3X+=!=KKjs7lVE~>
`;fjRilReO!7oHTfuX51JcC<$df9=lqoOEK`o?@,!>lQ&s7lVE~>
`;fjPihW0q!79$@fq\U_JcC<$df9=hqkSem`mj@N!>lQ&s7lVE~>
`;fjPig67_!7&m9fp;\RJcC<$df9=iqj2l[`m="<!>lN%s7lVE~>
`;fjRilQc2lJgR?s!%M[JcC<$df9=lqoOEK`T$:,!YY[\JcGQGJ,~>
`;fjPihW6ss5)#MgSFik!,@)bJcF0uru_-6J^hZgmA'ds"3lDsq>Ys~>
`;fjPig6=as4trGgR%p_!,@)bJcF0uruh3*J^;<]m?[ke"3lDsq>Ys~>
`W,pRilRnR!:.nhfua50JcC<$e,TClqoOEK`T$:,!XoC[JcGQGJ,~>
`W,pPihW9t!9_VVfqeU^JcC<$e,TChqkSem`RO:N!XoC[JcGQGJ,~>
`W,pPig6@b!9_VQfpD\QJcC<$e,TCiqj2l[`R!q<!XoC[JcGQGJ,~>
`W,pRilRnR!:.nhfua50JcC<$e,TClqoOEK`T$:,!XoC[JcGQGJ,~>
`W,pPihW9t!9_VVfqeU^JcC<$e,TChqkSem`RO:N!XoC[JcGQGJ,~>
`W,pPig6@b!9_VQfpD\QJcC<$e,TCiqj2l[`R!q<!XoC[JcGQGJ,~>
`W$!U,9u3iU#H(#c/REus(m8dJcF0urZh<^J`=Z.mE#DL#0h`!q>Ys~>
`W$!S+!9L<U!s(dc.(FBs([,bJcF0urZD$5J^hZgmA'e'#0h`!q>Ys~>
`W$!S+<][1U!E_\c-P(0s([,bJcF0urZM*)J^;<]m?[ko#0h`!q>Ys~>
`W$!U,9u3iU>c1(bi7<ts(m8dJcF0urZh<^J`=Z.mE#DL#0h`!q>Ys~>
`W$!S+!9L<U=91ibgb=As([,bJcF0urZD$5J^hZgmA'e'#0h`!q>Ys~>
`W$!S+<][1U<`hbbg4t/s([,bJcF0urZM*)J^;<]m?[ko#0h`!q>Ys~>
`W$!U,9u3iUuMF*bMq6t![DMtJcC<$df9:kqoOEK`T$:,!ET8Ps7lVE~>
`W$!S+!9L<Ut#FkbLG7A!Zu/lJcC<$df9:gqkSem`RO:N!EK2Os7lVE~>
`W$!S+<][1UsK(dbKnn/![)5mJcC<$df9:hqj2l[`R!q<!EK2Os7lVE~>
`W$!U,9u3iUuMF*bMq6t![DMtJcC<$df9:kqoOEK`T$:,!ET8Ps7lVE~>
`W$!S+!9L<Ut#FkbLG7A!Zu/lJcC<$df9:gqkSem`RO:N!EK2Os7lVE~>
`W$!S+<][1UsK(dbKnn/![)5mJcC<$df9:hqj2l[`R!q<!EK2Os7lVE~>
`W$!U,9u3iVW%XAd`LM&aT<]'Ck;V;s3grH,Q#T6il0pGaoBup-OYHUs7u\F~>
`W$!S+!9L<VUPY.bfSAgU]MWQC4ZD9s3grH+8_jbeA]r+V#SsH-4>?Ts7u\F~>
`W$!S+<][1VU#;)aiVl_QNA:EC4ZD9s3grH+T%LVcc+6!QiGP:-4>?Ts7u\F~>
`W$!U,9u3iJ`?%Ug<'>1JcC<$df9=lr5jNL_rC.,s,I*b"+gLIs*t~>
`W$!S+!9L<W71k&h8e%!V#G+[s+13us8O2=Uk.%5eF045N<'7dJcGNFJ,~>
`W$!S+<][1W6YLtgW.XoQi:`Ns+13us8O5>Q\!K#cgR5#Mua.cJcGNFJ,~>
`W#pSi5r"Y!T_tRinDKSCk;V;s3UfG,Q,Z7ikj^EaoC?$((#Qlq#>j~>
`W#pQi2!C&!Sc#@eCp\uC4ZD9s3UfG+8hpceAB`)V#SpF((#Qlq#>j~>
`W#pQi0UIi!SG]:ce=]cC4ZD9s3UfG+T.RWcbe#tQiGA4'a]Hkq#>j~>
`W#pSi5rps!9*/$!Ti"RinDKSCk;V;s3UfG,Q,Z7ikj^EaoC?$((#Qlq#>j~>
`W#pQi2"9?!7g>`!Su/BeCp\uC4ZD9s3UfG+8hpceAB`)V#SpF((#Qlq#>j~>
`W#pQi0V@-!79uV!SYi<ce=]cC4ZD9s3UfG+T.RWcbe#tQiGA4'a]Hkq#>j~>
`W#pSi5rjqs5E>(!8YQPgW9I@Ck;V;s3UfG,Q,Z7ikj^EaoA^I"ouDhs7u\F~>
`W#pQi2!O*s4%/$d_jShU]DQPJcC<$d/X+fr1nnn_US(Ns0;S.!5F*bq>Ys~>
`W#pQi0V7*!7:5]s3Lbo_U$u'!?c-.s+13ss8O5>Q\!K"cg[;$Yl=n-^OcF\s*t~>
`W#pShoWXm!9(0AgW9I@5_8rds3UfG,Q,Z7ikj^EaoA[J"q-"^q#>j~>
`W#pQhkYhQmF9md!?XIUs+13ss8O2=Uk.%4eF9:6YlP%:JcGNFJ,~>
`W#pQhj8o?mEaOR!?aRWs+13ss8O5>Q\!K"cg[;$YQ4q9JcGNFJ,~>
`W#pShoUH/mGcmB!Ac'Rs+13ss8O>AaarHgipb(iZN144JcGNFJ,~>
`W#pQhkYhQmF9md!A>[Ks+13ss8O2=Uk.%4eF9:6YlP"2JcGNFJ,~>
`W#pQhj8o?mEaOR!AGaLs+13ss8O5>Q\!K"cg[;$YQ4n1JcGNFJ,~>
`W#pShoUH/mGcmB!'#Q0JcF-tr?M6^J`=Q+nB(^*!WiDeJcGQGJ,~>
`W#pQhkYhQmF9md!&T9,JcF-tr?(s5J^hQdn>-)X!WiDeJcGQGJ,~>
`W#pQhj8o?mEaOR!&]?-JcF-tr?2$)J^;3Zn<a0J!WiDeJcGQGJ,~>
`W#pShoUH/mGcmB!'#Q0JcF-tr?M6^J`=Q+nB(^*!WiDeJcGQGJ,~>
`W#pQhkYhQmF9md!&T9,JcF-tr?(s5J^hQdn>-)X!WiDeJcGQGJ,~>
`W#pQhj8o?mEaOR!&]?-JcF-tr?2$)J^;3Zn<a0J!WiDeJcGQGJ,~>
`W#pShoUH/mGcpC!@'dZs+13ts8=2?aarHgipb(ic2mtNr.4nDs*t~>
`W#pQhkYhQmF9pe!?X@Rs+13ts8=&;Uk.%4eF9:6b5qYJr.4nDs*t~>
`W#pQhj8o?mEaRS!?aITs+13ts8=)<Q\!K"cg[;$aoVPJr.4nDs*t~>
`W#pShoUH/mc"3kgrTRA14fIVs3^lF,Q,Z7ikj^EaoA%8!"sk_q#>j~>
`W#pQhkYhQmaM4YgnXrm/qO%Rs3^lF+8hpceAB`)V#Qtd!"a_]q#>j~>
`W#pQhj8o?m`tkUgm8$a07j.Ss3^lF+T.RWcbe#tQiETW!"a_]q#>j~>
`W#pShoUH/mc*!C!GjfJs+13ts8=2?aarHgipb(i<WN15JcGNFJ,~>
`W#pQhkYhQmaU!e!GXQEs+13ts8=&;Uk.%4eF9:6;?6b/JcGNFJ,~>
`W#pQhj8o?ma'XS!GXTFs+13ts8=)<Q\!K"cg[;$;ZQk0JcGNFJ,~>
`W#pShoUH/mc*!C!GjfJs+13ts8=2?aarHgipb(i<WN15JcGNFJ,~>
`W#pQhkYhQmaU!e!GXQEs+13ts8=&;Uk.%4eF9:6;?6b/JcGNFJ,~>
`W#pQhj8o?ma'XS!GXTFs+13ts8=)<Q\!K"cg[;$;ZQk0JcGNFJ,~>
`W#pShoUH/mc*!C!,R5dJcF*sr?M6^J`=Q+nB(\art9n_q#>j~>
`W#pQhkYhQmaU!e!,@)bJcF*sr?(s5J^hQdn>-(8rt'b]q#>j~>
`W#pQhj8o?ma'XS!,@)bJcF*sr?2$)J^;3Zn<a/,rt'b]q#>j~>
`W#pShoUH/mc*!C!,R5dJcF*srZh<^J`=Q+nB(VRJcGNFJ,~>
`W#pQhkYhQmaU!e!,@)bJcF*srZD$5J^hQdn>-")JcGNFJ,~>
`W#pQhj8o?ma'XS!,@)bJcF*srZM*)J^;3Zn<a(rJcGNFJ,~>
`rH'ThoUH/mc*!C!,R5dJcF*srZh<^J`=Q+nB(VRJcGNFJ,~>
`rH'RhkYhQmaU!e!,@)bJcF*srZD$5J^hQdn>-")JcGNFJ,~>
`rH'Rhj8o?ma'XS!,@)bJcF*srZM*)J^;3Zn<a(rJcGNFJ,~>
`rH'ThoUH/mc*!C!,R5dJcF*srZh<^J`=Q+nB(VRJcGNFJ,~>
`rH'RhkYhQmaU!e!,@)bJcF*srZD$5J^hQdn>-")JcGNFJ,~>
`rH'Rhj8o?ma'XS!,@)bJcF*srZM*)J^;3Zn<a(rJcGNFJ,~>
`r?'U,N$TC,D"kCin_`UCk;V;s3UfF,Q,Z7ikaXDao*H8s7lVE~>
`r?'S+5`jo++_r1eD6r"C4ZD9s3UfF+8hpceA9Z(V#;Bds7lVE~>
`r?'S+Q&Lc+G%l-ceXreC4ZD9s3UfF+T.RWcb[rsQi/%Xs7lVE~>
`r?'U,MpOnipYm_ao?1.s+13rs8F8@aarHfipb(g,D#mis*t~>
`r?'S+5WfEeF1oCV#P1\s+13rs8F,<Uk.%3eF9:4++aIes*t~>
`r?'S+PrH9cgT39QiCfOs+13rs8F/=Q\!K!cg[;"+G'Rfs*t~>
`r?'U,MpOnipYm`aT<]'Ck;V;s3UfE,Q,Z7ikOLDao*H8s7lVE~>
`r?'S+5WfEeF1oDU]MWQC4ZD9s3UfE+8hpceA'N(V#;Bds7lVE~>
`r?'S+PrH9cgT3:QNA:EC4ZD9s3UfE+T.RWcbIfsQi/%Xs7lVE~>
`r?'U,MpOnipYm`aT<]'Ck;V;s3UfE,Q,Z7ikOLDao*H8s7lVE~>
`r?'S+5WfEeF1oDU]MWQC4ZD9s3UfE+8hpceA'N(V#;Bds7lVE~>
`r?'S+PrH9cgT3:QNA:EC4ZD9s3UfE+T.RWcbIfsQi/%Xs7lVE~>
`r?'U,MpOnipYm`aT<]'Ck;V;s3UfE,Q,Z7ikOLDao*H8s7lVE~>
`r?'S+5WfEeF1oDU]MWQC4ZD9s3UfE+8hpceA'N(V#;Bds7lVE~>
`r?'S+PrH9cgT3:QNA:EC4ZD9s3UfE+T.RWcbIfsQi/%Xs7lVE~>
`r?'U,MpOnipbq-,MpQACk;V;s3UfE,Q,Z7ikOLDao*H8s7lVE~>
`r?'S+5WfEeF:rf+5WgmC4ZD9s3UfE+8hpceA'N(V#;Bds7lVE~>
`r?'S+PrH9cg]6\+PrIaC4ZD9s3UfE+T.RWcbIfsQi/%Xs7lVE~>
`r?'U,MpOnipbs`aT-..s+13qs8=2?aarHdipt4i,D#mis*t~>
`r?'S+5WfEeF:uDU]>.\s+13qs8=&;Uk.%1eFKF6++aIes*t~>
`r?'S+PrH9cg]9:QN1cOs+13qs8=)<Q\!JtcgmG$+G'Rfs*t~>
`r?'U,MpOnipbsaaT3W&JcC<$cN!hfr5jNL^Z+h+r?Hmnq#>j~>
`r?'S+5WfEeF:uEU]DQPJcC<$cN!hbr1nnn^XVhMr?$Ujq#>j~>
`r?'S+PrH9cg]9;QN84DJcC<$cN!hcr0Mu\^X)J;r?-[kq#>j~>
`r?'U,MpOnipbsaaT3W&JcC<$cN!hfr5jNL^Z+h+r?Hmnq#>j~>
`r?'S+5WfEeF:uEU]DQPJcC<$cN!hbr1nnn^XVhMr?$Ujq#>j~>
`r?'S+PrH9cg]9;QN84DJcC<$cN!hcr0Mu\^X)J;r?-[kq#>j~>
`r?'U,M^Clipu*cao?1.s+13qs8F8?aarHdipt4i,D#mis*t~>
`r?'S+5EZCeFM,GV#P1\s+13qs8F,;Uk.%1eFKF6++aIes*t~>
`r?'S+P`<7cgoE=QiCfOs+13qs8F/<Q\!JtcgmG$+G'Rfs*t~>
`r?$TgW>$+o&ANJ!,R5dJcF!prZh<^J`=H(o#^hTJcGNFJ,~>
`r?$RgSBDMo$lNl!,@)bJcF!prZD$5J^hHantc4+JcGNFJ,~>
`r?$RgR!K;o$?0Z!,@)bJcF!prZM*)J^;*WnsB:tJcGNFJ,~>
`r?$TgW>$+o&ANJ!,R5dJcF!prZh<^J`=H(o#^hTJcGNFJ,~>
`r?$RgSBDMo$lNl!,@)bJcF!prZD$5J^hHantc4+JcGNFJ,~>
`r?$RgR!K;o$?0Z!,@)bJcF!prZM*)J^;*WnsB:tJcGNFJ,~>
`r?$TgW>$+o&ANJ!,R5dJcF!prZh<^J`=H(o#^hTJcGNFJ,~>
`r?$RgSBDMo$lNl!,@)bJcF!prZD$5J^hHantc4+JcGNFJ,~>
`r?$RgR!K;o$?0Z!,@)bJcF!prZM*)J^;*WnsB:tJcGNFJ,~>
`r?$TgW>$+o]"`LrbR/cJcF!prZh<^J`=H(o#^hTJcGNFJ,~>
`r?$RgSBDMo[M`nrb@#aJcF!prZD$5J^hHantc4+JcGNFJ,~>
`r?$RgR!K;oZuB\rb@#aJcF!prZM*)J^;*WnsB:tJcGNFJ,~>
`r?$TgW>$+o]#o"i5u"8JcC<$c2[_eqoOEK^Z+h+r?Hmnq#>j~>
`r?$RgSBDMo[NoNi2$BfJcC<$c2[_aqkSem^XVhMr?$Ujq#>j~>
`r?$RgR!K;o[!Q?i0XIYJcC<$c2[_bqj2l[^X)J;r?-[kq#>j~>
`r?$TgW>$+o]"`Ls(m8dJcF!pr?M3]J`=H(o#^hTJcGNFJ,~>
`r?$RgSBDMo[M`ns([,bJcF!pr?(p4J^hHantc4+JcGNFJ,~>
`r?$RgR!K;oZuB\s([,bJcF!pr?2!(J^;*WnsB:tJcGNFJ,~>
`r?$TgW>$+o]"cM![DMtJcC<$c2[_eqoOEK^Z+h+r?Hmnq#>j~>
`r?$RgSBDMo[Mco!Zu/lJcC<$c2[_aqkSem^XVhMr?$Ujq#>j~>
`r?$RgR!K;oZuE]![)5mJcC<$c2[_bqj2l[^X)J;r?-[kq#>j~>
`r?$TgW>$+o]"cM![DMtJcC<$c2[_eqoOEK^Z+h+r?Hmnq#>j~>
`r?$RgSBDMo[Mco!Zu/lJcC<$c2[_aqkSem^XVhMr?$Ujq#>j~>
`r?$RgR!K;oZuE]![)5mJcC<$c2[_bqj2l[^X)J;r?-[kq#>j~>
`r?$Vg<"p*p#=lNrbR/cJcF!pr?M3]J`=H(o#^kUJcGKEJ,~>
`r?$Tg8';Lp!hlprb@#aJcF!pr?(p4J^hHantc7,JcGKEJ,~>
`r?$Tg6[B:p!;N^rb@#aJcF!pr?2!(J^;*WnsB=uJcGKEJ,~>
`r?$eg<"p*p#=lN!,R5dJcEpnr?M3]J`=H(o#^kUJcGKEJ,~>
`r?$cg8';Lp!hlp!,@)bJcEpnr?(p4J^hHantc7,JcGKEJ,~>
`r?$cg6[B:p!;N^!,@)bJcEpnr?2!(J^;*WnsB=uJcGKEJ,~>
`r?%*g<"p*p#=oO!@)E3s+13ns8O>>aarHdipt4j,D#mhs*t~>
`r?%)g8';Lp!hoq!?Z'-s+13ns8O2:Uk.%1eFKF7++aIds*t~>
`r?%)g6[B:p!;Q_!?c-.s+13ns8O5;Q\!JtcgmG%+G'Res*t~>
`r?%*g<"p*p#=oO!@)E3s+13ns8O>>aarHdipt4j,D#mhs*t~>
`r?%)g8';Lp!hoq!?Z'-s+13ns8O2:Uk.%1eFKF7++aIds*t~>
`r?%)g6[B:p!;Q_!?c-.s+13ns8O5;Q\!JtcgmG%+G'Res*t~>
`r?%0g<"p*p>Q&si5u"8JcC<$bQ%Seq8n3I^Z+h+rZd!op]#a~>
`r?%/g8';Lp=''ai2$BfJcC<$bQ%Saq4rSk^XVhMrZ?^kp]#a~>
`r?%/g6[B:p<N^]i0XIYJcC<$bQ%Sbq3QZY^X)J;rZHdlp]#a~>
`r?%0g<"p*p>XuO!,R5dJcEmms!.?]J`=H(o#^kUJcGKEJ,~>
`r?%/g8';Lp=.uq!,@)bJcEmmru_'4J^hHantc7,JcGKEJ,~>
`r?%/g6[B:p<VW_!,@)bJcEmmruh-(J^;*WnsB=uJcGKEJ,~>
`r?%0fu\g)pYt/RrbR/cJcEmms!.?]J`=H(o#^kUJcGKEJ,~>
`r?%/fqa2KpXJ/trb@#aJcEmmru_'4J^hHantc7,JcGKEJ,~>
`r?%/fp@99pWqfbrb@#aJcEmmruh-(J^;*WnsB=uJcGKEJ,~>
`r?%0fu\g)pYt/RrbR/cJcEmms!.?]J`=H(o#^kUJcGKEJ,~>
`r?%/fqa2KpXJ/trb@#aJcEmmru_'4J^hHantc7,JcGKEJ,~>
`r?%/fp@99pWqfbrb@#aJcEmmruh-(J^;*WnsB=uJcGKEJ,~>
`r?%0fu\g)pYt/Rs(m8dJcEpnr?M-[J`=H(o#^kUJcGKEJ,~>
`r?%/fqa2KpXJ/ts([,bJcEpnr?(j2J^hHantc7,JcGKEJ,~>
`r?%/fp@99pWqfbs([,bJcEpnr?1p&J^;*WnsB=uJcGKEJ,~>
`r?(1,ML7jiqMHlaT<]'Ck;V;s3(H@,PfH4ikaXDao3N9s7cPD~>
`r?(0+53NAeG%JPU]MWQC4ZD9s3(H@+8M^`eA9Z(V#DHes7cPD~>
`r?(0+PN05chGcFQNA:EC4ZD9s3(H@+Sh@Tcb[rsQi8+Ys7cPD~>
`r?(1,ML7jiqVNlao6+-s+13ns8=2<aarHfipb(h,D#mhs*t~>
`r?(0+53NAeG.PPV#G+[s+13ns8=&8Uk.%3eF9:5++aIds*t~>
`r?(0+PN05chPiFQi:`Ns+13ns8=)9Q\!K!cg[;#+G'Res*t~>
`rH(0g<"p*pu:8S!,R5dJcEjlr?M*ZJ`=Q+nB(YSJcGKEJ,~>
`rH(/g8';Lpse8u!,@)bJcEjlr?(g1J^hQdn>-%*JcGKEJ,~>
`rH(/g6[B:ps7oc!,@)bJcEjlr?1m%J^;3Zn<a+sJcGKEJ,~>
`rH(0g<"p*pu:8S!,R5dJcEjlr?M*ZJ`=Q+nB(YSJcGKEJ,~>
`rH(/g8';Lpse8u!,@)bJcEjlr?(g1J^hQdn>-%*JcGKEJ,~>
`rH(/g6[B:ps7oc!,@)bJcEjlr?1m%J^;3Zn<a+sJcGKEJ,~>
`W#q/g<"p*pu:8S!,R5dJcEjlr?M*ZJ`=Q+nB(YSJcGKEJ,~>
`W#q.g8';Lpse8u!,@)bJcEjlr?(g1J^hQdn>-%*JcGKEJ,~>
`W#q.g6[B:ps7oc!,@)bJcEjlr?1m%J^;3Zn<a+sJcGKEJ,~>
`W#q/fZA^(qVpMVs(m8dJcEjlrZh0ZJ`=Q+nB(YSJcGKEJ,~>
`W#q.fVF)JqUFN#s([,bJcEjlrZCm1J^hQdn>-%*JcGKEJ,~>
`W#q.fU%08qTn/fs([,bJcEjlrZLs%J^;3Zn<a+sJcGKEJ,~>
`W#q/fZA^(qVpMV!,R5dJcEgkrZh0ZJ`=Q+nB(YSJcGKEJ,~>
`W#q.fVF)JqUFN#!,@)bJcEgkrZCm1J^hQdn>-%*JcGKEJ,~>
`W#q.fU%08qTn/f!,@)bJcEgkrZLs%J^;3Zn<a+sJcGKEJ,~>
`W#q/fZA^(qVpMV!,R5dJcEgkrZh0ZJ`=Q+nB(YSJcGKEJ,~>
`W#q.fVF)JqUFN#!,@)bJcEgkrZCm1J^hQdn>-%*JcGKEJ,~>
`W#q.fU%08qTn/f!,@)bJcEgkrZLs%J^;3Zn<a+sJcGKEJ,~>
`W#q.fZA^(r8Rb0j2q=;JcC<$aT)5apW8!G_W((,rZd!op]#a~>
`W#q,fVF)Jr7(c!j.u]iJcC<$aT)5]pS<Ai_US(NrZ?^kp]#a~>
`W#q-fU%08r6PDrj-Td\JcC<$aT)5^pQpHW_U%_<rZHdlp]#a~>
`W$"(,9tpaJ`?Ues5W4_s!%M[JcC<$a8c,`pW8!G_W((,rZd!op]#a~>
`W$"&+!944J^jVIs4l_3ruV5UJcC<$a8c,\pS<Ai_US(NrZ?^kp]#a~>
`W$"&+<]C)J^=8?s4QM#ru_;VJcC<$a8c,]pQpHW_U%_<rZHdlp]#a~>
`W$!gSXnHUJ`?Xfj2q::JcC<$aT)2`pW8!G_W((,rZd!op]#a~>
`W$!eS=J9.J^jYJj.uZhJcC<$aT)2\pS<Ai_US(NrZ?^kp]#a~>
`W$!eS=J9!J^=;@j-Ta[JcC<$aT)2]pQpHW_U%_<rZHdlp]#a~>
`W$!gSXnHUJ`?Xfj2q::JcC<$aT)2`pW8!G_W((,rZd!op]#a~>
`W$!eS=J9.J^jYJj.uZhJcC<$aT)2\pS<Ai_US(NrZ?^kp]#a~>
`W$!eS=J9!J^=;@j-Ta[JcC<$aT)2]pQpHW_U%_<rZHdlp]#a~>
`;fk+fu\g)rSlkZs(m8dJcEdjr?M'YJ`=Q+nB(YSJcGKEJ,~>
`;fk)fqa2KrRBl's([,bJcEdjr?(d0J^hQdn>-%*JcGKEJ,~>
`;fk*fp@99rQjMjs([,bJcEdjr?1j$J^;3Zn<a+sJcGKEJ,~>
`;fjrfu\g)ro*p8jN7C;JcC<$a8c)_pW8!G_W((,rZd!op]#a~>
`;fjpfqa2KrmUq(jJ;ciJcC<$a8c)[pS<Ai_US(NrZ?^kp]#a~>
`;fjqfp@99rm(S#jHoj\JcC<$a8c)\pQpHW_U%_<rZHdlp]#a~>
`;fj\fu\g)rSln[!,R5dJcE^hr?M'YJ`=Q+n]C_SJcGKEJ,~>
`;fjZfqa2KrRBo(!,@)bJcE^hr?(d0J^hQdnYH+*JcGKEJ,~>
`;fjZfp@99rQjPk!,@)bJcE^hr?1j$J^;3ZnX'1sJcGKEJ,~>
`;fjRfZA^(s5F%8jiRO=JcC<$`W,l]pW8!G_W(+-r?Hmnp]#a~>
`;fjPfVF)Js3q&*jeVokJcC<$`W,lYpS<Ai_US+Or?$Ujp]#a~>
`;fjPfU%08s3C]%jd6!^JcC<$`W,lZpQpHW_U%b=r?-[kp]#a~>
`;fjRfZA^(s5F%8jiRO=JcC<$`W,l]pW8!G_W(+-r?Hmnp]#a~>
`;fjPfVF)Js3q&*jeVokJcC<$`W,lYpS<Ai_US+Or?$Ujp]#a~>
`;fjPfU%08s3C]%jd6!^JcC<$`W,lZpQpHW_U%b=r?-[kp]#a~>
`;fjR!$g1=J`?^hjN.C<JcC<$`;ff]p;qmF_rC1-r?Hmnp]#a~>
`;fjP!$BmiJ^j_LjJ2cjJcC<$`;ffYp8!8h_pn1Or?$Ujp]#a~>
`;fjP!$Ks]J^=ABjHfj]JcC<$`;ffZp6U?V_p@h=r?-[kp]#a~>
`;fjR!-Ho9J`6^iJEFuQCk;V;s2=s:,P9*/il0pHao*H8s7cPD~>
`;fjP!-6bgJ^a_MIcdI*C4ZD9s2=s:+7u@[eA]r,V#;Bds7cPD~>
`;fjP!-6bZJ^4ACIcd!rC4ZD9s2=s:+S;"Occ+6"Qi/%Xs7cPD~>
_Z'UPfu\g)!TKX3ao?1.s+13fs8F88aarHjipb(g,D#mhs*t~>
_Z'UNfqa2K!S!S#V#P1\s+13fs8F,4Uk.%7eF9:4++aIds*t~>
_Z'UNfp@99!RI4sQiCfOs+13fs8F/5Q\!K%cg[;"+G'Res*t~>
_Z'UPfu\g)!TKX3ao?1.s+13fs8F88aarHjipb(g,D#mhs*t~>
_Z'UNfqa2K!S!S#V#P1\s+13fs8F,4Uk.%7eF9:4++aIds*t~>
_Z'UNfp@99!RI4sQiCfOs+13fs8F/5Q\!K%cg[;"+G'Res*t~>
_Z'UPfuX4=J`6[hkK*cMCi"\&JcEXfrZh'WJ`=Z.nB(VRJcGKEJ,~>
_Z'UNfq\TiJ^a\LkG//$C2/>"JcEXfrZCd.J^hZgn>-")JcGKEJ,~>
_Z'UNfp;[]J^4>BkEc5mC2/>"JcEXfrZLj"J^;<]n<a(rJcGKEJ,~>
_Z'UPfZA^(!8m"^!$hJZJcC<$`;fc\oZ;[D`T$C/r?Hmnp]#a~>
_Z'UNfVF)J!8cq8!$D2TJcC<$`;fcXoV@&f`ROCQr?$Ujp]#a~>
_Z'UNfU%08!8m",!$M8UJcC<$`;fcYoTt-T`R"%?r?-[kp]#a~>
_Z'UPfZAa)!*8:)!@)E3s+13es8=27aarHjipb(g,D#mhs*t~>
_Z'UNfVF,K!)r'V!?Z'-s+13es8=&3Uk.%7eF9:4++aIds*t~>
_Z'UNfU%39!*&-J!?c-.s+13es8=)4Q\!K%cg[;"+G'Res*t~>
_Z'UPfZAa)!*8:)!@)E3s+13es8=27aarHjipb(g,D#mhs*t~>
_Z'UNfVF,K!)r'V!?Z'-s+13es8=&3Uk.%7eF9:4++aIds*t~>
_Z'UNfU%39!*&-J!?c-.s+13es8=)4Q\!K%cg[;"+G'Res*t~>
_Z'UPfZAa)!-.2Ds(m8dJcEUer?LsVJ`=Z.nB(YSJcGHDJ,~>
_Z'UNfVF,K!,gtqs([,bJcEUer?([-J^hZgn>-%*JcGHDJ,~>
_Z'UNfU%39!,q%es([,bJcEUer?1a!J^;<]n<a+sJcGHDJ,~>
_Z'UPf#`R(kfNj@JcC<$_>jHYoZ;[D`o?I/rZd!opA]X~>
_Z'UNetdrJkbS5nJcC<$_>jHUoV@&f`mjIQrZ?^kpA]X~>
_Z'UNesD$8ka2<aJcC<$_>jHVoTt-T`m=+?rZHdlpA]X~>
`;fgQf#`U)!7U/R!,R5dJcEOcr?LpUJ`=`0n&bPRJcGHDJ,~>
`;fgOetduK!4_6g!,@)bJcEOcr?(X,J^h`in"fq)JcGHDJ,~>
`;fgOesD'9!3YOP!,@)bJcEOcr?1]uJ^;B_n!F"rJcGHDJ,~>
`;fjR!$g(:L>r5Pl,ip@JcC<$_#OEZn]?@Aa5ZR0rZd!opA]X~>
`;fjP!$BdfL=H6?l(n;nJcC<$_#OEVnYC`ca40RRrZ?^kpA]X~>
`;fjP!$KjZL<om;l'MBaJcC<$_#OEWnX"gQa3X4@rZHdlpA]X~>
`;fjR!$g(:L>r5Pl,ip@JcC<$_#OEZn]?@Aa5ZR0rZd!opA]X~>
`;fjP!$BdfL=H6?l(n;nJcC<$_#OEVnYC`ca40RRrZ?^kpA]X~>
`;fjP!$KjZL<om;l'MBaJcC<$_#OEWnX"gQa3X4@rZHdlpA]X~>
`;fjR!$g(:!$d9Ys4uq]s(m8dJcELbs!.'UJ`=`0n&bPRJcGHDJ,~>
`;fjP!$Bdf!$@!Gs4uq8s([,bJcELbru^d,J^h`in"fq)JcGHDJ,~>
`;fjP!$KjZ!$I'Cs4uq+s([,bJcELbrugiuJ^;B_n!F"rJcGHDJ,~>
`;fjR!$g%9LZ7O>rbR/cJcELbs!.*V!7-5Ua5ZR0rZd!opA]X~>
`;fjP!$BaeLXbO`rb@#aJcELbru^g-!3Un&a40RRrZ?^kpA]X~>
`;fjP!$KgYLX51Nrb@#aJcELbrugm!!2G+ka3X4@rZHdlpA]X~>
`;fjR!$g%9LuJEnkfEg@JcC<$^&S*Wn]?@Aa5ZR0rZd!opA]X~>
`;fjP!$BaeLsuF_kbJ2nJcC<$^&S*SnYC`ca40RRrZ?^kpA]X~>
`;fjP!$KgYLsH(Zka)9aJcC<$^&S*TnX"gQa3X4@rZHdlpA]X~>
`;fjR!$g%9LuJEnkfEg@JcC<$^&S*Wn]?@Aa5ZR0rZd!opA]X~>
`;fjP!$BaeLsuF_kbJ2nJcC<$^&S*SnYC`ca40RRrZ?^kpA]X~>
`;fjP!$KgYLsH(Zka)9aJcC<$^&S*TnX"gQa3X4@rZHdlpA]X~>
`;fjR!$g"8M;ma@s(m8dJcEF`s!.'UJ`=`0n&bPRJcGHDJ,~>
`;fjP!$B^dM:Cabs([,bJcEF`ru^d,J^h`in"fq)JcGHDJ,~>
`;fjP!$KdXM9kCPs([,bJcEF`rugiuJ^;B_n!F"rJcGHDJ,~>
`;fjRe&dL,l,irM!,R5dJcEIar?LjSJ`=f2mE,>PJcGHDJ,~>
`;fjPe"hlNl(n>$!,@)bJcEIar?(R*J^hfkmA0_'JcGHDJ,~>
`;fjPe!Gs<l'MDm!,@)bJcEIar?1WsJ^;Ham?depJcGHDJ,~>
`;fjRe&dL,l,ip@JcC<$^An-Vn]?@Aal;a1r?HmnpA]X~>
`;fjPe"hlNl(n;nJcC<$^An-RnYC`cajfaSr?$UjpA]X~>
`;fjPe!Gs<l'MBaJcC<$^An-SnX"gQaj9CAr?-[kpA]X~>
`;fjRe&dL,l,ip@JcC<$^An-Vn]?@Aal;a1r?HmnpA]X~>
`;fjPe"hlNl(n;nJcC<$^An-RnYC`cajfaSr?$UjpA]X~>
`;fjPe!Gs<l'MBaJcC<$^An-SnX"gQaj9CAr?-[kpA]X~>
`;fjRdE.@,l,isAJcC<$^&S$Un]?@Aal;a1r?HmnpA]X~>
`;fjPdA2`Nl(n>oJcC<$^&S$QnYC`cajfaSr?$UjpA]X~>
`;fjPd?fg<l'MEbJcC<$^&S$RnX"gQaj9CAr?-[kpA]X~>
`;fjRdE.F.kfNg?JcC<$^&S$Un]:dfJ`=i3m`GDPJcGHDJ,~>
`;fjPdA2fPkbS2mJcC<$^&S$QnY?0.J^hilm\Ke'JcGHDJ,~>
`;fjPd?fm>ka29`JcC<$^&S$RnWs6oJ^;Kbm[*kpJcGHDJ,~>
`;fjRdE.F.kfEg@JcC<$]DqgSn]:d\J`=l4mE,;OJcGHDJ,~>
`;fjPdA2fPkbJ2nJcC<$]DqgOnY?/pJ^hlmmA0\&JcGHDJ,~>
`;fjPd?fm>ka)9aJcC<$]DqgPnWs6YJ^;Ncm?dboJcGHDJ,~>
`W,pRd)h@.l,isAJcC<$]DqjTn&^.?bMqp2r?HmnpA]X~>
`W,pPd%l`Pl(n>oJcC<$]DqjPn"bNabLGpTr?$UjpA]X~>
`W,pPd$Kg>l'MEbJcC<$]DqjQn!AUObKoRBr?-[kpA]X~>
`W,pRd)h@.l,isAJcC<$]DqjTn&^.?bMqp2r?HmnpA]X~>
`W,pPd%l`Pl(n>oJcC<$]DqjPn"bNabLGpTr?$UjpA]X~>
`W,pPd$Kg>l'MEbJcC<$]DqjQn!AUObKoRBr?-[kpA]X~>
`W$!U,9tRWOQ,QIrbR/cJcE=]rZgmRs5&=dc/S-4s!**po`'F~>
`W$!S+!8k*OOWQkrb@#aJcE=]rZCU)s3#uCc.)-VruZglo`'F~>
`W$!S+<]$tOO*3Yrb@#aJcE=]rZLZrs29K7c-PdDrucmmo`'F~>
`W$!U,9tOVOlGZJs(m8dJcE:\rZggPJ`=r6mE,AQJcGBBJ,~>
`W$!S+!8h)OjrZls([,bJcE:\rZCO'J^hromA0b(JcGBBJ,~>
`W$!S+<]!sOjE<Zs([,bJcE:\rZLTpJ^;Tem?dhqJcGBBJ,~>
`W$!U,9tOVOlG]KrbR/cJcE:\rZggP!9&LgcJn65s!**po`'F~>
`W$!S+!8h)Ojr]mrb@#aJcE:\rZCO'!8`:VcID6WruZglo`'F~>
`W$!S+<]!sOjE?[rb@#aJcE:\rZLTp!8W4PcHkmErucmmo`'F~>
`W$!U,9tOVOlG]KrbR/cJcE:\rZggP!9&LgcJn65s!**po`'F~>
`W$!S+!8h)Ojr]mrb@#aJcE:\rZCO'!8`:VcID6WruZglo`'F~>
`W$!S+<]!sOjE?[rb@#aJcE:\rZLTp!8W4PcHkmErucmmo`'F~>
`W#pSc,l..lH'$BJcC<$\,ZFPm)ah<cf4<5s!**po`'F~>
`W#pQc(pNPlD+DpJcC<$\,ZFLm%f3^cd_<WruZglo`'F~>
`W#pQc'OU>lB_KcJcC<$\,ZFMm$E:Lcd1sErucmmo`'F~>
`W#pSbK6".lcK0CJcC<$\,ZFPm)ah<cf4<5s!**po`'F~>
`W#pQbG:BPl_OPqJcC<$\,ZFLm%f3^cd_<WruZglo`'F~>
`W#pQbEnI>l^.WdJcC<$\,ZFMm$E:Lcd1sErucmmo`'F~>
`W#pSbK6(0lH0'BJcC<$\,ZCOm)ah<cf4<5s!**po`'F~>
`W#pQbG:HRlD4GpJcC<$\,ZCKm%f3^cd_<WruZglo`'F~>
`W#pQbEnO@lBhNcJcC<$\,ZCLm$E:Lcd1sErucmmo`'F~>
`W#pSbK6(0lH0'BJcC<$\,ZCOm)ah<cf4<5s!**po`'F~>
`W#pQbG:HRlD4GpJcC<$\,ZCKm%f3^cd_<WruZglo`'F~>
`W#pQbEnO@lBhNcJcC<$\,ZCLm$E:Lcd1sErucmmo`'F~>
`W#pSbK6(0lH'$BJcC<$[f?:Nm)ah<cf4B7r?Hmno`'F~>
`W#pQbG:HRlD+DpJcC<$[f?:Jm%f3^cd_BYr?$Ujo`'F~>
`W#pQbEnO@lB_KcJcC<$[f?:Km$E:Lcd2$Gr?-[ko`'F~>
`W#pSb/p"0m)f6CJcC<$[f?:NlcF_;dGjQ8r?Hmno`'F~>
`W#pQb+tBRm%jVqJcC<$[f?:Jl_K*]dF@QZr?$Ujo`'F~>
`W#pQb*SI@m$I]dJcC<$[f?:Kl^*1KdEh3Hr?-[ko`'F~>
`rH'Tb/p%1lcK0CJcC<$[K$1MlcF_;dGjQ8r?Hmno`'F~>
`rH'Rb+tESl_OPqJcC<$[K$1Il_K*]dF@QZr?$Ujo`'F~>
`rH'Rb*SLAl^.WdJcC<$[K$1Jl^*1KdEh3Hr?-[ko`'F~>
`r?'U,K\&qip=edCk;V;s0_n*,O<I1iW/;bipFkd,D#mes*t~>
`r?'S+3C=HeEj"1C4ZD9s0_n*+7#_]e,\UNeEs(1++aIas*t~>
`r?'S+N]t<cg7"tC4ZD9s0_n*+R>AQcN*%Hcg@(t+G'Rbs*t~>
`r?'U,K\&qip=edCk;V;s0_n*,O<I1iW/;bipFkd,D#mes*t~>
`r?'S+3C=HeEj"1C4ZD9s0_n*+7#_]e,\UNeEs(1++aIas*t~>
`r?'S+N]t<cg7"tC4ZD9s0_n*+R>AQcN*%Hcg@(t+G'Rbs*t~>
`r?'U,K\&rip=bf,A_r2JcE(Vr?LXMMrOd&bMqj0rZd!ooDa=~>
`r?'S+3C=IeEit3+)6B,JcE(Vr?(@$Mq%dgbLGjRrZ?^koDa=~>
`r?'S+N]t=cg6u!+DQK-JcE(Vr?1EmMpMFabKoL@rZHdloDa=~>
`r?'U,KRurip=eeCk;V;s0Mb),O*=$imcuRao3N9s7?8@~>
`r?'S+3:7IeEj"2C4ZD9s0Mb)+6fSPeC<"6V#DHes7?8@~>
`r?'S+NTn=cg7"uC4ZD9s0Mb)+R,5Dcd^;,Qi8+Ys7?8@~>
`r?'U,KRusipFkeCk;V;s0D\(,O*=$imcuRao3N9s7?8@~>
`r?'S+3:7JeEs(2C4ZD9s0D\(+6fSPeC<"6V#DHes7?8@~>
`r?'S+NTn>cg@(uC4ZD9s0D\(+R,5Dcd^;,Qi8+Ys7?8@~>
`r?'U,KRusipFkeCk;V;s0D\(,O*=$imcuRao3N9s7?8@~>
`r?'S+3:7JeEs(2C4ZD9s0D\(+6fSPeC<"6V#DHes7?8@~>
`r?'S+NTn>cg@(uC4ZD9s0D\(+R,5Dcd^;,Qi8+Ys7?8@~>
`r?$T`Q=_2m`>MTCi$NZs87HJJcGcMrZg[LJ`>2=m)f2NJcG?AJ,~>
`r?$R`MB*Tm\Bn+C210Vs87HJJcGcMrZCC#J^i3!m%jS%JcG?AJ,~>
`r?$R`L!1Bm[!ttC210Vs8ITLJcGcMrZLHlJ^;ilm$IYnJcG?AJ,~>
`r?$T`Q=e4m)f6C[K$9[JcC<$!<<!BkK/;7fAc,<r?HmnoDa=~>
`r?$R`MB0Vm%jVq[K$9ZJcC<$!<<!>kG3[Yf@9,^r?$UjoDa=~>
`r?$R`L!7Dm$I]d[K$9sJcC<$!<<!?kEgbGf?`cLr?-[koDa=~>
`r?$T`Q=e4mE,BEZiC'ZJcC<$!<<!BkK/;7fAc,<r?HmnoDa=~>
`r?$R`MB0VmA0bsZiC'YJcC<$!<<!>kG3[Yf@9,^r?$UjoDa=~>
`r?$R`L!7Dm?difZiC'qJcC<$!<<!?kEgbGf?`cLr?-[koDa=~>
`r?$T`Q=e4mE,BEZiC'ZJcC<$!<<!BkK/;7fAc,<r?HmnoDa=~>
`r?$R`MB0VmA0bsZiC'YJcC<$!<<!>kG3[Yf@9,^r?$UjoDa=~>
`r?$R`L!7Dm?difZiC'qJcC<$!<<!?kEgbGf?`cLr?-[koDa=~>
`r?$T`6"_4n&bSS!,St@s8ITLJc>`Mr?LLIJ`>;@lcK,NJcG<@J,~>
`r?$R`2'*Vn"ft*!,Ah>s8ITLJc>`Mr?(3uJ^i<$l_OM%JcG<@J,~>
`r?$R`0[1Dn!F%s!,Ah>s8ITLJc>`Mr?19iJ^;rol^.SnJcG<@J,~>
`r?$T_o\\5m`GHEZN't(JcC<$!rjJijN2u4g#D;=rZd!oo)F4~>
`r?$R_ka'Wm\KhsZN't(JcC<$!rj>ajJ7@Vg!o;_rZ?^ko)F4~>
`r?$R_j@.Em[*ofJcC<$YQ+VFjHkGDg!ArMrZHdlo)F4~>
`r?$T_o\_6m`GHEJcC<$YQ+SHjN2u4g#D>>r?Hmno)F4~>
`r?$R_ka*Xm\KhsJcC<$YQ+SDjJ7@Vg!o>`r?$Ujo)F4~>
`r?$R_j@1Fm[*ofJcC<$YQ+SEjHkGDg!AuNr?-[ko)F4~>
`r?$T_9&S6n&YSTCk;V;s/l>#,NQstin<>Wao*H8s762?~>
`r?$R_5*sXn"]t+C4ZD9s/l>#+695KeCi@;V#;Bds762?~>
`r?$R_3_%Fn!=%tC4ZD9s/l>#+QSl?ce6Y1Qi/%Xs762?~>
`r?$T_9&S6n&YSTCk;V;s/l>#,NQstin<>Wao*H8s762?~>
`r?$R_5*sXn"]t+C4ZD9s/l>#+695KeCi@;V#;Bds762?~>
`r?$R_3_%Fn!=%tC4ZD9s/l>#+QSl?ce6Y1Qi/%Xs762?~>
`r?$T_9&Y8mE,BEJcC<$XoJAFj2ll3gu@S?r?Hmno)F4~>
`r?$R_5+$ZmA0bsJcC<$XoJABj.q7UgskSar?$Ujo)F4~>
`r?$R_3_+Hm?difJcC<$XoJACj-P>Cgs>5Or?-[ko)F4~>
`r?'U,JhL$ipOqgCk;V;s/c8#,N?grinWPXao<T:s7$&=~>
`r?'S+2ObPeF'.4C4ZD9s/c8#+6')IeD/R<V#MNfs7$&=~>
`r?'S+MjDDcgI/"C4ZD9s/c8#+QA`=ceQk2QiA1Zs7$&=~>
`r?'U,JhL%ipY"h,62P2s+13Ps8=2%aarI-ionMa,D#mas*t~>
`r?'S+2ObQeF045*rp&,s+13Ps8=&!Uk.%OeEE_.++aI]s*t~>
`r?'S+MjDEcgR5#+96/-s+13Ps8=)"Q\!K=cfg_q+G'R^s*t~>
`r?'U,JhL%ipY"h,62P2s+13Ps8=2%aarI-ionMa,D#mas*t~>
`r?'S+2ObQeF045*rp&,s+13Ps8=&!Uk.%OeEE_.++aI]s*t~>
`r?'S+MjDEcgR5#+96/-s+13Ps8=)"Q\!K=cfg_q+G'R^s*t~>
`r?'U,J_F&ipOqfCk;V;s/l>",N-[pinrb\ao*H8s7$&=~>
`r?'S+2F\ReF'.3C4ZD9s/l>"+5irGeDJd@V#;Bds7$&=~>
`r?'S+Ma>FcgI/!C4ZD9s/l>"+Q/T;cem(6Qi/%Xs7$&=~>
`r?'U,JM:&ipY"gCk;V;s/c8!,N-[pinrb\ao*H8s7$&=~>
`r?'S+24PReF044C4ZD9s/c8!+5irGeDJd@V#;Bds7$&=~>
`r?'S+MO2FcgR5"C4ZD9s/c8!+Q/T;cem(6Qi/%Xs7$&=~>
`r?'U,JM:(ipOnh,A_r2JcDbMrZg:AJ`>YJl,ilKJcG6>J,~>
`r?'S+24PTeF'+5+)6B,JcDbMrZC!mJ^iZ.l(n8"JcG6>J,~>
`r?'S+MO2HcgI,#+DQK-JcDbMrZL'aJ^<<$l'M>kJcG6>J,~>
`r?'U,JM:(ipOnh,A_r2JcDbMrZg:AJ`>YJl,ilKJcG6>J,~>
`r?'S+24PTeF'+5+)6B,JcDbMrZC!mJ^iZ.l(n8"JcG6>J,~>
`r?'S+MO2HcgI,#+DQK-JcDbMrZL'aJ^<<$l'M>kJcG6>J,~>
`r?'U,JM8",I6=rao?1.s+13Ns8=2!aarI1ip"Sa,D#m`s*t~>
`r?'S+24NN+0sD`V#P1\s+13Ns8=%rUk.%SeENe.++aI\s*t~>
`r?'S+MO0B+L9>\QiCfOs+13Ns8=(sQ\!KAcfpeq+G'R]s*t~>
`r?'M,JD4)ipY"gCk;V;s/Q+t,MpOnio/n]ao3N9s6ou<~>
`r?'J+2+JUeF044C4ZD9s/Q+t+5WfEeD\pAV#DHes6ou<~>
`r?'K+MF,IcgR5"C4ZD9s/Q+t+PrH9cf*47Qi8+Ys6ou<~>
`r?'(,J;.*ipXtj,A_1Is+13Ls8=1uaarI4ionM_,D#m`s*t~>
`r?'$+2"DVeF017+)5PAs+13Ls8=%qUk.%VeEE_,++aI\s*t~>
`r?'%+M=&JcgR2%+DPYBs+13Ls8=(rQ\!KDcfg_o+G'R]s*t~>
`r?,g,Mq:jagU3sao6+-s+13Ls8F7uaarI4ionM_,D#m`s*t~>
`r?,c+5YkfUpee@V#G+[s+13Ls8F+qUk.%VeEE_,++aI\s*t~>
`r?,d+PttgQaY6.Qi:`Ns+13Ls8F.rQ\!KDcfg_o+G'R]s*t~>
`r?,g,Mq:jagU3sao6+-s+13Ls8F7uaarI4ionM_,D#m`s*t~>
`r?,c+5YkfUpee@V#G+[s+13Ls8F+qUk.%VeEE_,++aI\s*t~>
`r?,d+PttgQaY6.Qi:`Ns+13Ls8F.rQ\!KDcfg_o+G'R]s*t~>
`rH&`s'!%V\Dlu!s(m8dJcD\Kr?L%<J`>kPkK3ZIJcG3=J,~>
`rH&\s&Zh.\CBuCs([,bJcD\Kr?'ahJ^il4kG8%uJcG3=J,~>
`rH&]s&cn"\BjW1s([,bJcD\Kr?0g\J^<N*kEl,iJcG3=J,~>
`rGu^]#hSDn&bQFJcC<$VuQ]?g<"p*kMk[HrZd!omf.e~>
`rGuZ\tlsfn"fqtJcC<$VuQ];g8';LkLA[jrZ?^kmf.e~>
`rGu[\sL%Tn!F#gJcC<$VuQ]<g6[B:kKi=XrZHdlmf.e~>
`rGu^\]MPEm`GKFJcC<$VZ6Z@f?&U'l/LjIrZd!omf.e~>
`rGuZ\YQpgm\KktJcC<$VZ6Z<f;*uIl."jkrZ?^kmf.e~>
`rGu[\X1"Um[*rgJcC<$VZ6Z=f9_'7l-JLYrZHdlmf.e~>
`rGu^\]MPEm`GKFJcC<$VZ6Z@f?&U'l/LjIrZd!omf.e~>
`rGuZ\YQpgm\KktJcC<$VZ6Z<f;*uIl."jkrZ?^kmf.e~>
`rGu[\X1"Um[*rgJcC<$VZ6Z=f9_'7l-JLYrZHdlmf.e~>
`W,o^!'e':^>eS&rbR/cJcD\Kr?Kq9J`>qRkK3ZIJcG0<J,~>
`W,oZ!'@cf^=;SHrb@#aJcD\Kr?'XeJ^ir6kG8%uJcG0<J,~>
`W,o[!'IiZ^<c56rb@#aJcD\Kr?0^YJ^<T,kEl,iJcG0<J,~>
`W,o^!S#Z1ahZp)ao?1.s+13Is8=1nalhX`kD&!Yao*H8s6fo;~>
`W,oZ!P$XiUqkLKV#P1\s+13Is8=%jV!$5-h1jGAV#;Bds6fo;~>
`W,o[!Nsq_Qb^r9QiCfOs+13Is8=(kQflZpfnRi8Qi/%Xs6fo;~>
`W,o^!8b3,`8^1+s(m8dJcDSHr?Kn8J`?"Tk/mQHJcG0<J,~>
`W,oZ!6_jI`741Ms([,bJcDSHr?'UdJ^j#8k+qqtJcG0<J,~>
`W,o[!5u@5`6[h;s([,bJcDSHr?0[XJ^<Z.k*Q#hJcG0<J,~>
`W,o^!8b3,`8^1+s(m8dJcDSHr?Kn8J`?"Tk/mQHJcG0<J,~>
`W,oZ!6_jI`741Ms([,bJcDSHr?'UdJ^j#8k+qqtJcG0<J,~>
`W,o[!5u@5`6[h;s([,bJcDSHr?0[XJ^<Z.k*Q#hJcG0<J,~>
`W,o^!91H/`o?@,!,R5dJcDPGrZfq7s6,$nnD`NNs!**pm/MS~>
`W,oZ!7\HQ`mj@N!,@)bJcDPGrZBXcs5eg]nC6NpruZglm/MS~>
`W,o[!7/*?`m="<!,@)bJcDPGrZK^Ws5\aWnB^0^rucmmm/MS~>
`W,o^!91B-b2Vd0s(m8dJcDPGr?Kh6s2BQKnD`QOrZd!om/MS~>
`W,oZ!7\BOb1,dRs([,bJcDPGr?'Obs1s99nC6QqrZ?^km/MS~>
`W,o[!7/$=b0TF@s([,bJcDPGr?0UVs1s94nB^3_rZHdlm/MS~>
`W,l]ZcUGNm)f6CJcC<$V#UB<d`DLTJ`?7[jN7BGJcG*:J,~>
`W,lYZ_Ygpm%jVqJcC<$V#UB8d\Hm)J^j8?jJ;bsJcG*:J,~>
`W,lZZ^8n^m$I]dJcC<$V#UB9d['spJ^<o5jHoigJcG*:J,~>
`W,o^!TI:haj&i6ao<UcCk;V;s.]Pl,LX\bipl$hao3N9s6Tc9~>
`W,oZ!Rt2WUs7EXV#MP:C4ZD9s.]Pl+4?qbhgs;JeE!G)++aIYs*t~>
`W,o[!RFlSQd*kFQiA3.C4ZD9s.]Pl+OZSVhLX#DcfCGl+G'RZs*t~>
`W,o^!TI:haj&i6ao<UcCk;V;s.]Pl,LX\bipl$hao3N9s6Tc9~>
`W,oZ!Rt2WUs7EXV#MP:C4ZD9s.]Pl+4?qbhgs;JeE!G)++aIYs*t~>
`W,o[!RFlSQd*kFQiA3.C4ZD9s.]Pl+OZSVhLX#DcfCGl+G'RZs*t~>
`W,o^!913(dc0Z9rbR/cJcDGDrZfe3J`?:\j2q<GJcG'9J,~>
`W,oZ!7\3Jda[Z[rb@#aJcDGDrZBL_J^j;@j.u\sJcG'9J,~>
`W,o[!7.j8da.<Irb@#aJcDGDrZKRSJ^<r6j-TcgJcG'9J,~>
`W,l]Y0#5RlcK0CJcC<$T`>!9d)gjuoA\fPs!**pli2J~>
`W,lYY,'Utl_OPqJcC<$T`>!5d%l6Bo@2frruZglli2J~>
`W,lZY*[\bl^.WdJcC<$T`>!6d$K=0o?ZH`rucmmli2J~>
`W,l]!7%di!/fFglcB/PCk;V;s.B>i,L=J_iqDBlao*H8s6K]8~>
`W,lY!3WN$!/T:Wl_FP'C4ZD9s.B>i+4$a6eFqDPV#;Bds6K]8~>
`W,lZ!2H`a!/T:Rl^%VpC4ZD9s.B>i+O?C*ch>]FQi/%Xs6K]8~>
`W,l]!7%di!/fFglcB/PCk;V;s.B>i,L=J_iqDBlao*H8s6K]8~>
`W,lY!3WN$!/T:Wl_FP'C4ZD9s.B>i+4$a6eFqDPV#;Bds6K]8~>
`W,lZ!2H`a!/T:Rl^%VpC4ZD9s.B>i+O?C*ch>]FQi/%Xs6K]8~>
`W,l]Y/pe!e'fPtip"SbCk;V;s.B>i,L=J_iqDBlao*H8s6K]8~>
`W,lYY+u09bKD!`eENe/C4ZD9s.B>i+4$a6eFqDPV#;Bds6K]8~>
`W,lZY*T7$aiP[]cfperC4ZD9s.B>i+O?C*ch>]FQi/%Xs6K]8~>
`W,l]!-5-^!*\=?l,ip@JcC<$T)\g8bK5=pq;UDUrZd!olMlA~>
`W,lY!-#!7!*A+.l(n;nJcC<$T)\g4bG9^=q:+E"rZ?^klMlA~>
`W,lZ!-#!*!*J1*l'MBaJcC<$T)\g5bEme+q9S&erZHdllMlA~>
`;ff]WQG0D!.<qg![`MNlH0$AJcC<$ScA^7b/o4oqr6VWr?HmnlMlA~>
`;ffYWMKPq!.!_V![</FlD4DoJcC<$ScA^3b+sU<qpaW$r?$UjlMlA~>
`;ffZWL*We!.*eR![E5GlBhKbJcC<$ScA^4b*R\*qp48gr?-[klMlA~>
`;ff]WQG0D!.<qg![`MNlH0$AJcC<$ScA^7b/o4oqr6VWr?HmnlMlA~>
`;ffYWMKPq!.!_V![</FlD4DoJcC<$ScA^3b+sU<qpaW$r?$UjlMlA~>
`;ffZWL*We!.*eR![E5GlBhKbJcC<$ScA^4b*R\*qp48gr?-[klMlA~>
`;ff]VTAr"9HteMir()'alVXMao?1.s+13@s8=1baarIKio8)Y,D#m[s*t~>
`;ffYVPF=D8KT&BeGUHjUug_(V#P1\s+13@s8=%^Uk.%meDd;&++aIWs*t~>
`;ffZVO%D28g#8Eci"sfQf[>pQiCfOs+13@s8=(_Q\!K[cf1;i+G'RXs*t~>
`;ff]!1Th,s4R8oq;MBJr?M?Vl,irMs(m8dJcD8?r?KG+J`?[gi5tpBJcG$8J,~>
`;ffY!1B[Zs2+XTq:#C9r?)'Hl(n>$s([,bJcD8?r?'.WJ^j\Ki2$;nJcG$8J,~>
`;ffZ!1KaNs1/"Lq9K%5r?2-Fl'MDms([,bJcD8?r?04KJ^=>Ai0XBbJcG$8J,~>
`;ff]!6:hU!$hL3!5ACV!2JGnrbR/cJcD5>r?KA)J`>S/rZd!ol2Q8~>
`;ffY!61b/!$D4,!4;\H!28;Grb@#aJcD5>r?'(UJ^iSQrZ?^kl2Q8~>
`;ffZ!61b"!$M:,!3uJF!28;:rb@#aJcD5>r?0.IJ^<5?rZHdll2Q8~>
`;fi^!B98:ao<U`mf4Tiao6+-s+13=s8=1_aarI0ao*H8s69Q6~>
`;fiZ!Air5V#MP7li8-bV#G+[s+13=s8=%[Uk.%RV#;Bds69Q6~>
`;fi[!As#6QiA3+lMr'bQi:`Ns+13=s8=(\Q\!K@Qi/%Xs69Q6~>
`;fi^!B98:ao<U`mf4Tiao6+-s+13=s8=1_aarI0ao*H8s69Q6~>
`;fiZ!Air5V#MP7li8-bV#G+[s+13=s8=%[Uk.%RV#;Bds69Q6~>
`;fi[!As#6QiA3+lMr'bQi:`Ns+13=s8=(\Q\!K@Qi/%Xs69Q6~>
_Z'U+T#h!nn,=O4mon\ls(m8dJcD,;rZfD(KAte1r?Hmnl2Q8~>
_Z'U(StlBEm/A(-lrW/As([,bJcD,;rZB+TK@JeSr?$Ujl2Q8~>
_Z'U)SsKI9li&"-lWE,4s([,bJcD,;rZK1HK?rGAr?-[kl2Q8~>
_Z'X=,G*!W;Z8l_-mMo!rQ,)Xl0HIjCk;V;s-Ncb,K.]XinhfU,D#mZs*t~>
_Z'X:+.f8.:B!<W,Tg)hrM0J2kj,&DC4ZD9s-Ncb+2jt/eD@#"++aIVs*t~>
_Z'X:+J+o":]<HY,p6;lrKdQ%kj+T7C4ZD9s-Ncb+N0V#ceb#e+G'RWs*t~>
_Z'XH,FusUX::MC?XH4SaiPbPC2/F8rlGCu5AtJ^abblRao>EE=F*4tJcC<$QN-q/`6!_mhT>dB
JcFp5J,~>
_Z'XE+.]5,Wst>>>[0P2Unf(SB4le.rhKdM4)A`/Ukaa)V#OBr<HpYiJcC<$QN-q+`2&+:hPC/n
JcFp5J,~>
_Z'XF+J"kuWst>>?!Tb,Q^8g;BP<"2rg*kA4Der%Q\U@qQi9tdGWn<Bs+139s8F.ZQ\EcBQiA1Z
s6'E4~>
_Z'XH,FusUX::MC?XH4SaiPbPC2/F8rlGCu5AtJ^abblRao>EE=F*4tJcC<$QN-q/`6!_mhT>dB
JcFp5J,~>
_Z'XE+.]5,Wst>>>[0P2Unf(SB4le.rhKdM4)A`/Ukaa)V#OBr<HpYiJcC<$QN-q+`2&+:hPC/n
JcFp5J,~>
_Z'XF+J"kuWst>>?!Tb,Q^8g;BP<"2rg*kA4Der%Q\U@qQi9tdGWn<Bs+139s8F.ZQ\EcBQiA1Z
s6'E4~>
_Z'XOCmE*Jk/k`_XiSSS3W@,#ir1/':G)Pj!93o$s!E<sJcD):r?K5%LuR:5r?HmnkPp&~>
_Z'XLC6bS#jeS]hXN/AN2?'BOeG^Nj9Ig#`!7^ogs!**pJcD):r?&qQLt(:Wr?$UjkPp&~>
_Z'XMC6b+kjd2=NXN/AN2ZB$Cci,$f9e-,b!71Qcs!**pJcD):r?0"ELsOqEr?-[kkPp&~>
_>aLOLrflHS=J#V/M6Gc,Q7WB,D#lGs.98h,JhK[in_`T,D#mXs*t~>
_>aLMLnk7tR[VWN.OsfZ+8u3>++aHCs.98h+2Ob2eD6r!++aITs*t~>
_>aLMLmJ>hR[VZP.OscY+T;<?+G'QDs.98h+MjD&ceXrd+G'RUs*t~>
_>jLNKusAEp*9P9qBPt=!$d'pJcD_Lr?K,"NT/a8rZd!ok5Tr~>
_>jLLKr"aYp)j85qB,\9!$?dlJcD_Lr?&hNNRZaZrZ?^kk5Tr~>
_>jLLKpVhBp)s>6qB5b:!$HjmJcD_Lr?/nBNR-CHrZHdlk5Tr~>
_>jLNKusAEp*9P9qBPt=!$d'pJcD_Lr?K,"NT/a8rZd!ok5Tr~>
_>jLLKr"aYp)j85qB,\9!$?dlJcD_Lr?&hNNRZaZrZ?^kk5Tr~>
_>jLLKpVhBp)s>6qB5b:!$HjmJcD_Lr?/nBNR-CHrZHdlk5Tr~>
_#OFNL<0E_r$1n7qBPt=q]l(>!$d'pJcE(Vr?K)!OQ,$:r?Hmnk5Tr~>
_#OFLL84f7r#bV3qB,\9q]Ge:!$?dlJcE(Vr?&eMOOW$\r?$Ujk5Tr~>
_#OFLL6hm*r#k\4qB5b:q]Pk;!$HjmJcE(Vr?/kAOO)[Jr?-[kk5Tr~>
_#OCMLrfYVr$1J+q]l(>q]g[lJcE7[rZf/!OlG*:r?Hmnk5Tr~>
_#OCKLnk%#r#b2'q]Ge:q]CChJcE7[rZAkMOjr*\r?$Ujk5Tr~>
_#OCKLmJ+fr#k8(q]Pk;q]LIiJcE7[rZJqAOjDaJr?-[kk5Tr~>
^Ae1LMobtUqBOksq]l(>q'1IjJcE[grZf(tPN(?=r?Hmnjo9i~>
^Ae1JMkg@/qB+Soq]Ge:q&b1fJcE[grZAeKPLS?_r?$Ujjo9i~>
^Ae1JMjFG#qB4Ypq]Pk;q&k7gJcE[grZJk?PL&!Mr?-[kjo9i~>
^An4LN61o@e,T4grVu^=JcC<$ci<th]?->tg<':<JcFj3J,~>
^An4JN26:le,T4crVu^9JcC<$ci<td];1_Ag8+ZhJcFj3J,~>
^An4JN0jA`e,T4drVu^:JcC<$ci<te]9ef/g6_a\JcFj3J,~>
^An4LN61o@e,T4grVu^=JcC<$ci<th]?->tg<':<JcFj3J,~>
^An4JN26:le,T4crVu^9JcC<$ci<td];1_Ag8+ZhJcFj3J,~>
^An4JN0jA`e,T4drVu^:JcC<$ci<te]9ef/g6_a\JcFj3J,~>
^&J+L,EBkGci#*,s8!u>s8!sks+14's8F7SadD)?ao*H8s5j92~>
^&J+J+-*,scM\j's8!i:s8!ggs+14's8F+OUmTZaV#;Bds5j92~>
^&J+J+HDcgcM\m(s8!l;s8!jhs+14's8F.PQ^H+OQi/%Xs5j92~>
^&S+Ks!*WI"0a7",J!jN,Q7Z>,D#lGs5X.Y,Ikjbin;HP,D#mTs*t~>
^&S+Iru[>u"0Nsm+1_FJ+8u6:++aHCs5X.Y+1S,9eCgYr++aIPs*t~>
^&S+IrudDi"0X'p+M%OK+T;?;+G'QDs5X.Y+Lmc-ce4Z`+G'RQs*t~>
]`7tION@Md-*7.D,Q.T<,D#lGs6p!e,Ibdcin2BO,D#mTs*t~>
]`7tGOJDn;+ft_@+8l08++aHCs6p!e+1J&:eC^Sq++aIPs*t~>
]`7tGOI#u/,-:hA+T299+G'QDs6p!e+Ld].ce+T_+G'RQs*t~>
]`7tION@Md-*7.D,Q.T<,D#lGs6p!e,Ibdcin2BO,D#mTs*t~>
]`7tGOJDn;+ft_@+8l08++aHCs6p!e+1J&:eC^Sq++aIPs*t~>
]`7tGOI#u/,-:hA+T299+G'QDs6p!e+Ld].ce+T_+G'RQs*t~>
]DqnIPKEf?!(Wa_q'5k<q]g[lJcGQGrZeknTAnJEr?Hmnj8XW~>
]DqnGPGJ1m!(<O\q&fS8q]CChJcGQGrZASET@DJgr?$Ujj8XW~>
]DqnGPF)8`!(EU]q&oY9q]LIiJcGQGrZJY9T?l,Ur?-[kj8XW~>
]DqhGs!*oQs(mkuq]l(>qBLRkK`D#r[E50&f#dk8JcFa0J,~>
]DqhEru[W(s([_sq]Ge:qB(:gK`D#n[A9PHeti6dJcFa0J,~>
]DqhErud\qs([_sq]Pk;qB1@hK`D#o[?mW6esH=XJcFa0J,~>
\GuPE!$e#UrG7Gm!$hIBqBPt=qBLRkO8o2(ZcT''e]Ib7JcFa0J,~>
\GuPC!$@`,rG%;k!$D1>qB,\9qB(:gO8o2$Z_XGIeYN-cJcFa0J,~>
\GuPC!$IeurG%;k!$M7?qB5b:qB1@hO8o2%Z^7N7eX-4WJcFa0J,~>
\GuPE!$e#UrG7Gm!$hIBqBPt=qBLRkO8o2(ZcT''e]Ib7JcFa0J,~>
\GuPC!$@`,rG%;k!$D1>qB,\9qB(:gO8o2$Z_XGIeYN-cJcFa0J,~>
\GuPC!$IeurG%;k!$M7?qB5b:qB1@hO8o2%Z^7N7eX-4WJcFa0J,~>
\,ZGD!$e)WrbR/c!rjJirVu^=rVu^=JcD2=rZe_jWT)CKr?HmniW"E~>
\,ZGB!$@f.rb@#a!rj>arVu^9rVu^9JcD2=rZAGAWRTCmr?$UjiW"E~>
\,ZGB!$Il"rb@#a!rjAcrVu^:rVu^:JcD2=rZJM5WR'%[r?-[kiW"E~>
[K$5BU<3Fn!HN"-s7?6j,Q.T<,Q7Z>,D#ljs8=1HaT1M,imPsI,D#mRs*t~>
[K$5@U87gG!H;e)s7?6j+8l08+8u6:++aHfs8=%DU]B5ReC(/k++aINs*t~>
[K$5@U6kn:!H;e)s7?6j+T299+T;?;+G'Qgs8=(EQN5^AcdJ0Y+G'ROs*t~>
ZiC#@V9&e0Mi3/dkPtN+rVua>rVu^=JcDqRr?JMf!:-lKd`MJ5JcFX-J,~>
ZiC#>V5+0_M2?f`kPtN'rVua:rVu^9JcDqRr?&5=!9LH7d\QjaJcFX-J,~>
ZiC#>V3_7RM2?f`kPtN(rVua;rVu^:JcDqRr?/;1!9CB1d[0qUJcFX-J,~>
ZN'l>XN:Ger1/E=gAh0trVu^=rVu^=JcE:\rZeSfZJs6QrZd!ohuA3~>
ZN'l<XJ>h<r1&?<gAh0prVu^9rVu^9JcE:\rZA;=ZII6srZ?^khuA3~>
ZN'l<XHro0r1&?<gAh0qrVu^:rVu^:JcE:\rZJA1ZHpmarZHdlhuA3~>
ZN'l>XN:Ger1/E=gAh0trVu^=rVu^=JcE:\rZeSfZJs6QrZd!ohuA3~>
ZN'l<XJ>h<r1&?<gAh0prVu^9rVu^9JcE:\rZA;=ZII6srZ?^khuA3~>
ZN'l<XHro0r1&?<gAh0qrVu^:rVu^:JcE:\rZJA1ZHpmarZHdlhuA3~>
YQ+Q;YfZm8JcEsorZhCAqBPt=qBLRk`;ff]X3%j1d)l52JcFU,J,~>
YQ+Q9Yb_8gJcEsorZD+=qB,\9qB(:g`;ffYX/*5Sd%pU^JcFU,J,~>
YQ+Q9Ya>?ZJcEsorZM1>qB5b:qB1@h`;ffZX-^<Ad$O\RJcFU,J,~>
XT/37!$f%rr1/E=_#OBYr;ZU<rVua>JcF$qr?JAb\`1rWr?HmnhZ&*~>
XT/35!$AbIr1&?<_#OBUr;ZU8rVua:JcF$qr?&)9\^\s$r?$UjhZ&*~>
XT/35!$Jh=r1&?<_#OBVr;ZU9rVua;JcF$qr?//-\^/Tgr?-[khZ&*~>
W;lj5^<$@"rLJN>Z2abIrVua>rVu^=JcFF'r?J8_^Z*M[r?Hmnh>`!~>
W;lj3^8(`NrLAH=Z2abErVua:rVu^9JcFF'r?%u6^XUN(r?$Ujh>`!~>
W;lj3^6\gBrLAH=Z2abFrVua;rVu^:JcFF'r?/&*^X(/kr?-[kh>`!~>
W;lj5^<$@"rLJN>Z2abIrVua>rVu^=JcFF'r?J8_^Z*M[r?Hmnh>`!~>
W;lj3^8(`NrLAH=Z2abErVua:rVu^9JcFF'r?%u6^XUN(r?$Ujh>`!~>
W;lj3^6\gBrLAH=Z2abFrVua;rVu^:JcFF'r?/&*^X(/kr?-[kh>`!~>
VZ6R1a2n<+qji<<V#UB<rVu^=rr;d=JcFg2r?J2]`8\q]r?Hmnh>`!~>
VZ6R/a.r\Wqj`6;V#UB8rVu^9rr;d9JcFg2r?%o4`72r*r?$Ujh>`!~>
VZ6R/a-QcKqj`6;V#UB9rVu^:rr;d:JcFg2r?.u(`6ZSmr?-[kh>`!~>
UAt(+!$gpRs5<.`s!.E3JcCu7r?M=Aq'5k<qBLRkmJm22Urg[:b/sT,JcFO*J,~>
UAt()!$CX)s3p5.ru_-.JcCu7r?)%=q&fS8qB(:gmJm2.Unl&\b,"tXJcFO*J,~>
UAt()!$L]rs3Kqrruh3/JcCu7r?2+>q&oY9qB1@hmJm2/UmK-Jb*W&LJcFO*J,~>
ScAP&r?M9_%-Q-*7ReU_I!iime'n$4rZ_PrG*%fUrLJN>K`CuqrVu^=rVua>JcGKEr?J)ZcJlpe
q]g[lh#Dm~>
ScAP$r?)!6%-5m$6:)bPH$R9f\@D7.rZ;8lFH2BMrLAH=K`CumrVu^9rVua:JcGKEr?%f1cIBq2
q]CChh#Dm~>
ScAP$r?2'*%-5m$6UMtTH@!KiY-.JbrZD>mFcMKOrLAH=K`CunrVu^:rVua;JcGKEr?.l%cHjRu
q]LIih#Dm~>
R/d1u$"[XW@q&Y99Kk*),6U"t8690t@f7MTO+hq-Ebp=,JcG9?r?M:@q]l(>q]g[lr?IuWe)JBh
r?HmngAc[~>
R/d1s$"ICO?sd#-8NJ?s*s=Jj79!Ok?i;&MNIuM%Deak'JcG9?r?)"<q]Ge:q]CChr?%].e'uC5
r?$UjgAc[~>
R/d1s$"IFQ@:3518inR!+9XVm7T<[m@/V2ONJ)V(E,'t(JcG9?r?2(=q]Pk;q]LIir?.c"e'H%#
r?-[kgAc[~>
R/d1u$"[XW@q&Y99Kk*),6U"t8690t@f7MTO+hq-Ebp=,JcG9?r?M:@q]l(>q]g[lr?IuWe)JBh
r?HmngAc[~>
R/d1s$"ICO?sd#-8NJ?s*s=Jj79!Ok?i;&MNIuM%Deak'JcG9?r?)"<q]Ge:q]CChr?%].e'uC5
r?$UjgAc[~>
R/d1s$"IFQ@:3518inR!+9XVm7T<[m@/V2ONJ)V(E,'t(JcG9?r?2(=q]Pk;q]LIir?.c"e'H%#
r?-[kgAc[~>
MuWStr;ZdPr?D;YrVun6s)J-uS,NB`Sc&NbSc/TbD#OA6-2]"cs8!u=s8+&>s8!u=s8!u=s8!u=
s8+$ls4IAM,Q7Z>,Q%N<,E;a$,Fus2ikrn:,D#mJs*t~>
MuWSpr;ZdLr>u#SrVun4s).ppRJm0^SG`EaSGiKaCAn/4+oEG[s8!i9s8*o:s8!i9s8!i9s8!i9
s8*mhs4IAM+8u6:+8c*8+-$<u+.]4^eAJ*\++aIFs*t~>
MuWSqr;ZdMr?))TrVun4s)8!qRf39_SG`EaSGiKaCAn/4,5`S]s8!l:s8*r;s8!l:s8!l:s8!l:
s8*pis4IAM+T;?;+T)39+H?F!+J"kRcbl+J+G'RGs*t~>
JcG`LrZ_Lr9MB-us8?a7G*2b'qORQar1*hVrVu_1rVua>rVu[<rVua>rVu^=rVu^=rVu^=rVua>
rVu[<rVua>rVu^=rVu^=rVu^=rVua>rVu[<rVua>rVu^=rVu^=rVujA_>jKZrVu[<rVu^=QiI"/
R*"LM^<-9tJcFF'J,~>
JcG`LrZ;4k8P*Lls8?[5FH?D#qOIK`r1!bTrVu_/rVua:rVu[8rVua:rVu^9rVu^9rVu^9rVua:
rVu[8rVua:rVu^9rVu^9rVu^9rVua:rVu[8rVua:rVu^9rVu^9rVuj=_>jKVrVu[8rVu^9QiI"+
R&&lo^81ZKJcFF'J,~>
JcG`LrZD:m8kN^os8?[5FHHJ$qOIK`r1!bTrVu_/rVua;rVu[9rVua;rVu^:rVu^:rVu^:rVua;
rVu[9rVua;rVu^:rVu^:rVu^:rVua;rVu[9rVua;rVu^:rVu^:rVuj>_>jKWrVu[9rVu^:QiI",
R$Zs]^6ea?JcFF'J,~>
JcDnQs!.LBqBPt=qBPt=qBPt=q]l(>q'5k<q]l(>qBPt=qBPt=qBPt=q]l(>q'5k<q]l(>qBPt=
qBPt=qBPt=q]l(>q'5k<q]l(>qBPt=qBPt=qBPt=q]l(>q'5q>q'5k<qBN-Br$.BHoA[:%r?Hmn
f`-I~>
JcDnQru_4>qB,\9qB,\9qB,\9q]Ge:q&fS8q]Ge:qB,\9qB,\9qB,\9q]Ge:q&fS8q]Ge:qB,\9
qB,\9qB,\9q]Ge:q&fS8q]Ge:qB,\9qB,\9qB,\9q]Ge:q&fY:q&fS8qB)j>r#_)to@1:Gr?$Uj
f`-I~>
JcDnQruh:?qB5b:qB5b:qB5b:q]Pk;q&oY9q]Pk;qB5b:qB5b:qB5b:q]Pk;q&oY9q]Pk;qB5b:
qB5b:qB5b:q]Pk;q&oY9q]Pk;qB5b:qB5b:qB5b:q]Pk;q&o_;q&oY9qB2p?r#h/ho?Xq5r?-[k
f`-I~>
JcDnQs!.LBqBPt=qBPt=qBPt=q]l(>q'5k<q]l(>qBPt=qBPt=qBPt=q]l(>q'5k<q]l(>qBPt=
qBPt=qBPt=q]l(>q'5k<q]l(>qBPt=qBPt=qBPt=q]l(>q'5q>q'5k<qBN-Br$.BHoA[:%r?Hmn
f`-I~>
JcDnQru_4>qB,\9qB,\9qB,\9q]Ge:q&fS8q]Ge:qB,\9qB,\9qB,\9q]Ge:q&fS8q]Ge:qB,\9
qB,\9qB,\9q]Ge:q&fS8q]Ge:qB,\9qB,\9qB,\9q]Ge:q&fY:q&fS8qB)j>r#_)to@1:Gr?$Uj
f`-I~>
JcDnQruh:?qB5b:qB5b:qB5b:q]Pk;q&oY9q]Pk;qB5b:qB5b:qB5b:q]Pk;q&oY9q]Pk;qB5b:
qB5b:qB5b:q]Pk;q&oY9q]Pk;qB5b:qB5b:qB5b:q]Pk;q&o_;q&oY9qB2p?r#h/ho?Xq5r?-[k
f`-I~>
JcC<$]Dq^PrVua>rVu^=rVu^=rVu^=rVua>rVu[<rVua>rVu^=rVu^=rVu^=rVua>rVu[<s8Vm>
rr;d=rr;d=rVu^=rVua>rVu[<rVua>rVu^=rr;g>r;ZO:s2k-_rQ4p]qoSa\J]ZWfr?Hmnf)L7~>
JcC<$]Dq^LrVua:rVu^9rVu^9rVu^9rVua:rVu[8rVua:rVu^9rVu^9rVu^9rVua:rVu[8s8Vm:
rr;d9rr;d9rVu^9rVua:rVu[8rVua:rVu^9rr;g:r;ZO6s.oN6rM9<4qkX-3JY_"qr?$Ujf)L7~>
JcC<$]Dq^MrVua;rVu^:rVu^:rVu^:rVua;rVu[9rVua;rVu^:rVu^:rVu^:rVua;rVu[9s8Vm;
rr;d:rr;d:rVu^:rVua;rVu[9rVua;rVu^:rr;g;r;ZO7s-NU*rKmC(qj74'JX>)Wr?-[kf)L7~>
JcC<$JcE[gq]l(>q'5k<q]l+?q'5n=q'5k<qBPt=q]l(>q'5k<q]l(>qBQ">qBPq<n0@nRq]l![
q]l']qBQ!]qBPp[qBPs\q]l']q]l![q]l']!j`phrW)tJs2k<#!5JM?!5JHR#1:oK`Mn*,^<-9t
JcF=$J,~>
JcC<$JcE[gq]Ge:q&fS8q]Gh;q&fV9q&fS8qB,\9q]Ge:q&fS8q]Ge:qB,_:qB,Y8n/qV)q]G^2
q]Gd4qB,^4qB,X2qB,[3q]Gd4q]G^2q]Gd4!jNdfrW)tJs.o\E!58A;!58<+#0tTB_526q^81ZK
JcF=$J,~>
JcC<$JcE[gq]Pk;q&oY9q]Pn<q&o\:q&oY9qB5b:q]Pk;q&oY9q]Pk;qB5e;qB5_9n0%[rq]Pd&
q]Pj(qB5d(qB5^&qB5a'q]Pj(q]Pd&q]Pj(!jE[crW)tJs-Nc3!5/;:!5/5r#0tQ@_526q^6ea?
JcF=$J,~>
JcC<$JcDPGr$2.>qBPt=r$0GcrZh@@n0@nRq]l![q]l']qBQ!]qBPp[qBPs\q]l']q]l![q]l']
!+#F$s2k<#"G7'h$=E_Q#!k[H1+a^q^WHBuJcF:#J,~>
JcC<$JcDPGr#bk:qB,\9r#a/_rZD(<n/qV)q]G^2q]Gd4qB,^4qB,X2qB,[3q]Gd4q]G^2q]Gd4
!*o@#s.o\E"G.!g$=3S*#!G:>/h%ka^SLcLJcF:#J,~>
JcC<$JcDPGr#kq;qB5b:r#j5`rZM.=n0%[rq]Pd&q]Pj(qB5d(qB5^&qB5a'q]Pj(q]Pd&q]Pj(
!*f:"s-Nc3"G$pf$=3Rr#!G:>0.J(e^R+j@JcF:#J,~>
JcC<$JcDPGr$2.>qBPt=r$0GcrZh@@n0@nRq]l![q]l']qBQ!]qBPp[qBPs\q]l']q]l![q]l']
!+#F$s2k<#"G7'h$=E_Q#!k[H1+a^q^WHBuJcF:#J,~>
JcC<$JcDPGr#bk:qB,\9r#a/_rZD(<n/qV)q]G^2q]Gd4qB,^4qB,X2qB,[3q]Gd4q]G^2q]Gd4
!*o@#s.o\E"G.!g$=3S*#!G:>/h%ka^SLcLJcF:#J,~>
JcC<$JcDPGr#kq;qB5b:r#j5`rZM.=n0%[rq]Pd&q]Pj(qB5d(qB5^&qB5a'q]Pj(q]Pd&q]Pj(
!*f:"s-Nc3"G$pf$=3Rr#!G:>0.J(e^R+j@JcF:#J,~>
JcC<$JcD2=qBPt=q]l(>qBO)]r?J#X!\k9!rW)tJs2k<#"IphW));'2qBNetr$-dmeGk%~>
JcC<$JcD2=qB,\9q]Ge:qB*fYr?%`/!\P&srW)tJs.o\E"I^YT)(ti_qB*MKr#^LieGk%~>
JcC<$JcD2=qB5b:q]Pk;qB3lZr?.f#!\P&srW)tJs-Nc3"IUSS))(oSqB3S?r#gRjeGk%~>
JcC<$JcCf2q]l(>qBPt=q]jPhr$.KKrn=d%r$-dmdf4g~>
JcC<$JcCf2q]Ge:qB,\9q]F8dr#_3"rn=cUr#^Lidf4g~>
JcC<$JcCf2q]Pk;qB5b:q]O>er#h8krn=cHr#gRjdf4g~>
JcC<$JcCH(qBPt=qBPt=q]jnrr$-d7aN=?)JcF-tJ,~>
JcC<$JcCH(qB,\9qB,\9q]FVnr#^KcaJA_UJcF-tJ,~>
JcC<$JcCH(qB5b:qB5b:q]O\or#gQWaHufIJcF-tJ,~>
JcC<$JcC<$qZ$F;r;ZU<rVud?jT#-&J]Z0YqBLRkd/SU~>
JcC<$JcC<$qZ$F7r;ZU8rVud;jT#-"JY^PdqB(:gd/SU~>
JcC<$JcC<$qZ$F8r;ZU9rVud<jT#-#JX=WJqB1@hd/SU~>
JcC<$JcC<$qZ$F;r;ZU<rVud?jT#-&J]Z0YqBLRkd/SU~>
JcC<$JcC<$qZ$F7r;ZU8rVud;jT#-"JY^PdqB(:gd/SU~>
JcC<$JcC<$qZ$F8r;ZU9rVud<jT#-#JX=WJqB1@hd/SU~>
JcC<$JcC<$n,N5/rVua>rVud?mJm)/J]Z9\q'1Ijci8L~>
JcC<$JcC<$n,N5+rVua:rVud;mJm)+JY^Ygq&b1fci8L~>
JcC<$JcC<$n,N5,rVua;rVud<mJm),JX=`Mq&k7gci8L~>
JcC<$JcC<$jT#*%rVu^=rVud?p](.9J]ZE`q'1Ijbl<1~>
JcC<$JcC<$jT#*!rVu^9rVud;p](.5JY^ekq&b1fbl<1~>
JcC<$JcC<$jT#*"rVu^:rVud<p](.6JX=lQq&k7gbl<1~>
JcC<$JcC<$gAh!orVu^=rVug@!<;p@J]ZWfp`k@iao?k~>
JcC<$JcC<$gAh!krVu^9rVug<!<;p<JY_"qp`G(eao?k~>
JcC<$JcC<$gAh!lrVu^:rVug=!<;p=JX>)Wp`P.fao?k~>
JcC<$JcC<$gAh!orVu^=rVug@!<;p@J]ZWfp`k@iao?k~>
JcC<$JcC<$gAh!krVu^9rVug<!<;p<JY_"qp`G(eao?k~>
JcC<$JcC<$gAh!lrVu^:rVug=!<;p=JX>)Wp`P.fao?k~>
JcC<$JcC<$ci<hdrVuF5J]Zonp*5.ga8^Y~>
JcC<$JcC<$ci<h`rVuF1JY_;$p)ekca8^Y~>
JcC<$JcC<$ci<harVuF2JX>A_p)nqda8^Y~>
JcC<$JcC<$`;fZY!<;g=J][/uoco%f_uG5~>
JcC<$JcC<$`;fZU!<;g9JY_P+ocJbb_uG5~>
JcC<$JcC<$`;fZV!<;g:JX>VfocShc_uG5~>
JcC<$JcC<$\c;OOqT/`mJ][W-o-8hd_#Jo~>
JcC<$JcC<$\c;OKqP4,6JY`"8o,iP`_#Jo~>
JcC<$JcC<$\c;OLqNh3#JX?(so,rVa_#Jo~>
JcC<$JcC<$\c;OOqT/`mJ][W-o-8hd_#Jo~>
JcC<$JcC<$\c;OKqP4,6JY`"8o,iP`_#Jo~>
JcC<$JcC<$\c;OLqNh3#JX?(so,rVa_#Jo~>
JcC<$JcC<$\Gu@L!QiW<ao'9L,D#m,s*t~>
JcC<$JcC<$\Gu@H!MllLV#7%W++aI(s*t~>
JcC<$JcC<$\Gu@I!LKR4Qi*3=+G'R)s*t~>
JcC<$JcC<$[K$+K!`$24QH@o,JcE1YJ,~>
JcC<$JcC<$[K$+G!_]r/QDE:XJcE1YJ,~>
JcC<$JcC<$[K$+H!_g#0QC$ALJcE1YJ,~>
JcC<$JcC<$ZiBeF[E6H6JcDnQJ,~>
JcC<$JcC<$ZiBeB[A:hbJcDnQJ,~>
JcC<$JcC<$ZiBeC[?noVJcDnQJ,~>
JcC<$JcC<$YlFGB`6$.HJcDDCJ,~>
JcC<$JcC<$YlFG>`2(NtJcDDCJ,~>
JcC<$JcC<$YlFG?`0\UhJcDDCJ,~>
JcC<$JcC<$YlFGB`6$.HJcDDCJ,~>
JcC<$JcC<$YlFG>`2(NtJcDDCJ,~>
JcC<$JcC<$YlFG?`0\UhJcDDCJ,~>
JcC<$JcC<$XT.o;e]Hu!JcC<$q>Ys~>
JcC<$JcC<$XT.o7eYM@MJcC<$q>Ys~>
JcC<$JcC<$XT.o8eX,GAJcC<$q>Ys~>
JcC<$JcC<$WrMN4m)e63JcC<$mf.e~>
JcC<$JcC<$WrMN0m%iV_JcC<$mf.e~>
JcC<$JcC<$WrMN1m$H]SJcC<$mf.e~>
JcC<$JcC<$U]8O_JcC<$jSs`~>
JcC<$JcC<$U]8O[JcC<$jSs`~>
JcC<$JcC<$U]8O\JcC<$jSs`~>
JcC<$JcC<$U]8O_JcC<$jSs`~>
JcC<$JcC<$U]8O[JcC<$jSs`~>
JcC<$JcC<$U]8O\JcC<$jSs`~>
JcC<$JcC<$Sc@OkJcC<$f`-I~>
JcC<$JcC<$Sc@OgJcC<$f`-I~>
JcC<$JcC<$Sc@OhJcC<$f`-I~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
JcC<$JcC<$JcC<$JcF-tJ,~>
%%EndData
showpage
%%Trailer
end
%%EOF

%%EndDocument
 @endspecial 741 2604 a
tx@Dict begin  PutEnd  end
 741 2604 a 741 2604 a
tx@Dict begin { 28.45274 206.28238 } PutCoor PutBegin  end
 741 2604
a 710 2632 a Fe(A)741 2604 y
tx@Dict begin  PutEnd  end
 741 2604 a 741 2604 a
tx@Dict begin { 170.71646 206.28238 } PutCoor PutBegin  end
 741
2604 a 707 2632 a Fe(B)741 2604 y
tx@Dict begin  PutEnd  end
 741 2604 a 741 2604
a
tx@Dict begin { 85.35823 177.82964 } PutCoor PutBegin  end
 741 2604 a 716 2625 a Fe(f)741 2604 y
tx@Dict begin  PutEnd  end
 741 2604 a 741
2604 a
tx@Dict begin { 142.26372 177.82964 } PutCoor PutBegin  end
 741 2604 a 675 2630 a Fe(g)718 2600 y Fd(\000)p
Fc(1)741 2604 y
tx@Dict begin  PutEnd  end
 741 2604 a 741 2604 a
tx@Dict begin { 28.45274 142.26372 } PutCoor PutBegin  end
 741 2604 a 455
2625 a Fe(A)517 2637 y Fc(1)578 2625 y Fb(:=)23 b Fe(A)18
b Fa(\000)g Fe(g)s Fb(\()p Fe(B)t Fb(\))741 2604 y
tx@Dict begin  PutEnd  end
 741
2604 a 0 TeXcolorgray 1860 5402 a Fb(1)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
