=>PYTHONTEX#py#default#default#0#block####Uni4.tex#793#
import numpy as np
import scipy.optimize
from matplotlib import pyplot as plt
=>PYTHONTEX#py#default#default#1#block####Uni4.tex#801#
def G(x):
    return x**2*np.sin(1/x)
x=np.arange(0,.15,0.0000001)
y=G(x)
plt.plot(x,y)
=>PYTHONTEX#py#default#default#2#block####Uni4.tex#821#
def F(x):
    return 2*x*np.sin(1/x) - np.cos(1/x)
x = scipy.optimize.broyden2(F, .13, f_tol=1e-14)
x,1-x, G(x)
=>PYTHONTEX#py#default#default#3#i####Uni4.tex#828#
np.float32(x)
=>PYTHONTEX#py#default#default#4#i####Uni4.tex#828#
np.float32(G(x))
=>PYTHONTEX#py#default#default#5#i####Uni4.tex#828#
np.float32(1-x)
=>PYTHONTEX#py#default#default#6#block####Uni4.tex#835#
def f0(x):
    x1=x[x<=0]
    x2=x[(x<=0.13163877)*(x>0)]
    x3=x[(x>0.13163877)*(x<0.868361226)]
    x4=x[(x>=0.868361226)*(x<1)]
    x5=x[x>=1]
    y1=np.zeros(np.shape(x1))
    y2=x2**2*np.sin(1/x2)
    y3=0.01675771541054875*np.ones(np.shape(x3))
    y4=(1-x4)**2*np.sin(1/(1-x4))
    y5=np.zeros(np.shape(x5))
    return np.concatenate((y1,y2,y3,y4,y5), axis=None)
=>PYTHONTEX#py#default#defaultverb#0#verbatim####Uni4.tex#851#
def volterra(x,n,a=0,b=1):
    if n == 0:
        return 0

    a1,b1 = 2.*a/3. + b/3., a/3. + 2.*b/3.
    pto_med = .5*(a+b)
    return volterra(x,n-1,a,a1) + (b1-a1)*f0((x-a1)/(b1-a1))\
    + volterra(x,n-1,b1,b)
=>PYTHONTEX#py#default#defaultverb#1#verbatim####Uni4.tex#864#
x=np.arange(0,1,0.0000001)
y=volterra(x,12)
plt.plot(x,y)
=>PYTHONTEX:SETTINGS#
version=0.16
outputdir=pythontex-files-ApunteAnalisisMatematico
workingdir=.
workingdirset=false
gobble=none
rerun=default
hashdependencies=default
makestderr=false
stderrfilename=full
keeptemps=none
pyfuture=default
pyconfuture=none
pygments=true
pygglobal=:GLOBAL||
fvextfile=-1
pyconbanner=none
pyconfilename=stdin
depythontex=false
pygfamily=py|python|
pygfamily=pycon|pycon|
pygfamily=sympy|python|
pygfamily=sympycon|pycon|
pygfamily=pylab|python|
pygfamily=pylabcon|pycon|
